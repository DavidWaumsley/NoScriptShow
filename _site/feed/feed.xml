<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="pretty-atom-feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
  <title>No Script Show</title>
  <subtitle>Building solid websites simply.</subtitle>
  <link href="https://noscript.show/feed/feed.xml" rel="self" />
  <link href="https://noscript.show/" />
  <updated>2024-04-11T00:00:00Z</updated>
  <id>https://noscript.show/</id>
  <author>
    <name>David Waumsley</name>
  </author>
  <entry>
    <title>Designing an effective homepage</title>
    <link href="https://noscript.show/8/" />
    <updated>2024-04-11T00:00:00Z</updated>
    <id>https://noscript.show/8/</id>
    <content type="html">&lt;h2 id=&quot;show-notes&quot;&gt;Show Notes&lt;/h2&gt;
&lt;h2 id=&quot;focussing-on-ux&quot;&gt;Focussing on UX&lt;/h2&gt;
&lt;p&gt;Web projects (particularly for the majority of low budget clients) can be hard. Even if we have defined website aims, most only have their visual preferences to guide them.&lt;/p&gt;
&lt;p&gt;They need to feel confident with how they are represented, but they are usually &amp;quot;sellers&amp;quot; trying to appeal to &amp;quot;buyers&amp;quot; who could be very different to them.&lt;/p&gt;
&lt;p&gt;Without some reference to UX (an objective approach that sees the visual site as only the tip of the design iceberg) we can lean to vanity projects that do not achieve their aims.&lt;/p&gt;
&lt;h2 id=&quot;resources-to-guide-us&quot;&gt;Resources to guide us&lt;/h2&gt;
&lt;h3 id=&quot;ux&quot;&gt;UX&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sensible.com/dont-make-me-think/&quot;&gt;Don&#39;t make me think&lt;/a&gt; - Steve Krug&lt;br&gt;
As far as humanly possible, your product should be self-evident, obvious and self-explanatory.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nngroup.com/articles/homepage-design-principles/&quot;&gt;Nielsen Norman Group&lt;/a&gt; - Dr. Jakob Nielsen, Dr. Don Norman and team&lt;br&gt;
Research group founded by the the &amp;quot;king of usability&amp;quot; and the person who coined the term User Experience (UX).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;copy&quot;&gt;Copy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://copyblogger.com/&quot;&gt;Copyblogger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://copyhackers.com/&quot;&gt;Copy Hackers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;seo&quot;&gt;SEO&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/docs/fundamentals/seo-starter-guide&quot;&gt;Google&lt;/a&gt;&lt;br&gt;
There&#39;s so much other SEO content, but too much advice that works for a while, but is not what a search engine would want.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;visual-design&quot;&gt;Visual Design&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Many resources, but for the ungifted, the UX approach of starting with the content and consistently applying the rules of proximity, colour and space to avoid an unconscious jarring can get us 90% there. Humans like consistent patterns. Then all we need a few eye candy embellishments.&lt;/li&gt;
&lt;li&gt;Sites like &lt;a href=&quot;https://dribbble.com/&quot;&gt;Dribble&lt;/a&gt; allow us to &amp;quot;borrow&amp;quot; new design ideas, but we might want to think about how fast fashion can become unfashionable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;marketing&quot;&gt;Marketing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://unbounce.com/&quot;&gt;Unbounce&lt;/a&gt;&lt;br&gt;
focussed on landing pages their content often featuring copy and user psychology.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://storybrand.com/&quot;&gt;StoryBrand&lt;/a&gt; - Donald Miller&lt;br&gt;
The idea that your brand should tell a clear story. That is a charactor (vistor) has a problem who meets a guide (your business) who give them a plan that calls them to action that ideally leads to a happy ever after.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above assumes that all know the different between what Seth Godin might call &amp;quot;Push&amp;quot; marketing (traditional) and &amp;quot;Pull&amp;quot; marketing (digital).&lt;/p&gt;
&lt;p&gt;Much marketing wisdom has come from US males of a certain age. There are indications Gen Z require more authenticity.&lt;/p&gt;
&lt;h2 id=&quot;initial-homepage-design&quot;&gt;Initial homepage design&lt;/h2&gt;
&lt;p&gt;Click on the image for the pdf version.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://noscript.show/img/Homepage.pdf&quot;&gt;&lt;img src=&quot;https://noscript.show/img/Homepage.webp&quot; alt=&quot;image of the light and dark version of the homepage.&quot;&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;details&gt;
&lt;summary&gt;Transcript&lt;/summary&gt;&lt;/details&gt;</content>
  </entry>
  <entry>
    <title>How do we start a website project?</title>
    <link href="https://noscript.show/7/" />
    <updated>2024-03-27T00:00:00Z</updated>
    <id>https://noscript.show/7/</id>
    <content type="html">&lt;h2 id=&quot;show-notes&quot;&gt;Show Notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The perfect project management system only lives in the abstract. Communication and technology evolves.&lt;/li&gt;
&lt;li&gt;Although self indulgent, we have a live project where we get to look at things from both a designer and client&#39;s perspective.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There has been a shift in design to soft skills and agile approaches. More human than AI and more scientific to attempt to &amp;quot;falsify&amp;quot; (than to rigidly hold to old beliefs).&lt;/p&gt;
&lt;h2 id=&quot;three-questions&quot;&gt;Three Questions&lt;/h2&gt;
&lt;p&gt;The MDN web docs has a short article called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Design_and_accessibility/Thinking_before_coding&quot;&gt;How do I start to design my website?&lt;/a&gt; that talks about &amp;quot;project ideation&amp;quot; in plain english. It asks us 3 questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What exactly do I want to accomplish?&lt;/li&gt;
&lt;li&gt;How will a website help me reach my goals?&lt;/li&gt;
&lt;li&gt;What needs to be done, and in what order, to reach my goals?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This quote is from the MDN:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“When starting with a web project, many people focus on the technical side. Of course you must be familiar with the technique of your craft, but what really matters is what you want to accomplish. Yes, it seems obvious, but too many projects fail not from a lack of technical know-how, but from lack of goals and vision.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;a-clients-brief&quot;&gt;A client&#39;s brief&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Do we ask for and get answers to these questions?&lt;/li&gt;
&lt;li&gt;Do we get useful answers or need to prompt?&lt;/li&gt;
&lt;li&gt;Do we challenge the answers?&lt;/li&gt;
&lt;/ul&gt;
 &lt;details&gt;
 &lt;summary&gt;Transcript&lt;/summary&gt;
&lt;p&gt;[00:00:05] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Welcome to the No Script web show about modern web design, where we look at what we can build today with minimal dependencies and skills. Up until now, we’ve been catching up with the new spec that has been coming to the web platform over recent years, particularly with CSS.&lt;/p&gt;
&lt;p&gt;We’re probably less than halfway through that, but we’re also building the show website as part of the podcast, and we thought it’d be interesting to take a step back from the technical side. For a while and look at how we should start or any new web project. As always, I’m joined by my good friend David Waumsley.&lt;/p&gt;
&lt;p&gt;How you doing, David?&lt;/p&gt;
&lt;p&gt;[00:00:41] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, I’m very good. Actually, I should just say no, shall I tell you about my bunions?&lt;/p&gt;
&lt;p&gt;[00:00:46] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Oh, go on. let’s spend half an hour talking about that. Actually, I don’t. I don’t even know what a bunion is, but anyway. no, but it’s a very typical British complaint. so the intention of this show, right from the outset was to talk about modern things that are coming down, especially from the W three C-C-S-S-H-T-M-L and so on, and to upskill you, but particularly me, because your levels of skill of are far in excessive mind.&lt;/p&gt;
&lt;p&gt;So you are driving the whole thing. But an interesting idea that you had right from the outset was that we would make a website. almost like a co-host for the show. So there’s me and there’s you. And the website is host number three. And if you are listening to this and haven’t been following long, every time that we’ve done a show, you can find the episode related to that.&lt;/p&gt;
&lt;p&gt;So the website is no script show. This is episode seven, so simply append slash seven to the end. So no script show slash seven, and the website has been iterating slowly. and this, really, this episode is about that website and asking the question about, what’s going on? Why do we need a website?&lt;/p&gt;
&lt;p&gt;[00:01:54] &lt;strong&gt;David Waumsley:&lt;/strong&gt; So we’ve still taking a step back ’cause we’ve got our website out. Yeah. And now we’ve gotta decide who it’s for and do the design stuff. ’cause that’s really where we start. We started with clients and and we had to ask ’em why they wanted their website and we now we’ve got a perfect opportunity even though it’s a bit self-indulgent, I dunno what this episode’s gonna be like, but it does give us a live project where we can look at things from both the designer and the client perspective as we are both Yeah.&lt;/p&gt;
&lt;p&gt;[00:02:22] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; So shall I pop it on the screen? Yeah, actually that’s, that would be useful. Our show notes. First of all, I should say, dear listener, If you are listening to this, maybe quite of the things, quite a lot of the things that we’re gonna mention in this podcast episode are related to what you’re seeing on the screen.&lt;/p&gt;
&lt;p&gt;You can find us. On, YouTube, if you go to the URLI mentioned previously, no doubt there will be a link to the video. so you’ll be able to see what we’re talking about, but bear with us. Hopefully we’ll manage to do it in an audio form as well. So there it is, there is our fully featured, finished complete, and.&lt;/p&gt;
&lt;p&gt;Nothing to fix websites. It’s pretty bare bones, isn’t it? Other?&lt;/p&gt;
&lt;p&gt;[00:03:00] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah. It’s just functional. Yeah. because we didn’t do what anything I think you would expect to do for that would be classed as a design process. And here was the thing, because we decided for this podcast, we would take our source of truth for everything we talked about being the W three C, but when it comes to design, I’m not sure what that was.&lt;/p&gt;
&lt;p&gt;So I thought. How do we start a web project? Who will we go to first? And I thought, the next best thing might be the NDN records that have a short article, which is called How Do I Start To Design My Website? And it doesn’t mention the term project ideation, which is a really fancy term, but the rest of it’s really plain English and it’s basically asks us three questions which we need to answer for ourselves, Nathan, about we are.&lt;/p&gt;
&lt;p&gt;We need to ask it of ourselves and answer it. So do you wanna read out the three questions?&lt;/p&gt;
&lt;p&gt;[00:03:55] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. So here we are. So this is, like David said, you can find a link to the MDN article. It’s really easy to read. It’s probably like a, 10 minute read max, but it lays out a process, it’s a wiki, as I understand.&lt;/p&gt;
&lt;p&gt;So it’s not the, it’s not the knowledge from a singular individual. It’s been changed and modified over time. So the three questions, I guess in the, in this order are. What do I want to accomplish? What, sorry? How will a website help me reach my goals? And thirdly, what needs to be done and in what order to reach my goals?&lt;/p&gt;
&lt;p&gt;So is the intention in this episode, David, to try and answer those three questions from our perspective? Running a podcast, running a YouTube channel, and the resultant website? Is that why we’re here today? Yeah, we’re trying to do&lt;/p&gt;
&lt;p&gt;[00:04:45] &lt;strong&gt;David Waumsley:&lt;/strong&gt; that. we’re trying to put ourselves through this, but it’s worth talking a little bit.&lt;/p&gt;
&lt;p&gt;But as we did earlier, and this is where we might ramble on about, these are the questions according to this document that we really should have been asking all the time when we had clients come into us and we’re starting the website. But I think, honestly, you and I tended to do what this MDN record says is that we.&lt;/p&gt;
&lt;p&gt;Start with the technicals and then, and skip over the very fact that we need to know why we’re doing this and for who, so yeah, we have done that.&lt;/p&gt;
&lt;p&gt;But&lt;/p&gt;
&lt;p&gt;[00:05:21] &lt;strong&gt;David Waumsley:&lt;/strong&gt; I just thought those three questions are really difficult. As somebody who, let’s say you are commissioned to build the, they want you to come and build their website.&lt;/p&gt;
&lt;p&gt;You ask these three questions that you must answer these questions for me before I’ll build a single thing. And you’d probably lose the job,&lt;/p&gt;
&lt;p&gt;[00:05:38] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; wouldn’t you? I think they’re okay. So in principle, they sound like easy questions to answer. Yeah. And if you really applied some thought, they probably are fairly straightforward to answer.&lt;/p&gt;
&lt;p&gt;So there’s a couple of things around this. Firstly, exactly as you said. My goal was to get people on the phone, then turn that into a meeting of some kind. And at that meeting, I probably should have got into this process of asking these questions. But usually I skipped all of that and ended up in a conversation about here’s how we technically do it.&lt;/p&gt;
&lt;p&gt;And in my case, obviously, if you know anything about the stuff that David and I have done in the past, we are very heavily into WordPress and page builders. So that would be the thing. I’d show them the page builder and oh, we could do this, we could do this. But it wasn’t really about, why do we need to do it?&lt;/p&gt;
&lt;p&gt;And what do you want to accomplish your goals? And anytime I got even close to asking questions like that, it became immediately obvious that I was putting people on the spot and that they needed time. Yes. To think about this and not be just confronted with it live well. What do you wanna accomplish?&lt;/p&gt;
&lt;p&gt;I don’t know. I want a website. that’s the answer, right? That’s the exact answer that’s gonna come out if you just put somebody on the spot. Whereas if you gave them a week to think about it, I don’t know, an email exchange or a prior meeting where you tell them that you’re gonna dump these questions onto them, maybe the answers would come out differently.&lt;/p&gt;
&lt;p&gt;And in our shared Google Docs, I said, if you go into a shop and the intention is to buy clothes, you don’t expect to be interrogated about why you want the clothes. I’d like to buy a shirt. Why do you need a shirt? What’s the point of the shirt? How are you going to deploy the shirt?&lt;/p&gt;
&lt;p&gt;Where’s it gonna be you? You get the point, you just want to go in, pay for the money, get the finished product, in this case a shirt, read website and then get out again. And I imagine that’s the journey for most clients getting a website. A lot of them haven’t thought about this, haven’t imagined that they’re going to have to think about this, so I never, ever did that particularly effectively.&lt;/p&gt;
&lt;p&gt;Sorry,&lt;/p&gt;
&lt;p&gt;[00:07:48] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, that, that was really good actually. And I think I avoided talking about these things for most of the time I had clients.&lt;/p&gt;
&lt;p&gt;It’s only quite recently that I’ve realized I do need to get to this and I need to think about it. So I think there’s two issues with this is firstly that none of us are used to being asked why we do the business we do, and and. Do that soul searching. We’re not expecting that and we’re, we don’t often find the words.&lt;/p&gt;
&lt;p&gt;We stumble into things, so we’re not used to that. And then we’re also, in a way, we’re being asked. To provide information about who we are, what do we stand for, why do people like us, that’s something we’re not used to or don’t necessarily know about ourselves, which we need to dig into if we’re going to represent that client.&lt;/p&gt;
&lt;p&gt;So they’re not used to it on one hand. And then there’s also the issue, as you said, with buying trousers. That’s pretty easy. And it’s different from the communication of a web, which is an ongoing project to communicate something. So when you put your trousers on, pretty much if they fit and they seem pretty durable and they look fashionable to you, you’re good to go.&lt;/p&gt;
&lt;p&gt;But the website’s never going to be consistently fashionable. It’s, never going to need to, what suits you. But we need to, as designers, need to be able to design those trouss for you when it comes to a website. And, I think it’s a, very different kind of thing and I’ve recently learned a bit to make sure that these indirectly are the questions I’m asking from the first conversation.&lt;/p&gt;
&lt;p&gt;[00:09:22] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. So, my shirt analogy, I’m going to liken us to a high street shop Yes. Where you walk in and you just want to get the thing and walk out. Whereas really what we need to be is a bit more of a tailor. We need to be Yes. there is no shirt. Available. You just show up to the shop and the tailor then asks you a bunch of questions.&lt;/p&gt;
&lt;p&gt;probably not. yeah, probably a bunch of questions, but then we’ll also measure you up and do all of that due diligence, and then you’ll come back a bit later and the shirt will be ready to go. So it’s a bit more of a tailored experience. Do you know I’m very happy with, that metaphor. Yeah. I’m gonna,&lt;/p&gt;
&lt;p&gt;[00:09:58] &lt;strong&gt;David Waumsley:&lt;/strong&gt; yeah, and I like that.&lt;/p&gt;
&lt;p&gt;And you’re asking the same questions. what kind of occasion is this? For The background. What people expecting of you outta that. So it’s just Yeah, like a tailor. It is very much like that. but&lt;/p&gt;
&lt;p&gt;[00:10:11] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; still, I think that if you just dump that into the conversation and those questions are perfect, but if you dump that into the conversation, I feel that you are gonna force the person to flounder around because they probably.&lt;/p&gt;
&lt;p&gt;Don’t have to hand what the list of things they want to accomplish is, and it’s interesting in the MDN article, they get, they give an example of a fictional, client if you like, and they, end up drawing a list out. And, some of the items are expected. What do you want to accomplish?&lt;/p&gt;
&lt;p&gt;And one of them is, I want to get a new apartment. So there’s this economic incentive to make the website work for them so that at some point they’ve got this excess of money and they can move into a bigger apartment. of course that’s great, but then you need to refine that and think, do you know what?&lt;/p&gt;
&lt;p&gt;We can’t really do that in the website design. There isn’t a bit of it, which, will get you an apartment, so we can just jet us on that. But then some of the other answers that come out may be able to be used and put in a different order and so on. So I, think just. Sticking ’em all down, in that, conversation that you have, but not expecting them to do it straight away because who knows, maybe they’ve just been dumped on by their boss.&lt;/p&gt;
&lt;p&gt;okay, it’s your job to get the website. maybe they’re new to the company. Maybe they have no idea what the company ethos or mission statement is. So I think that whole thing just needs to be spread out over time somehow. Yeah,&lt;/p&gt;
&lt;p&gt;[00:11:36] &lt;strong&gt;David Waumsley:&lt;/strong&gt; we’ve got an advantage because we know how the web works and yeah, when we come, we’ll turn back to answering our own questions, with this, but we’ve got an expectation of how the web works, which is basically, we’re doing this because we know the more we put out, the more it will help the website grow where a lot of people have a.&lt;/p&gt;
&lt;p&gt;Very much a brochure site, which isn’t gonna be added to all the time. And in that sense, I’ve often started asking these questions in an indirect way to get around this, which is, can I explain to you how I understand the web will work and how it might suit I. Your business, what it might be able to do for you, which often gets me starting about the messaging and the SEO and let me do a little bit of research to see if you’ve got a lot of competition for your area.&lt;/p&gt;
&lt;p&gt;So we are talking about a certain typical client that we would get. other people, big organizations might be able to answer these questions in their company ethos, but when it’s often a single client that we’ve got who’s operating their business locally, they don’t know what the web is, they just know people have a website, they know what they look.&lt;/p&gt;
&lt;p&gt;and they say, yeah. What a website. like that sends people business like they’ve got. And then we have to start from a different point of view, don’t we? Where we have to say, let me explain how I think the web works and the competition you’ve got and how you might be able to find your own little niche in there to get&lt;/p&gt;
&lt;p&gt;[00:12:56] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; people to come to you.&lt;/p&gt;
&lt;p&gt;I think that chasm can be really profoundly wide. Yeah. Because you and I are addicted to the internet, we’ve spent the last 20 years or so really obsessing about it and I’m sure a lot of detail is passed us by. In fact, I know for both of us, there’s a lot of detail that’s passed us by.&lt;/p&gt;
&lt;p&gt;But the point is we’re, at least oay with it. What a website can achieve, what’s possible, what’s not possible, and. Typically the clients that I would, encounter were entirely obsessed about their own business. So whether that’s being a farmer or being a shop owner or being a lawyer, that’s what they’re obsessing about.&lt;/p&gt;
&lt;p&gt;And so they don’t know. So the process of explaining what can be done in the modern web and how it might help you to reach your goals, I think again, is another conversation that needs to be had, and you need to have. As part of your arsenal in that conversation, all of the different things that can be accomplished can be brought to bear from a website.&lt;/p&gt;
&lt;p&gt;What’s reasonable given a budget, what’s reasonable given the amount of, the geographical location that they’re in, or the demographic of the people that they’re hoping to talk to? Yeah, so I, I think you’re right. There’s, a big, chasm there, Yeah. There’s no, you shouldn’t expect that they all are nerds of the internet.&lt;/p&gt;
&lt;p&gt;[00:14:13] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, and there isn’t, there isn’t one perfect system is there for this. I, with a lot of the clients that have been around recently, it’s often a new site for new business in the local area where they do multiple things. And it might be in their interest to focus on one of those things that they love the most and sometimes the, last case I was mentioning to you is somebody who did multiple things.&lt;/p&gt;
&lt;p&gt;But when I looked at their SEO, because they needed to get people as a new startup just to see what the competition was like, it seemed that the searches for one particular thing that they did would be the best thing to concentrate on because everybody else. Concentrated on the multiple of things that profession did.&lt;/p&gt;
&lt;p&gt;and what I wouldn’t have known without that research, knowing that they wanted traffic was going to be the first thing is that when I put to them this, they said, oh, that’s perfect ’cause that’s really what I wanna focus on. So the website became. Very much a different thing just for that whole process.&lt;/p&gt;
&lt;p&gt;So it did get them down to, indirectly, to what they wanted to accomplish. They didn’t say it, they kept it generic to me in the first place that almost the statistics had to pull out what, they really wanted to do.&lt;/p&gt;
&lt;p&gt;[00:15:24] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. Yeah. It’ll be interesting to see, and I’m more or less certain that in every case, the answer that you’ll get or the answers plural, that you’ll get out of a client will be very different.&lt;/p&gt;
&lt;p&gt;yeah, ultimately we want a website. At some point that’s got to crop up, but the incentives about what they want to accomplish will be different. e even with businesses that are in the same sphere doing a thing which is adjacent to another business, just the personal preferences of the person and the stuff going on in their life will.&lt;/p&gt;
&lt;p&gt;Will mean that they’ve got different agendas. Do you feel that we’ve tackled a bit of that Second question. How will a website help me reach my goals? Is that the bit that we were talking about where we explain back to the client what the, what a website can achieve? Is that, did we cover it often enough?&lt;/p&gt;
&lt;p&gt;Yeah, I guess that’s, yeah.&lt;/p&gt;
&lt;p&gt;[00:16:07] &lt;strong&gt;David Waumsley:&lt;/strong&gt; What I’m starting with, isn’t it? When I’ve been doing it recently, it’s been the second question indirectly. So I’ve never asked these questions of anybody or myself, which we’ll do in a minute. But yeah, I guess the, my approach has often been explaining first what I think a website might be able to do for them, uhhuh within their budget.&lt;/p&gt;
&lt;p&gt;So you are right. I’m giving them the answer if you like, or rather I explain my perspective on what I think I could do for them and what I think we should look at. And then. They come up with their own answer to that.&lt;/p&gt;
&lt;p&gt;[00:16:36] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; It certainly feels like the first question is you the, website developer builder asking the client, and it feels like the second one is more you telling the client I.&lt;/p&gt;
&lt;p&gt;The first one is trying to get information from you, and the second one is more, okay, I know this much about the internet, I’ve got this knowledge about what’s possible and I can, give you help about how you can reach a goal. So it feels like it’s more of a, the first one is more getting, the second one is more giving, but then the third one, what needs to be done?&lt;/p&gt;
&lt;p&gt;I guess at this point, you’re in a collaboration, aren’t you? And you need to figure that out between you and put things in the right order and set goals. Yeah. And so on.&lt;/p&gt;
&lt;p&gt;[00:17:14] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yep. Yeah, exactly. Yeah, that’s actually a very good way of looking at that. So it does lead the third question in this does lead us to what we’re going to do on the site, what content we’re gonna have, number of pages, what assets need to be there, whether there needs to be some media or not, or some forms or whatever that will all come into their one needs to be done.&lt;/p&gt;
&lt;p&gt;So it is more practical, should we try and do this for&lt;/p&gt;
&lt;p&gt;[00:17:35] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; ourselves. Okay. This is gonna be painful. so the idea is that we’re gonna ask the questions about. About this podcast and related website, and we have talked about it. Whether or not these are the kind of answers you’d like from a client, who knows, but we’re gonna be honest.&lt;/p&gt;
&lt;p&gt;We’re gonna say it as it is. all right, where do we begin? yeah,&lt;/p&gt;
&lt;p&gt;[00:18:00] &lt;strong&gt;David Waumsley:&lt;/strong&gt; so what exactly do we want to accomplish with doing? we’re looking at the site really, but it is the whole podcast itself. But yeah, we’re doing that. Okay. Do you want me to&lt;/p&gt;
&lt;p&gt;[00:18:10] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; start? I’ll ask you the question and then you can answer it with your little bullet pointed list.&lt;/p&gt;
&lt;p&gt;You’ve put a lot more thought into this than I have. Mine is far more like off the cuff. You wrote down a whole load of things that backed it all up, but, okay. So David Worsley, you want a new website. what exactly do you want to accomplish?&lt;/p&gt;
&lt;p&gt;[00:18:33] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Dare you ask. Just bill me. It’s gone wrong already. Yeah.&lt;/p&gt;
&lt;p&gt;Brilliant. no, yeah, so yeah, so I did have a bit, it is a really good questions ’cause it does make you think, and in some ways we did start this when we said we’ll do this together and, my first thought, and it’s the first thing is that I’m doing it because I have to go in public and learn the stuff which I’m trying to learn.&lt;/p&gt;
&lt;p&gt;So this podcast has all been about learning all the new CSS stuff and I’ve needed to do that and. Doing something with you, it forces me to an agenda where I can’t cheat myself out learning if I’m gonna talk about it. I need to know a little bit about it, and so I’ll work harder at learning. So that’s the primary goal,&lt;/p&gt;
&lt;p&gt;[00:19:14] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; right?&lt;/p&gt;
&lt;p&gt;So the principle there, it’s a bit like if you’re learning a coding language, there’s no point in just reading a book. you have to read the book and then do it. Yes. You have to take what you’ve learned, and then put it in, apply it. So it’s a bit like that. Okay. That’s a good answer.&lt;/p&gt;
&lt;p&gt;Yep. Yeah. Okay. But there’s more.&lt;/p&gt;
&lt;p&gt;[00:19:32] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, I’ll run through ’em quickly. partly because in our industry I was mentioning to you about how Rachel Andrew, who’s been teaching HTML and CSS since the nineties, it is very much encouraging of everybody to go out there and try and teach people, as part of their learning.&lt;/p&gt;
&lt;p&gt;Because everybody is different in how they learn. So you might communicate with somebody something that she couldn’t or something. So I think it’s encouraged in our industry anyway, which builds onto the next. Reason for doing this is the building of connections. Perhaps by putting yourself out publicly with other peers who might be in a similar situation.&lt;/p&gt;
&lt;p&gt;nice. and, I think that is it for me. it’s we did WordPress all that time together and, still might be, I’ll be building some WordPress sites, but if I want to step outside of that support network, which I’ve been in for what, 17 years or something, and do something different, then I need to build up connections with people there.&lt;/p&gt;
&lt;p&gt;So this is one way of being able to do that. Maybe somebody watch stuff and relate to what I’m going through. So there’s that side of it, and then, yeah. There is one more thing. I guess putting some content out might be useful indirectly for money in the sense that it gives me a, it’s good for my brand.&lt;/p&gt;
&lt;p&gt;Even if clients aren’t interested, they could see the fact that I’m transparent in what I do and I put out content on the thing that I do. So I’m sure they’re not very interested in these things, but the idea that you are out there talking about what you do as a profession probably does lift you up in their eyes.&lt;/p&gt;
&lt;p&gt;[00:21:09] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. Yeah, that’s interesting. gaining new knowledge, building connections with peers in, a, way you can short circuit it because you’ve, maybe they’ll come to you having watched some video content or something like that. So that’s interesting. And then also there’s a possibility for some future project where you might build something and wish to, wish to put that into the hands of other people.&lt;/p&gt;
&lt;p&gt;Okay. shall I do mine? Yes, please. Okay. Mine are in no particular order. and some of them are very frivolous, but, this is frivolous, but I’m gonna say it, it’s a bit like the, I want a new apartment, one that we mentioned from the WDN article. I just wanted to carry on talking to you. E every week.&lt;/p&gt;
&lt;p&gt;We talked for like over a nearly a decade. Not over a decade. And I wanted that to carry on. So that’s a very personal one. I wanted that whole experience to continue. ’cause the idea of not talking to you each week, ’cause we have quite a lot of fun. we speak Yeah. off the camera and we speak for a long time before we hit record.&lt;/p&gt;
&lt;p&gt;So that’s a very personal one. But that’s important. I think the, gaining knowledge in an area where I know I wouldn’t have put the effort in. Is nice as well because I’m in the WordPress space and a lot of the WordPress tools that I’m using allow me to bypass learning new things in the W three C spec, HTML, the new CSS that’s coming along.&lt;/p&gt;
&lt;p&gt;And so this is forcing me. To, I’m not really implementing it, but it’s at least confronting me with it. Maybe it’ll force me to implement it as well. So there’s that, step outside. So this is a little bit like you making connections with peers, step outside of a community that I’m really familiar with and maybe make some connections with some people that I’m unfamiliar with and, who knows where that’ll take you.&lt;/p&gt;
&lt;p&gt;I dunno quite how that’ll happen, but history shows doing the. Podcast that I didn’t, that I still continue to do in the WordPress space, just tells me I have an intuition that things just happen unexpectedly. And so the, my last one, my fourth one is, yeah, just see what new opportunities come along.&lt;/p&gt;
&lt;p&gt;Yeah, I’m a firm believer in serendipity and putting content out without necessarily an agenda for, we want this many followers or we want this many people on an email list or anything like that. It history shows that things happen unexpectedly and, opportunities arise. And so that’s also gonna be interesting for me.&lt;/p&gt;
&lt;p&gt;So mine are far less, far more, ephemeral I think than yours, but they are the real reasons.&lt;/p&gt;
&lt;p&gt;[00:23:40] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah. And your first one, which was very kind is part, is really a major one for me as well. We’ve stopped doing the other podcast and it’s only like a week when it’s I’ve guilted you into saying that.&lt;/p&gt;
&lt;p&gt;I feel, proud that No, It’s absolutely, that is one of the things because there’s a missing gap, but it, there was a use. So I think that’s it. We haven’t got any, exact, and of course these things may change over time. I think with anything you ask the question for us to.&lt;/p&gt;
&lt;p&gt;What exactly do we want to accomplish? But I think these are questions you would need to keep circling around because they’re bound to change. As we change businesses, change, things happen. Websites need to change, forms of communication change. So I think, yeah, so yeah, that’s, that sums up what do we want to get out it?&lt;/p&gt;
&lt;p&gt;So money hasn’t come as the main thing, but it may have an opportunity to deliver something because you found a skill in podcasting and interviewing people that could. Be expanded out beyond what you’ve got. And I’ve got a way of forcing me to learn stuff and meet people. What about,&lt;/p&gt;
&lt;p&gt;[00:24:45] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; I think we’ve maybe smuggled in money.&lt;/p&gt;
&lt;p&gt;Yeah. under the banner of, you called it looking a, way ahead. Yes. Yes. and this idea that maybe you could do templates. And I had this idea of future opportunities. So I think we’ve smuggled in the opportunity for this podcast to make some revenue, but it’s it’s not high on either of our agendas.&lt;/p&gt;
&lt;p&gt;I don’t think so it’s. It’s maybe something, but anyway, yes. Yeah, sorry. So we’re on to the next one. I think&lt;/p&gt;
&lt;p&gt;[00:25:11] &lt;strong&gt;David Waumsley:&lt;/strong&gt; it’s, yeah, it’s very much part of our profession, I think, to put that stuff out there. And yeah, you’ve found like everybody, I think, who goes into code and that you do it as a hobby and it seems to grow into a business.&lt;/p&gt;
&lt;p&gt;And I think it’s the same as talking about it as well. Yeah. Things grow out of it. So we’re different from a lot of industries in that way. So yeah. The next question is, so what needs to be done? Oh, hang on. If I&lt;/p&gt;
&lt;p&gt;[00:25:32] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; jumped one. No, yeah, you missed one. How will a website help me with my goals? So that’s the next one.&lt;/p&gt;
&lt;p&gt;okay, I’ll hand it over to you again. You’ve given it some thought and putting some bullet points and then yeah, it gets a bit waffly on this one. So effectively&lt;/p&gt;
&lt;p&gt;[00:25:44] &lt;strong&gt;David Waumsley:&lt;/strong&gt; I’m repeating myself ’cause I’m big to, I’m a big fan of the idea of. A website that constantly develops an agile approach. That’s a big thing that I’m into, and this is really the only project that I’ve got that can be like that, that can keep changing.&lt;/p&gt;
&lt;p&gt;I can’t keep doing that to clients or encourage them to keep changing. So this is an agile project where I can learn from doing the website itself. And I already covered these in a way. In the sense that it’s a way of building up some social proof and trust that will help me with my goals with the clients.&lt;/p&gt;
&lt;p&gt;And a bit of, it’s a sort of bit of branding about my transparency. That’s what it’s gonna help me reach the goals of, be more creditable to clients. And then really it is about the fact that there is a potential to. Other source of income, perhaps through peers rather than just clients only. If I can come up with some stuff that I’m going to use to make my projects easier, I’m going to share that most likely for free.&lt;/p&gt;
&lt;p&gt;But there might be something that might come outta that in terms of support where that, might be some way to monetize that, but there’s not an idea behind that. So in that’s me, really, it’s the how will it help me achieve my goals. It’s the doing of it is. Itself, the building and the constantly building and iterating on is it, yeah.&lt;/p&gt;
&lt;p&gt;[00:27:10] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Mine are, I think mine are much more easy to, map because, so my first one was, having fun chats with you. we’re seven episodes in, so that’s already been ticked off. So it’s already proving, it’s worth there, gain knowledge and about something future orientated. again, that’s done it.&lt;/p&gt;
&lt;p&gt;I, one interesting thing that I. I haven’t yet really implemented anything, so I’m keen to see if I can bridge that gap. If I can make time in my week to actually implement some of the bits and pieces that I’m gonna do, step outside of a community that I’m familiar with. I don’t know how that’s gonna work out with this website.&lt;/p&gt;
&lt;p&gt;I’ve literally no idea. We haven’t, as far as I know, we haven’t got a contact form, which allows people to get to me in that way, or, I don’t know that we’re pushing this out into social channels, so maybe that’s something we could explore in the future. and the seeing what opportunities come out in the future.&lt;/p&gt;
&lt;p&gt;that’s just, that’s like blue sky thinking. I’m just, if the more we keep doing it, yeah. Maybe some of those opportunities will come along. Like I said, with a bit of serendipity. It’s not gonna be me pushing it ’cause I’ve got other things to do during the week. You never know. Maybe once we get 20, 30 episodes in, this’ll become more important in my week and we’ll have to, manage how that goes.&lt;/p&gt;
&lt;p&gt;So yeah, that’s the answers that I’ve got.&lt;/p&gt;
&lt;p&gt;[00:28:31] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah. Should we move to the third and final question? Which is what needs to be done in what order to reach my goals? So our goals Yeah. Are fairly vague ones, but I’ve got some ideas for this. Yeah. And this is probably what we’ll need. I think we’ll need to lead this on into another episode on this as we get into how we’re going to design this website to reflect what we’re trying to do.&lt;/p&gt;
&lt;p&gt;but the first thing for me was that we need clearer messages. So we put up this site just to have something to dump the episodes there. We’ve got this thing at the beginning on the homepage that says. For people who build websites. it’s so vague and not really true. That’s such a massive number of people, but actually we only reflect a small number of those people who build websites.&lt;/p&gt;
&lt;p&gt;So we probably need a bit of audience targeting. We need to find people who are like. With our messaging, so That’s right.&lt;/p&gt;
&lt;p&gt;[00:29:23] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; So maybe more conversation, maybe more text about W three C or CSS or web standards or something like that. Yeah, Okay. So refine it. Refine it. Yeah. For me,&lt;/p&gt;
&lt;p&gt;[00:29:32] &lt;strong&gt;David Waumsley:&lt;/strong&gt; yeah. for me it would be the fact that I need to probably, it might be different for you.&lt;/p&gt;
&lt;p&gt;We will talk about that, but it, I would think I need to communicate the fact that it is for people who kind of learning to be able to build these static sites from, a. From a platform that’s been dynamic that you’re used to. So I think it’s connected to those people who have lost touch with the, that sort of stuff like me.&lt;/p&gt;
&lt;p&gt;So some message rather than just for people who build websites, we’ll probably need to get some messages. So that would be the thing that needs to be done next. What do you think needs to be done next?&lt;/p&gt;
&lt;p&gt;[00:30:07] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; I think the, I think you’re absolutely right. the whole branding thing, which I mean.&lt;/p&gt;
&lt;p&gt;We, we literally did start this just as a project and we WI don’t think I was thinking about the audience at all. I was really thinking about, oh great, let’s just do some more content. Let’s just see how that goes. But now that we’ve done it a few times and it’s, it’s consuming parts of the week and all that, it will be interesting.&lt;/p&gt;
&lt;p&gt;And I think messaging is exactly right. I think you are taking on the heavy lifting, all the lifting of the website, but I’m sure at some point. You’re gonna want to, to address that because with the best will in the world, I’ve got a feeling that the website won’t look like this, in a, I don’t know, five months time or something.&lt;/p&gt;
&lt;p&gt;I’m sure it’ll iterate a lot. So maybe, that’s, I think what needs to be done, is to, pretty fire it so that anybody jumping in isn’t put off with, oh, it’s all black and white. These guys dunno what they’re talking about.&lt;/p&gt;
&lt;p&gt;[00:31:02] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah. I think we still have a connection with, you’re still doing a podcast for WordPress and I’m still very much connected and follow the news in that as well.&lt;/p&gt;
&lt;p&gt;But there’s a kind of like within that as well, even within that community, there’s a lot of people who, with us with the page builders, we like not dealing with code. There’s a lot more people who go, oh, I do need to learn a lot of the code and that’s going on at the moment, and some projects I might just need to be able to not use my platform.&lt;/p&gt;
&lt;p&gt;Even if I still primarily use that platform and it’s that connection people, I think there may be a lot of people who just wanna get back to go, okay, what would I do in VS code if I needed to do this again? it’s that kind of, connection that I would like to communicate in some ways.&lt;/p&gt;
&lt;p&gt;And, do you know one thing that I think would be important to, to. Align with those people.&lt;/p&gt;
&lt;p&gt;[00:31:54] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. One thing that we haven’t mentioned in this episode or much in the other episodes is that you are also taking this as an opportunity to create, your own YouTube content around what we’re doing.&lt;/p&gt;
&lt;p&gt;Yeah. And, so that’s important and it will touch on the stuff that we cover in the episode. So for example, if, the stuff that. So it, the podcast that we’re doing, if it’s episode number five, if you go to our YouTube channel, the, YouTube cover art will look in a certain way for the podcast and it’ll have a five in it.&lt;/p&gt;
&lt;p&gt;But I’ve also noticed that you’ve got a different kind of color palette, the same color palette, but swapped around for the content that you make. But if it’s related to number five, you’ll still see a little five somewhere. But that’s also a part of what we’re doing, or you are doing, we are making this podcast.&lt;/p&gt;
&lt;p&gt;Hopefully it’s gaining a bit of popularity or interest or whatever that might be. And then you are gonna be making content over there. One of the, one of the things that you wrote is you wanna, look at the SEO of this website as well,&lt;/p&gt;
&lt;p&gt;[00:32:54] &lt;strong&gt;David Waumsley:&lt;/strong&gt; maybe it’s a possibility. it might just be interesting as I do this for clients.&lt;/p&gt;
&lt;p&gt;I never do it for myself, ever. it might be worth looking at what people are searching on. On this just to see what keywords and whether we are reflecting any of that, the, obviously the keywords that match what we’re doing anyway. Yeah. There is a kind of audience in mind. it’s still the people who’ve gone down the same path that we have with WordPress.&lt;/p&gt;
&lt;p&gt;And it isn’t, for people like me who are effectively at the moment. I’ve stopped using WordPress because that’s not a guaranteed at all. And there’s just some projects where you might want to do that. And of course a lot might this. This will be the first site I’ve ever done that hasn’t involved WordPress and it probably still will later, So there is a sort of price. Yeah. ’cause we still might want to put the content in a format that. Be better suited to that. So it’s quite an interesting little niche in a way that we’ve not explored or found a way of being able to communicate that. also, I think also the whole&lt;/p&gt;
&lt;p&gt;[00:33:56] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; reliance on the WordPress plugin ecosystem for SEO, there are fabulous products out there that you can buy that really do a lot of the heavy lifting for SEO.&lt;/p&gt;
&lt;p&gt;So there’ll be a bit of learning there. So how to implement it without just filling out a, field in a CMS and clicking save. making sure that each page is done correctly and that you know that all of the bits and pieces that you need. Boy, that’s a whole, that’s a whole industry of itself.&lt;/p&gt;
&lt;p&gt;[00:34:24] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, and that’s the interesting learning bit, which I’ll do on another video about that. Just some of the main things that. When you switch from doing static traveling, a dynamic platform, there’s some advantages that you get for static with some control, and there’s some things you lose as well because the platform’s done it for you and you have to now do it manually.&lt;/p&gt;
&lt;p&gt;So yeah, it’s the topic. But yeah, I mean I think, yeah, that’s, there’s not much we need to do it, I think other than maybe we need to write off some text and have a better designed homepage. To attract and explain the different types of content that we’re putting out, which will change. Should you have a quick look at our&lt;/p&gt;
&lt;p&gt;[00:34:59] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; homepage, just very briefly.&lt;/p&gt;
&lt;p&gt;Yeah. So this is what it looks like at the moment. a show. For people who build websites. We’ve got a fairly, fairly dark black background. I’ve got a little bit of a menu at the top, which is, fairly self-evident. We’ve got the show strap line, which you mentioned, probably need a tweak, little bit of text.&lt;/p&gt;
&lt;p&gt;We’re putting the latest episode on the top and I notice this fabulous new, New way of playing the episodes. I’ve gotta say, this looks pretty cool. I like this a lot. And then that’s it more or less. Then we’re onto YouTube channel, and then a tiny bit of information about who the pair of us are. Yeah, it’s very, bare bones at the minute, and obviously each episode.&lt;/p&gt;
&lt;p&gt;is more or less the same. We’re on, we’re looking at the stuffer episode seven at the moment. And maybe that’ll need to be tweaked as well, how each episode looks. Yeah. yeah. Okay. And that, homepage does nothing to&lt;/p&gt;
&lt;p&gt;[00:35:52] &lt;strong&gt;David Waumsley:&lt;/strong&gt; explain who we are and why we’re doing this and what we’re specialized in.&lt;/p&gt;
&lt;p&gt;And it doesn’t even actually, right that homepage, it actually takes you to the audio podcast. And I would imagine we probably need to swap that player out to. YouTube where we seem to be on more with the option to go to your own podcast player of choice, So I imagine a reader Yeah, that’s an interesting idea.&lt;/p&gt;
&lt;p&gt;[00:36:15] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; yeah, encouraging people from that page. I think YouTube, the embedded video, ’cause the audio is obviously just the same, more or less. The, idea of just having a link, should, you wish, have you, you’ve landed here. Here’s a video, and if you’ve enjoyed the content that the video has presented, how about taking that a step further and adding it to your podcast player, a choice that might be a, so instead of playing it as audio, you just the option to find the RSS feed and what have you.&lt;/p&gt;
&lt;p&gt;That could be a good&lt;/p&gt;
&lt;p&gt;[00:36:41] &lt;strong&gt;David Waumsley:&lt;/strong&gt; idea as well. Yeah, it could be, and it probably, we didn’t start it. I did the little videos where I’m talking about more the code stuff that. Which is roughly in line with what we’re talking about on the podcast more generally. there is one other thing that needs to be done that I think what will help us reach our goals to make this more community, and it’s what you are very skilled in, is the idea of interviewing some people.&lt;/p&gt;
&lt;p&gt;Oh,&lt;/p&gt;
&lt;p&gt;[00:37:06] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; which, Which will&lt;/p&gt;
&lt;p&gt;[00:37:07] &lt;strong&gt;David Waumsley:&lt;/strong&gt; probably come to the show at some point, I think. Yep. Yeah, that’s definitely&lt;/p&gt;
&lt;p&gt;[00:37:11] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; an area that I’ve definitely clocked up some hours in doing that. Yes. and okay. Yeah, maybe be interesting because my, intuitions will be, I’ll have to hone those a lot more about the kind of questions that I ask, because I was immersed in WordPress prior to.&lt;/p&gt;
&lt;p&gt;beginning that podcast, I had a, set of a repertoire of questions, which I knew would land okay. But in this era, sorry, in this arena that, that won’t be the case. And I’ll, probably feel the, heavy burden of asking silly questions to intelligent people. So I’ll have, there’s gonna have to be a bit of, upskilling.&lt;/p&gt;
&lt;p&gt;So related to the website though, putting out video content on the website. All right. So we did our best to&lt;/p&gt;
&lt;p&gt;[00:37:57] &lt;strong&gt;David Waumsley:&lt;/strong&gt; answer our three questions. I think we did. I think so. But I think, and it just leads us onto a redesign, certainly of the homepage. I suspect as we go on through this, we, there’ll be only so much design that we can do on this particular site and it’ll probably need to be fairly simple always.&lt;/p&gt;
&lt;p&gt;But I think it, there’s nothing to stop us doing a whole talk about how we might design and we can build that separately within the website with a whole different styling, another type of website so we can. I think we can explore that with different designs so we don’t have to pin everything on the look of this one site I.&lt;/p&gt;
&lt;p&gt;[00:38:31] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; That’s good because, having, different opportunities is, yeah. Is really good. I think it’s great for now, it got us over the hump of having nothing. You put in a, enough time to make it work. So thank you Bravo for doing that. And, it got us started and in fact, in many ways, having a website right at the beginning, which was bare bones, is a fabulous starting point.&lt;/p&gt;
&lt;p&gt;’cause it shows that you can, you have the capacity to iterate and improve, which I guess is part of the point of today’s episode, getting the client to, to. Pay you some money with the process of getting a website iterated on over many months and years, hopefully, are we gonna do this client brief thing right at the end?&lt;/p&gt;
&lt;p&gt;Do you wanna do that? we’ve done it. We started with it. I think so in&lt;/p&gt;
&lt;p&gt;[00:39:11] &lt;strong&gt;David Waumsley:&lt;/strong&gt; a way we’ve just covered, do we ask these questions of people? And I think we’ve, I think we’ve already covered it. Yes. Do we challenge the answers we get? We have a little bit, we just didn’t ask people these questions, did we?&lt;/p&gt;
&lt;p&gt;No, For such a long time. And I think this very short article is right. I’m sure lots of people through their proper design systems do it. But for people like you and I, who were largely working locally to local customers would bypass this bit. We would you, you want a website? We can build you a website.&lt;/p&gt;
&lt;p&gt;And that’s where we’d start.&lt;/p&gt;
&lt;p&gt;[00:39:43] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; It’s interesting. I think there’s a human component in here in that if you are a very good communicator or just very good at conversation, this. Episode, the content in this episode will probably be fairly straightforward with a bit of thought. You’ll be able to walk into that, strange environment and ask that new client that you’ve never met before, those questions, and be able to have that conversation be because you’re good at it.&lt;/p&gt;
&lt;p&gt;If you’re a bit more insular or a bit more of an introvert, I feel that, this is always gonna be harder. getting, just getting into the office might be hard enough. Having that conversation in a way that you’re not. Constantly thinking, let me get outta here. Let me get outta here. yeah, I, just think that’s a part of it.&lt;/p&gt;
&lt;p&gt;And, we can’t teach you that, I’m afraid.&lt;/p&gt;
&lt;p&gt;[00:40:26] &lt;strong&gt;David Waumsley:&lt;/strong&gt; No, And I think we’re coming to the end and I actually missed over, missed out something that I put at the very beginning, which I think, this is my own personal opinion, but I think the industry has very much moved to accepting the idea of those emphasizing as web designers, those soft skills.&lt;/p&gt;
&lt;p&gt;being able to, help people to articulate what they want to achieve is part of Yeah. The skills that we do. And it puts us so ahead of anything that AI can do for us. This ability as humans to understand context and communicate well. And I think also this move. I think, the majority of proper, serious web design projects now have gone an agile approach where we assume that everything is gonna evolve the technology.&lt;/p&gt;
&lt;p&gt;So we keep it as simple as possible and we iterate as we go because communication and technology changes. So I think, that’s. The way that the industry’s going. And in some ways this, these three questions here, or starting with that is very much in line with that. And, I think where web designers are increasingly going to, talk much more about this kind of communication, what we’re trying to achieve, to do, keeping it as simple as possible and iterating and.&lt;/p&gt;
&lt;p&gt;Acknowledging the fact that we’re in websites evolve and people evolve.&lt;/p&gt;
&lt;p&gt;[00:41:44] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; I’ve just had another thought about the, the website itself. And one of the things that I probably would want to add in, and I dunno how we’re gonna achieve this without a CMS, is, is some kind of commenting system. Because at this point in the podcast, what I want to say is, if anything you, you found in this podcast is of interest to you, or if you’ve got any, anything that you wanna add, head to the website and drop us in a comment.&lt;/p&gt;
&lt;p&gt;I dunno, maybe that’s, on the five year plan. but we don’t have a commenting system. But if you’re interested, nevertheless, head over to no script show. Forward slash seven in this case. we’ve obviously got other episodes. Put a different number in there and see what pops out.&lt;/p&gt;
&lt;p&gt;But, but yeah, head over to the website over there. We’ve got a YouTube channel as well. I actually don’t know what the YouTube channel URL is. Is it as simple as I. youtube.com/no script or have we managed to bag any of&lt;/p&gt;
&lt;p&gt;[00:42:39] &lt;strong&gt;David Waumsley:&lt;/strong&gt; that yet? I believe it is. It will take you there on the link, but that’s the commenting system.&lt;/p&gt;
&lt;p&gt;I think this will be an interesting thing. We’ll have to do this one privately, I think. But in terms of what we need to do we need to gear people to comment through YouTube? It would help us. It would help our reach with this. Yeah. That might be. Rather than, ’cause it’s always a difficult thing, even when you’ve got WordPress, whether you turn the comments on or Right.&lt;/p&gt;
&lt;p&gt;A lot of people have turned them off because it’s something to have to guard against or some stuff might not reflect what you want to get over on your pages. So yeah. Okay. Yeah, we’ll add that into the list. Yeah. So we, but it’s. Something will still carry on talking about what we need to do next.&lt;/p&gt;
&lt;p&gt;But for me it is just the messaging on the beginning that it needs to explain what’s here. ’cause it doesn’t do that. as we’re saying, we’re not even sure about where we point people to. And probably YouTube is the place.&lt;/p&gt;
&lt;p&gt;[00:43:30] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. Okay. do you think that’s a wrap episode seven in the bag? It definitely is.&lt;/p&gt;
&lt;p&gt;Yeah. If that’s the case, I will get rid of the website and, all we have to say at this point is, thank you for listening. Really appreciate it. Head over to YouTube and give us a comment there. Find us on YouTube, and subscribe, all of that nonsense. But yeah, thank you. That was a really interesting episode.&lt;/p&gt;
&lt;p&gt;Hopefully you got something out of it. I certainly did. Thanks David. Yeah, thanks a lot. I’ll see you next time. See you next time.&lt;/p&gt;
 &lt;/details&gt;</content>
  </entry>
  <entry>
    <title>What&#39;s the big deal with container queries?</title>
    <link href="https://noscript.show/6/" />
    <updated>2024-03-14T00:00:00Z</updated>
    <id>https://noscript.show/6/</id>
    <content type="html">&lt;h2 id=&quot;show-notes&quot;&gt;Show Notes&lt;/h2&gt;
&lt;h3 id=&quot;what-are-css-container-queries&quot;&gt;What are CSS container queries?&lt;/h3&gt;
&lt;p&gt;As as soon as we got media queries this was requested, but previously it was considered technologically impossible. Miriam Suzanne&#39;s 2023 CSS Day talk is best for understanding the technical problems that browsers had to overcome.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A way to apply styles to elements based on the size of that element&#39;s container.&lt;/li&gt;
&lt;li&gt;An alternative to media queries, which can only style elements based on viewport size (or other device characteristics).&lt;/li&gt;
&lt;li&gt;It&#39;s part of the W3C&#39;s CSS Containment Module which describes the contain property and its units: cqw, cqh, cqi, cqb, cqmin, cqmax.&lt;/li&gt;
&lt;li&gt;There is also an evolving spec for CSS Container Style Queries (ie. styling elements based on the container&#39;s styles).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Browser support is 91% (March 2024). Container Style Queries is only partially supported behind a flag in Chrome&lt;/p&gt;
&lt;h3 id=&quot;what-can-we-do-with-container-queries&quot;&gt;What can we do with container queries?&lt;/h3&gt;
&lt;p&gt;Mostly it is for making reusable components that can adapt to the space in the design it is given. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https://web.dev/patterns/layout/container-query-card&quot;&gt;&amp;quot;callout&amp;quot; card&lt;/a&gt; with an image, title, text and a button. With CQ we could be set up so it is differently arranged depending on whether it is added to a wide body area or a slim sidebar. Where slim the image might stack vertically. Where wide the image might align to one side.&lt;/li&gt;
&lt;li&gt;A similar example is a weather widget showing the outlook for every day in the week. You would probably want the days horizontal if the widget has the space and vertical if not.&lt;/li&gt;
&lt;li&gt;Another might be a button with text and an icon which can reduce to only an icon.&lt;/li&gt;
&lt;li&gt;It&#39;s possible to apply CQ to SVG&#39;s styles. It could alter icons sets or perhaps allow logos to change from rectangle to square depending on where it is placed.&lt;/li&gt;
&lt;li&gt;It offers a lot of control over complex layouts like news or magazine sites with side bars and different size callout cards. Michelle Barker created &lt;a href=&quot;https://developer.mozilla.org/en-US/blog/getting-started-with-css-container-queries/&quot;&gt;a fabulous article&lt;/a&gt; on the MDN web doc site on this.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The real power of container queries might be realised in combining it with other new CSS spec like :has () - often called the parent selector - and subgrid. This is all new so experimentation has just begun.&lt;/p&gt;
&lt;h3 id=&quot;who-needs-container-queries-the-most&quot;&gt;Who needs container queries the most?&lt;/h3&gt;
&lt;p&gt;This is yet to be seen. What we have so far means we probably have to re-evaluate our approach and it&#39;s also an evolving spec.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Those who may need to reflect the most might be those who:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Work with component based design systems.&lt;/li&gt;
&lt;li&gt;Make page builders and CSS frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If container styles appear AND is what we think it is, this could be the route to all theming.&lt;/p&gt;
&lt;p&gt;Those of us mostly doing the freehand styling of HTML documents may treat it as something to add as needed (or when someone adds a cool demo to CodePen!). One reason for some not using them is we still need @media for responsive images.&lt;/p&gt;
&lt;p&gt;Heydon Pickering and Andy Bell from Every Layout.dev say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;So what layout problem do container queries solve? The simple answer is: any for which an intrinsically sound layout cannot be easily devised.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-Fw8GSksUIo&quot;&gt;CSS Containers, What Do They Know? CSS Day 2023&lt;/a&gt; (more technical)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=eTTdl5CZDlo&quot;&gt;Demystifying CSS Container Queries Learn with Jason&lt;/a&gt; (more practical)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/Una/status/1765764267066655050&quot;&gt;Una Kravets (Twitter or X) poll on &amp;quot;Why don&#39;t you use container queries?&amp;quot;.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt;Transcript&lt;/summary&gt;
&lt;p&gt;[00:00:05] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Welcome to the No Script show about modern frontend web design, where we look at what we can build today with minimal dependencies and skills.&lt;/p&gt;
&lt;p&gt;Today we’re talking about CSS container queries. These mark a serious advancement in what browsers will allow us to do, but we are asking what does that mean for us right now? And in order to have that conversation, as always, I’m joined by David Waumsley. How you doing, David?&lt;/p&gt;
&lt;p&gt;[00:00:31] &lt;strong&gt;David Waumsley:&lt;/strong&gt; I’m very good. Yeah. You are back telling me how unfit you are feeling, but&lt;/p&gt;
&lt;p&gt;[00:00:36] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; yes.&lt;/p&gt;
&lt;p&gt;Yeah, indeed. I’m, I’m no longer the young sprightly chap I once was, but, anyway, that’s our propo of nothing. Let’s, let’s get on with the show today. CSS container queries, it’s all the rage as always. David puts together the show notes and I come along for the ride. I’m learning an awful lot as we’re producing these shows, and today was no exception because I genuinely didn’t know.&lt;/p&gt;
&lt;p&gt;How far the browsers had come. So shall I just pop the screen up? Yeah, absolutely. And take it from there. I’ll just quickly say that everything we’re about to show on the screen is available on our website, so if there’s any points where you are listening to this or watching it on YouTube and you want to know what’s going on, the easiest way to find that is to go to the URL as we’re on show number six.&lt;/p&gt;
&lt;p&gt;It’s dead easy. No script show slash six, and that will be the same for every episode. Number six, number seven, number eight, or whatever it may be. So here we are. What’s, yeah, what’s the big deal with container queries? Tell us, David. Yeah,&lt;/p&gt;
&lt;p&gt;[00:01:41] &lt;strong&gt;David Waumsley:&lt;/strong&gt; It’s allowed us, this, we must talk about the leading expert on this.&lt;/p&gt;
&lt;p&gt;So the person to really get your information from is Miriam Suzanne, who’s one of the invited, experts on the CSS working group for this. And she’s done a lot of content and a lot of talks. So there are some links, actually the bottom of our show notes, which are two that I think are worth watching.&lt;/p&gt;
&lt;p&gt;But the, it’s a kind of big deal because it’s allowed. Browsers to do something that they, that was considered impossible before because of the nature of browsers. The normal flow, which makes everything responsive by default, could be broken by, querying the container size as opposed to what we’ve had up to this point, which has been just media queries.&lt;/p&gt;
&lt;p&gt;So if we need it to. You be responsive and we need things to display differently in our sizes than we use media queries. Now we’ve got this opportunity, haven’t we? To effectively, we could swap everything to container queries now, right? So yeah.&lt;/p&gt;
&lt;p&gt;[00:02:48] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Am I right in saying that if you were to adopt container queries in.&lt;/p&gt;
&lt;p&gt;In the most part, you can get rid of media queries. There may be some edge cases where one still might be the best, case, but in most cases, the i the endeavor from now 2024 onwards is to move away from, querying the viewport, the, you know, what I’m talking about? Yes, And move it all over to, container query.&lt;/p&gt;
&lt;p&gt;So encapsulating little sections instead of the whole view port. I would say that we’re&lt;/p&gt;
&lt;p&gt;[00:03:21] &lt;strong&gt;David Waumsley:&lt;/strong&gt; probably not moving to them. We could, but I would say that we’re moving much more to this intrinsic thing where, yeah, there’s a lot more flexibility with the units that we’ve got to, not even need to rely on the media queries, but weR#8217;ve got container queries, which according, you watched it as well, the good talk that does, which is containers, what do they know?&lt;/p&gt;
&lt;p&gt;And it’s on the. 2023 CSS day. Anyway, there’s a link on our show notes to that, and she goes into the history about, really, since we got at media queries and we started to go responsive, people were instantly asking for a way to be able to. Change the styles based on the container, and it was considered impossible.&lt;/p&gt;
&lt;p&gt;It would create loops within loops. And then there was, and she goes through the history of how that breakthrough came.&lt;/p&gt;
&lt;p&gt;[00:04:14] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; could you just pause there for a minute because I thought that whole bit about it breaking. Like more or less everything on the internet. This, container query the loops in particular, do you have a full grasp of why that was?&lt;/p&gt;
&lt;p&gt;Because this feels like the kind of thing, container queries, it feels like the kind of thing that people have been clamoring for, a decade or more. But the way that everything’s been built so far, there was this genuine concern that if container queries were implemented, then there’d be this.&lt;/p&gt;
&lt;p&gt;Whole loop of things, which would essentially be recursive and never ending, and it would break almost every website that exists. I don’t really understand why that is, but that was a big concern. The browser manufacturers are saying, no, we can’t do this. It cannot be done. I. But now it seems to have been figured out.&lt;/p&gt;
&lt;p&gt;which is nice.&lt;/p&gt;
&lt;p&gt;[00:05:06] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah. And I’ve only got Miriam’s explanation on it. The breakthrough came, they always thought it was impossible because of normal flow. So inline stuff just, goes downwards in the page of the, does the narrow, I. Viewport and it moves down and the idea of containing things in there would break stuff.&lt;/p&gt;
&lt;p&gt;It take it outta the loop or cont have loops within loops. And somebody just came up with the fact that we actually can contain the inline size of something and then that kind of opened, it broke the ceiling on this and I really don’t understand the technicals of it. But, but we’ve got it now.&lt;/p&gt;
&lt;p&gt;Should we just explain what it, What it is exactly. Yeah. Yes, please. Yeah, go for it. Yeah. there’s some, I’m just gonna read out actually the things that are in the show notes. So it is, a way of being able to apply styles to elements based on the size of that elements container rather than the view port.&lt;/p&gt;
&lt;p&gt;It is an alternative to media queries, which can only style the elements based on the viewpoint width, which I’ve said it’s a part of the W three CS containment module. Which describes contain properties and its units. So we get a whole bunch of units for sizing things, right? So we get CQW for width.&lt;/p&gt;
&lt;p&gt;We get CQH for height. We get CQI for inline cq B for block. we get CQ min and CQ max for min max, size with things. So we get a whole new bunch of units that come with this. The interesting thing I think about it is it’s an evolving spec at the moment because, and although this is only behind, as we record this, a flag in Chrome, there is container style queries, which are due to come.&lt;/p&gt;
&lt;p&gt;And that is, and this opens up a lot, the ability to style elements based on the containers styles. So this could be a big deal for. Theme in the future, I think. Okay. Yeah.&lt;/p&gt;
&lt;p&gt;[00:07:10] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; you’ve just put in there that at the moment, 91% as of March, 2024 of browsers have support for this. I didn’t really in look into that in depth, but I’m guessing that 91% encapsulates most of the.&lt;/p&gt;
&lt;p&gt;Browsers that most of the people that are using, so Chrome, Firefox, et cetera, edge, so that nine per missing percent is, fairly redundant. I know that it’s 9%, which is actually quite a lot, but, have you got an, intuition that. Broadly speaking, you can move over to this without worrying too much.&lt;/p&gt;
&lt;p&gt;[00:07:45] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, I mean it’s, I think you can, I think people are, if you don’t need to support ie. And, most of the new stuff that we’ve got, it isn’t supported by IE. And it’s gonna die up fairly soon. I think some of the issues might be with, safari, on. Some of those can’t be updated because they’re dependent on the, operating system itself.&lt;/p&gt;
&lt;p&gt;So if you need to support some people going back on older iPhones or stuff, that might be a bit of an issue. Okay. but yeah, we should talk about the next thing, really, where we can, what we can do with these things.&lt;/p&gt;
&lt;p&gt;[00:08:21] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. C can I ask, before we do that, can I just smuggle in a question which will lead directly onto this?&lt;/p&gt;
&lt;p&gt;I guess it’s not even a question, it’s just a description. Of how it’s different. So in the old world where we were using media queries, the only option that we had available to us was the width of the entire viewport. So yes, broadly speaking, the width of the browser. if it was.&lt;/p&gt;
&lt;p&gt;1000 pixels and it dropped down to 900. Somewhere in between that, let’s say 950 or something, you could put a media query and you could change the styling, but it’s based on that one feature, the width of the, window, for want of a better word, the viewpoint at that exact moment. This opens up. More or less identical functionality, but on a individual part within that viewport.&lt;/p&gt;
&lt;p&gt;So it could be, I don’t know, a card over here and another card next to it and an image, what have you, a paragraph, anything. So we can, be more refined. We can, instead of just worrying about the whole thing, we can be more refined and adapt things, make them hide, show change, font size, and what have you, based upon the width of that thing.&lt;/p&gt;
&lt;p&gt;Within the main viewpoint, and that’s the point of it, right? Just it’s more granular. It gives us a more. Publisher, Think magazine option.&lt;/p&gt;
&lt;p&gt;[00:09:40] &lt;strong&gt;David Waumsley:&lt;/strong&gt; yeah. A absolutely. it does lead to something else. people are very used to using container as the name for something that will mark up in the HTML two style than that.&lt;/p&gt;
&lt;p&gt;And now we have to think a little bit about that because Container now has become its own spec, if you like, I think people all often used to call wrappers or containers is what we often use to contain something where. treating that with media queries or just normal flow where It’s one extra element. We might need to change our name in a little bit. Now we have container queries where container means something else now, I think.&lt;/p&gt;
&lt;p&gt;[00:10:17] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah, and, I guess it’s important to point out at this point that container is the really the right word, because you are. You are using the children of a container to go back up the dome and look at something outside of it.&lt;/p&gt;
&lt;p&gt;So you know, it might be a paragraph, but you’re asking the paragraph to look at its container to figure out what it should be. So it’s asking questions of its parents, if you like. Yeah. And presumably&lt;/p&gt;
&lt;p&gt;[00:10:44] &lt;strong&gt;David Waumsley:&lt;/strong&gt; it can make any element you want the container for the thing that you are styling,&lt;/p&gt;
&lt;p&gt;[00:10:49] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. So you could go, you could really get granular.&lt;/p&gt;
&lt;p&gt;It could, it could, it could go all the way down, couldn’t it? Okay, great. Yeah. Sorry, I’ve interrupted. Carry on.&lt;/p&gt;
&lt;p&gt;[00:10:56] &lt;strong&gt;David Waumsley:&lt;/strong&gt; No, and in some ways the examples, and you’ll probably bring some up on here, of how people are using, it’s the, standard example, I think we’ve even talked about this before, is the kind of call out card and the MDM records actually has.&lt;/p&gt;
&lt;p&gt;If you can pull that up. Yeah. So let me just make&lt;/p&gt;
&lt;p&gt;[00:11:12] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; sure on the screen if I got the right one. Is it this one you wanted to show at this point or was it the other one? I&lt;/p&gt;
&lt;p&gt;[00:11:17] &lt;strong&gt;David Waumsley:&lt;/strong&gt; think it’s the other one I think. Yes. Okay. That one. Yes, that’s it. okay, there is on the, yeah, nd n records there, the documents there.&lt;/p&gt;
&lt;p&gt;There is a nice example which folks are watching this will be able to see where, this is the card example where you. this is where we’re still carrying on with components because now we can change the inline size of a container. We can make the content in that respond to the size that’s available to that container.&lt;/p&gt;
&lt;p&gt;So what we’re seeing on the screen here is a card that when it’s got the room, we may have the image over to one side and a title to the right off that with some. Copy and maybe a button. But if that container then needs to move into a sidebar with less space or another design entirely where it has less space, then it will adapt.&lt;/p&gt;
&lt;p&gt;So this is adapting where it’s got smaller space. So the image is going on the top on this example, the. Main body text has disappeared. ’cause there isn’t the space, it’s just leaving the title and the button. And I think that’s probably the, did I explain that well? I dunno.&lt;/p&gt;
&lt;p&gt;[00:12:23] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. Yeah. I guess if you’re listening to this and there’s no audio, it’s exactly as David said.&lt;/p&gt;
&lt;p&gt;I think the, yeah, the fact that the text disappears, it’s probably the key thing here, isn’t it? In that we’re quite used to seeing something like this, image left. Title, right body, right bottom below, all of that. That’s a fairly common layout. And then as it collapses before the, whole layout changes to be entirely vertical.&lt;/p&gt;
&lt;p&gt;At some point, the intuition is now the text is just occupying too much space. We, want the image to be occupying the full height of the card. So now the text has taken up too much room. So let’s just. Get rid of the text so that the bottom doesn’t look like it’s floating in its own space. And, it’s fairly, it’s a fairly simple demonstration, but it works really well.&lt;/p&gt;
&lt;p&gt;We’ll, put the links into the show notes. Yeah. But this is, yeah. And&lt;/p&gt;
&lt;p&gt;[00:13:10] &lt;strong&gt;David Waumsley:&lt;/strong&gt; yeah. And then a couple of similar examples with the same idea is a weather widget where you might have the days of the week where you’re saying it’s suddenly on these. Days and that if you’ve got the space for it, then you’re going to show these horizontally.&lt;/p&gt;
&lt;p&gt;If it needs to go in a sidebar, it, you would have to create for that sidebar before we got container queries, a whole new setup. But here you can take one style at once and say, make it behave like this if it’s in a smaller space, and then it may stack horizontally or lose some of the stuff. And we’ve seen that as well.&lt;/p&gt;
&lt;p&gt;And it’s used, on some designs where we may have a button. that will have text and an icon and then when it’s got less space, it’s just got the text. And when it’s got even less space, it’s just got the icon. So we could build those in with a container query rather than a media query and have that place wherever we like in our design.&lt;/p&gt;
&lt;p&gt;So it’s this idea of this modularity where we can Bring these things into different designs and create our components out of it.&lt;/p&gt;
&lt;p&gt;[00:14:09] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah, I guess, the example that’s on the screen, and again, apologies to those people listening. You can imagine that being repeated, I don’t know, in a three by three grid or something, where you’ve got three of these similar cards next to each other, but then of course on a news website, you may want a more or less identical card to keep.&lt;/p&gt;
&lt;p&gt;Some attributes on the page. You, for example, you may wanna keep the body text, because it’s the headline, it’s the most important thing on the page. So at the beginning, it looks like everything else, but as you collapse it, it doesn’t lose the same features. And because it’s a container query rather than a view port query, it can behave in its own unique way, than all the other ones in the main grid, if you like.&lt;/p&gt;
&lt;p&gt;So the first item could behave differently to the second, third, and fourth and, so on. yeah.&lt;/p&gt;
&lt;p&gt;[00:14:55] &lt;strong&gt;David Waumsley:&lt;/strong&gt; And you’ve got tab as well for another example, which again is on MD ed by, wonderful Michelle Barker, who’s created a good explanation of this. And I don’t know if, for those who can see it, that makes a lot of sense.&lt;/p&gt;
&lt;p&gt;But I think the big deal is if you’ve got a news site where maybe previously you would have certain news in a sidebar, and if you were using the view port widths, then you would need to treat that sidebar. Would have to move as you lost space, right? But here, what we can do within the sidebar, we can put those in containers and have them independently changed to the content that might be in the main section area.&lt;/p&gt;
&lt;p&gt;So a new site, it gives you so many different ways that you could treat those individual cards. they could be changing within the sidebar based on the container, not the view port, and also the main content area Could be styling some of those cards independently of that, and I think that’s the big deal.&lt;/p&gt;
&lt;p&gt;[00:15:52] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah, it’s a pretty profound design actually. I really like it. the styling is incredibly basic just to illustrate what’s going on. But again. The links will be in the show notes, but what you’re seeing is a little bit what I just like what I just described, where you’ve got this main headline article, which when it’s in, let’s call it desktop, we’re gonna have to stop using those, terms, aren’t we?&lt;/p&gt;
&lt;p&gt;where, when it’s in the, widest possible view, you’ve got one article. Occupying like the headline space, and then beneath it, there’s two more, and then beneath that, there’s four more. And as it collapses, it goes to one main and then two. But the orientation of the ones underneath it change. And then obviously as you collapse it to what we might describe as a mobile view, everything stacks and looks identical.&lt;/p&gt;
&lt;p&gt;the only difference is that ones are higher up on the page, but the styling is identical for all of them. So it really offers you an opportunity to make. For those people who’ve got the space on their screen to make things stand out. And then where you don’t have the space just to make things look more or less like a list.&lt;/p&gt;
&lt;p&gt;it’s really nice and very profound. yeah. Yeah. Yeah.&lt;/p&gt;
&lt;p&gt;[00:16:54] &lt;strong&gt;David Waumsley:&lt;/strong&gt; I think with a news like that, if I had a sidebar, which isn’t really showing on the example we’re looking at on the screen here, but it, I would imagine that if I wanted to keep the sidebar fixed quite small and compared two. The main content as it gets smaller, I might just turn these into links and get rid of all of the images independently in the sidebar, allowing more space in the main content area.&lt;/p&gt;
&lt;p&gt;Yeah, you couldn’t do that independently before, so it does allow for that. But I know again. It’s little&lt;/p&gt;
&lt;p&gt;[00:17:23] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; intuitions like that, isn’t it? The more that, you explore this and the more that you think about this, the more that these things occur to you. You know what to do with the sidebar?&lt;/p&gt;
&lt;p&gt;Oh, I could try that now. As opposed to in the past it was just, that’s not possible. Okay. shall I take that off the screen or is there some, something else?&lt;/p&gt;
&lt;p&gt;[00:17:39] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, take it off the, we can go back to notes. There was one more thing actually that I thought was a very cool example of what you could do with it, and that is because you.&lt;/p&gt;
&lt;p&gt;With SVGs, it’s part of standards as well. Oh, we could make that a container and play, apply some of the sizes, styles to that. So in the example of a logo, it would be possible where you need that to be a rectangular logo laid out in a certain way. Have it when you’ve got that space, do that and then have it go to what a, a square with some of the elements in that logo changing or arranging themselves differently.&lt;/p&gt;
&lt;p&gt;According to the space available. And I think that’s quite cool because you might, so&lt;/p&gt;
&lt;p&gt;[00:18:17] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; just, to pick that apart, because an SVG is, a document basically. So it is got, it’s got, the component parts. It’s not just a flat image of, it’s, just data and the browser passes it and figures out how to display that data.&lt;/p&gt;
&lt;p&gt;This is, it’s a document, so it’s made up of little bits. And because of that, you can query those little bits. And a perfect example, you just said you’re on a desktop, you’ve got a main navigation at the top, and you want a flat, rectangular letterbox style logo. But as you collapse it, it might be better to just have a centralized square logo.&lt;/p&gt;
&lt;p&gt;And so you can do that on an SVG level. So you modify the actual. Image. It’s not like you’re swapping one image for a different one. You are actually modifying it. You can imagine people getting really granular with that so that as the browser is collapsed incrementally, the logo kind of morphs and moves around and little parts of it.&lt;/p&gt;
&lt;p&gt;imagine you’ve got a logo with three circles and they’re in a triangle at the beginning, and you want ’em to all be in, in a horizontal line. You can imagine them being pulled out slowly, like an animation you might see. Yeah, that’s fun. That’s a really interesting idea.&lt;/p&gt;
&lt;p&gt;[00:19:29] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, I thought, I’ve not seen, only a very basic example of that on Code Pen, but I think, yeah, something to explore.&lt;/p&gt;
&lt;p&gt;It might take a lot of time, but the idea of this portable logo that will display the way you want it to display wherever it goes. Just, but you can&lt;/p&gt;
&lt;p&gt;[00:19:42] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; imagine tools like Illustrator taking that work on for you. You can’t, you where you get an option to have it. Have it, in this orientation and even have that, the animation bit taken care of.&lt;/p&gt;
&lt;p&gt;So if it’s this width, we want that one to eventually end up over there. And the, software will figure out the percentages that it’s got to work through to get it to, to get to that point in the correct amount of time. Anyway, I’m totally off piece now. I’m, but, fascinating. Fascinating. Okay.&lt;/p&gt;
&lt;p&gt;we get excited about it. Should we&lt;/p&gt;
&lt;p&gt;[00:20:10] &lt;strong&gt;David Waumsley:&lt;/strong&gt; pull some cold water overall? Oh.&lt;/p&gt;
&lt;p&gt;This is quite, the interesting thing for me, I think, I mean I’ll put that in the show notes, you may disagree. I think the people who are gonna be most interested in this or need to be thinking about it is the people who are doing component based, design systems, which I don’t think I’ll be investing that time in that particularly.&lt;/p&gt;
&lt;p&gt;But if you are looking that way, particularly with the idea of style queries, and theme that might go on. So I think those people who are building those systems. We’ll probably start to need to think about these things. And also maybe page builders or CSS frameworks, they might change their na. Then probably need to start thinking about how they might be able to use this.&lt;/p&gt;
&lt;p&gt;Because I think it is a bit of a, I hate to use the word game changer, Oh, I, actually think the interesting thing is from my own personals. Perspective. I don’t know if I would invest that much time in this. I think I, and I put their little quote in it. It’s behind, a paywall. this is Hayden Picker and Andy Bell from every layout dev.&lt;/p&gt;
&lt;p&gt;And, I saw that quote and I think it sums up where I’ve gone with this. So they say, What layout problems do container query solve? This simple answer is any for which an intrinsically sound layout cannot easily be devised. I misread that, but same point and I thought, yeah, that’s where I’ve gone. To be honest, there’s been so much stuff in CSS that so many ways that we can not have to rely on query and stuff that we can build in flexibility with these.&lt;/p&gt;
&lt;p&gt;Intrinsic methods that I would put all my efforts into that before I moved into some of this clever stuff that we can do with container queries. So that’s where I found myself with this.&lt;/p&gt;
&lt;p&gt;[00:22:11] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah, I can imagine that. we, so we were looking, before we hit record at a variety of UK news website. So we looked at the BBC and the Guardian, and they, although my intuition, or your intuition I think was that they’re probably not using, this.&lt;/p&gt;
&lt;p&gt;at the moment they’re probably using, the viewport and media queries and what have you. You can really see how this stuff would map well, but it would require quite a lot of backend CSS engineering, in order to make it work. But once you’ve set that up, then it’ll work beautifully on absolutely every device, and it’ll take away a lot of headaches and everything will be really straightforward.&lt;/p&gt;
&lt;p&gt;But there will be. A lot of work to get that working. Yes. And the websites that you are building, maybe the client doesn’t have the budget for that. Maybe the client just doesn’t have that much content. It’s gonna be a much more, header, hero image and then a main section. And, and it doesn’t really fit into that.&lt;/p&gt;
&lt;p&gt;All you need to do is collapse the text and collapse the content. So it might be a bit of overkill, but we’re after a, sorry, You go.&lt;/p&gt;
&lt;p&gt;[00:23:19] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Oh, no, I, was just gonna say, Suzanne is almost the perfect person to describe what happens, so you can invest a lot of time on the perfect system.&lt;/p&gt;
&lt;p&gt;She created a framework called Susie, of which of course, she says today, please don’t use my framework. Use the modern CSS. So we’ve always got that, and it’s how much you’re going to invest to save some time on your future projects against when that might need to change because you’ve. Saddled yourself to some kind of framework.&lt;/p&gt;
&lt;p&gt;And most of the time I’m styling documents, mostly text, and I can get with intrinsic methods. So I can see how this is more important than probably a, although I got excited and thought I must need to know this inside out, I’ve realized that I need to know a lot more about CSS inside out and how I can avoid it.&lt;/p&gt;
&lt;p&gt;And I think things like every layout, which is a way of simplifying as best as you can, using the less CSS to give your responsive. You meet your responsive needs. Using the least possible is the kind of approach that I’ve decided to go with this. There is one interesting thing, and I dunno if I actually put it on the show notes I should have done, but there was an interesting tweet, that was going out on X and it was by.&lt;/p&gt;
&lt;p&gt;Kravitz. Okay. She’s a Google person who talks a lot on CSS, really clever person. She was asking, when are people using, are you using container queries? And I’ve not even thought about this before, but a couple of people replied, no, because we can’t, we haven’t got responsive images for it. They are still based, oh.&lt;/p&gt;
&lt;p&gt;On the media queries and I thought, I’ve not even thought about that. And I thought, yes, it is a bit of a holdup on the moment for that. Okay. Yeah, that is a bit of a holdup.&lt;/p&gt;
&lt;p&gt;[00:24:58] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; That’s interesting. Yeah. I do think the page builder crowd, you can well imagine that there must be quite a lot of talk and excitement in that space about this.&lt;/p&gt;
&lt;p&gt;I don’t know quite how you would, in a visual way describe all of the different ways it’s gonna. collapse when the view port collapses. ’cause obviously each little part will be different or how they’d set that, that up in the ui. But their page builders are always looking for the next interesting thing, aren’t they?&lt;/p&gt;
&lt;p&gt;To set themselves apart from their competitors and to also just make it so that you can have everything done in a u, in a. Gooey, it does feel like this is a good place for them to go. yes, we’re both from the WordPress space, so we understand, the limitations of some of those different technologies.&lt;/p&gt;
&lt;p&gt;But ha, having, describing how that works will be interesting. rather than having a, a static image to show what that layout will look like. You might need something like, I don’t know, an animated, web P image or something like that to show how it will collapse, but I think that’s.&lt;/p&gt;
&lt;p&gt;I’m sure that’ll be an area for growth in the future. Throw in grid. Yeah, throw in all of this and it’ll be really interesting.&lt;/p&gt;
&lt;p&gt;[00:26:07] &lt;strong&gt;David Waumsley:&lt;/strong&gt; I absolutely, I think, if theming comes with that, with the styles and being able to size things where somebody can grab and that’s, things like WordPress are very much about building these reusable patterns and the idea that you can just sling them where you like and it’ll adapt is a, real plus.&lt;/p&gt;
&lt;p&gt;But, yeah, that I. That’s really, I think, all we can say on this. Yeah. Yeah. It’s a&lt;/p&gt;
&lt;p&gt;[00:26:28] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; fascinating new technology and it’s in a browser, probably that you are using at the moment, so you can start exploring it. The links, as I said, will be in the show notes. It sounds David, as if you might be throwing Uma’s link in, to add it to the ones that we’ve got at the moment.&lt;/p&gt;
&lt;p&gt;But all the videos that we described and all of the different things that we raised on the screen. I’ll be on the, the website, no script show. Yeah. And in this case slash number six. So yeah, I think we’ve done it. That was a, nice brief one.&lt;/p&gt;
&lt;p&gt;[00:26:59] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah. Next time I think we’ll be talking, it’s about time.&lt;/p&gt;
&lt;p&gt;We’re gonna, I think, break from what we intended to do, which was to cover all the new features in CSS and HTML. But I think we need to have a break so we can talk about how we’re going to design this website that’s already out there.&lt;/p&gt;
&lt;p&gt;[00:27:15] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yes. Which needs, who you wanted to do a good deal of TLC? Yeah. Yeah.&lt;/p&gt;
&lt;p&gt;we keep forgetting to mention that the website is gonna be, under David’s purview ’cause he’s far more clever than I am. And, as we go through subjects, David’s gonna try and implement something of that. Into the website. So we haven’t covered a great deal that can be implemented thus far, but that’ll come and hopefully, in the year 2029, the website will look absolutely fabulous.&lt;/p&gt;
&lt;p&gt;[00:27:44] &lt;strong&gt;David Waumsley:&lt;/strong&gt; So I think next time we’re gonna be talking about, how do we start a web project? I know we’ve already started this one, but that’s what, we’ll discuss the next one. So I hope people will join us for that.&lt;/p&gt;
&lt;p&gt;[00:27:53] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Great. we’re done. We’ve wrapped up episode six. We will see you on episode seven.&lt;/p&gt;
&lt;p&gt;Thanks, David. Nice chatting to you again. Bye.&lt;/p&gt;
&lt;/details&gt;</content>
  </entry>
  <entry>
    <title>What is component based web design?</title>
    <link href="https://noscript.show/5/" />
    <updated>2024-02-29T00:00:00Z</updated>
    <id>https://noscript.show/5/</id>
    <content type="html">&lt;h2 id=&quot;show-notes&quot;&gt;Show Notes&lt;/h2&gt;
&lt;p&gt;Somewhen in the 2010&#39;s the people on the web had a shared epiphany. Building websites was no longer about our ability to style HTML documents (to show off in the &lt;a href=&quot;https://csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt; ).&lt;/p&gt;
&lt;p&gt;It was about our ability to identify and create reusable blocks of UI to build (brick by brick) our websites. When we say sites we mean apps. Sites were just so 2009!&lt;/p&gt;
&lt;h3 id=&quot;what-do-we-mean-by-component-based-web-design&quot;&gt;What do we mean by component based web design?&lt;/h3&gt;
&lt;p&gt;We are simplifying, but...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The shift from styled pages to design systems of reusable UI building blocks.&lt;/li&gt;
&lt;li&gt;The impact of Atomic Design by Brad Frost and Facebook&#39;s React in 2013.&lt;/li&gt;
&lt;li&gt;A different type of &amp;quot;separation of concerns&amp;quot;.&lt;/li&gt;
&lt;li&gt;Bootstrap, Google Material design, Page Builders and Gutenberg.&lt;/li&gt;
&lt;li&gt;In CSS the BEM (Block Element Modifier) component approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Brad Frost&#39;s 2023 talk called &lt;a href=&quot;https://www.youtube.com/watch?v=PK_PICNTgAg&quot;&gt;Is Atomic Design dead?&lt;/a&gt; gives a good historical account (from a design systems point of view) of the fast change of tools, approaches and terminology over this decade.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://noscript.show/images/atomic-design.webp&quot; alt=&quot;Diagram of Atomic design.&quot;&gt; Borrowed from Brad Frost&#39;s Atomic Design.&lt;/p&gt;
&lt;h3 id=&quot;do-we-need-component-based-web-design&quot;&gt;Do we need component based web design?&lt;/h3&gt;
&lt;p&gt;The &amp;quot;don&#39;t repeat yourself&amp;quot; (DRY) principle behind component based design is sound. Even better, you can steal from others. But it has not been without issue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scores of complex design systems. Not very agile.&lt;/li&gt;
&lt;li&gt;Many JS frameworks reinventing the browser.&lt;/li&gt;
&lt;li&gt;A division between frontend devs and with the web platform.&lt;/li&gt;
&lt;li&gt;An overkill of cool, but user unfriendly widgets.&lt;/li&gt;
&lt;li&gt;JS Burnout and extra mark-up for CSS (BEM).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The pendulum swings, but ultimately we have to decide ourselves based on the type of work we do. The human tendency is to follow the pack.&lt;/p&gt;
&lt;h3 id=&quot;what-are-our-component-options&quot;&gt;What are our component options?&lt;/h3&gt;
&lt;p&gt;React JS a decade ago allowed for CSS encapsulated components, but it was a 3rd party framework dependency.&lt;/p&gt;
&lt;p&gt;If we want to purely stick with web standards (that will last for as long as we have browsers) we have recently been given some new options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(HTML) Web Components.&lt;/li&gt;
&lt;li&gt;Container Queries (combined with the :has() selector and subgrid).&lt;/li&gt;
&lt;li&gt;Web Assembly.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;html-web-components&quot;&gt;(HTML) Web components&lt;/h3&gt;
&lt;p&gt;We&#39;ll talk about Container Queries in the next episode.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Custom Elements (Light DOM).&lt;/li&gt;
&lt;li&gt;Shadow DOM.&lt;/li&gt;
&lt;li&gt;Declarative Shadow DOM.&lt;/li&gt;
&lt;li&gt;Declarative Custom Elements - specification not ready yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;@scope is here to CSS which allows for allows for modular CSS.We hate to say it, but it could be a game changer!&lt;/p&gt;
&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PK_PICNTgAg&quot;&gt;Talk: Is Atomic Design Dead? - Brad Frost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=R4Ri4ft7bXY&quot;&gt;Talk: The Good, The Bad, and The Web Components - Zach Leatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/paulirish/lite-youtube-embed?tab=readme-ov-file#pro-usage-load-w-js-deferred-aka-progressive-enhancement&quot;&gt;Light Youtube Embed Web Component -Paul Irish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://htmlwithsuperpowers.netlify.app/using/examples/podcast-player.html&quot;&gt;Podcast Player Web Component - Dave Rupert&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt;Transcript&lt;/summary&gt;
&lt;p&gt;[00:00:06] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Welcome to the No Script web show about modern frontend web design, where we look at what we can build today with minimal dependencies and skills.&lt;/p&gt;
&lt;p&gt;Today we&#39;re asking ourselves, what is component-based web design? Do we need it? And if we do, how do we get it? My name&#39;s Nathan Wrigley, and I&#39;m joined as always. David Waumsley. How are you doing, David?&lt;/p&gt;
&lt;p&gt;[00:00:28] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Oh, you pointed in the right direction. Yeah, I&#39;m good, and you are not so good. You&#39;re a little bit deaf in one ear.&lt;/p&gt;
&lt;p&gt;[00:00:34] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: I&#39;m definitely a little bit deaf in one ear. I&#39;ve had a, I&#39;ve had a bout of poorliness, but thankfully I&#39;m out the other side and raring to get into the topic of component based web design. As always, you&#39;ve put the show notes up, I dunno if you want me to share them on the screen right at the outset.&lt;/p&gt;
&lt;p&gt;[00:00:50] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I think so, so you&#39;ve broken it up in the beginning with the three things. Here&#39;s, the difficulty with components. We say components and it means so many different things to so many different people in different contexts. So we&#39;re gonna have to oversimplify what we&#39;re talking about here and and we have, we&#39;ve done it with a few bullet points. If you scroll down for those YouTube watchers, we&#39;re really referring to this kind of idea that seemed to arrive, I think somewhere in the 2010s. Particularly about, 2013 when we got atomic design, a really influential, book by Brad Foster and also within the same month, we got Facebook&#39;s React coming out, which allowed us to do things that we couldn&#39;t do before.&lt;/p&gt;
&lt;p&gt;And it seemed that we were moving to this idea, this epiphany that everybody seemed to share. And that&#39;s my experience as well with it, where you suddenly thought. Websites are like these apps with these reusable UI bits components that we build up how to blocks, and we really should do a lot more that shouldn&#39;t we?&lt;/p&gt;
&lt;p&gt;That&#39;s a sensible way to build instead of doing things the way that we used to do before where we were styling these documents. Independently. So whatever the HTML you marked up on the content, then you just went about and styled it. What if we just created these little blocks and put them all together?&lt;/p&gt;
&lt;p&gt;We&#39;ll save loads of time and stop repeating ourselves all the time with that. And j. Nathan, my experience, I feel like I went through that myself. That&#39;s because when I started with initially with HTML and CSS, it was all about. the CSSN garden and all of that. It was about styling those documents, and then by the time I got into WordPress and then page builders came in, that seemed to be all component based design.&lt;/p&gt;
&lt;p&gt;[00:02:57] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah, I guess the, whole page builder, and I suppose this would be true of WordPress page builders, but also SaaS based apps, it&#39;s funneling you down the idea that the whole document is made up of a bunch of individual little components, these little blocks, so I don&#39;t know, hero section or a. A little card, which has an image and some text and perhaps a button or something like that.&lt;/p&gt;
&lt;p&gt;And, you style it once and then you duplicate it and that styling gets transferred over to that new one and then you duplicate it again and, maybe turn it into something global so that if you want to use that somewhere else on the website, you can just do that again and change it all in one place.&lt;/p&gt;
&lt;p&gt;There&#39;s so many things that make sense about it. Because it, it is quite nice in a project, especially, I guess if you&#39;re working with a team, which I never really did, to have that shared understanding of what it is that you are doing. So every time we create this card, it&#39;s gonna look exactly like that.&lt;/p&gt;
&lt;p&gt;And there&#39;s all of the styling that goes with it. It&#39;s encapsulated in that one thing. it&#39;s not the same as this other hero section, it&#39;s just for that card. it definitely makes sense and yeah, you&#39;re right. Page builders encouraged that way of thinking. For a long time. It made perfect sense to me. But you are, I think you are moving away from that a little bit now. Back to the, air quotes, the old way&lt;/p&gt;
&lt;p&gt;[00:04:22] &lt;strong&gt;David Waumsley&lt;/strong&gt;: of doing things. the old ways of coming back, I think to a certain degree, at least where we thought we were, was challenged before. And that&#39;s my experience, the page builder side of it.&lt;/p&gt;
&lt;p&gt;But of course, it made perfect sense, Brad. frost whole atomic design at the time, and it. Things that we know, bootstrap, Google Material Design, all of these kind of things came outta this idea. Of course that makes sense. And it made sense to me. And I think in the page builder tradition of doing stuff, I realized that, all I wanted when I got into page builders was more modules, gimme more stuff.&lt;/p&gt;
&lt;p&gt;More bricks I can put into my designs. and then it turned over time without knowing any of these debates, just through practice itself where I came back to the fact, actually most of the time for most of the work I do, it&#39;s about getting this message over, which is mostly text with a few images to and I need to style those and arrange them in the best way.&lt;/p&gt;
&lt;p&gt;And actually, I. I didn&#39;t need a slider. I didn&#39;t need a little block for frequently asked questions that were dropping down just for one line or something like that. We didn&#39;t need to create all those things. So I shifted without knowing these debates. But now having looked, and I know you looked at, Brad Foss, talk, which is a recent one where is. Is atomic design dead? And that&#39;s something I obviously, in our show notes, there is a link to that and it&#39;s worth watching &#39;cause it gives such a sort of whirlwind, hi historical account of how the technology for designing webpages from a designer&#39;s point of view, rather than a coder&#39;s point of view, doesn&#39;t he? And how we&#39;ve changed to all these. Different kind of tools over the time and different approaches.&lt;/p&gt;
&lt;p&gt;[00:06:07] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: really interesting being Brad Frost though, because obviously you were leading this charge of this component based, or as he calls it, atomic. Yeah, and it&#39;s definitely served his purposes quite well.&lt;/p&gt;
&lt;p&gt;He&#39;s become a sort of minor celebrity in the web design world and it, and, but this talk in 2023 is a decade after he launched this idea and gained a lot of success out of it. and I think his. I think his position is that, it still has utility. He didn&#39;t seem to be saying, look, abandon a abandon ship.&lt;/p&gt;
&lt;p&gt;There&#39;s no hope here. but it is interesting going back because I&#39;d forgotten a lot of the components that made up his atomic design. And, broadly, if you are looking at the YouTube video of this, then you can see it on the screen. But if you are not, he Encapsulates the, idea of atomic design is, that everything is made of atoms.&lt;/p&gt;
&lt;p&gt;And so the sort of smallest part is an atom. And then if you, gather up a bunch of. Atoms. So the smallest parts of the, dom, if you like the page that you can, then you get these molecules, and then if you gather those molecules together, so that&#39;s a slightly bigger part. And then if you gather those together, then you get an organism.&lt;/p&gt;
&lt;p&gt;To be honest with you, the nomenclature, the wording at this point has lost all meaning for me. Atoms, works molecules, works organisms.&lt;/p&gt;
&lt;p&gt;[00:07:38]&lt;strong&gt;David Waumsley&lt;/strong&gt;: Suddenly that doesn&#39;t work for me. &#39;cause it&#39;s got this&lt;/p&gt;
&lt;p&gt;[00:07:43] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: notion of being&lt;/p&gt;
&lt;p&gt;[00:07:44] &lt;strong&gt;David Waumsley&lt;/strong&gt;: alive or something. And, but it&#39;s really, he&#39;s just&lt;/p&gt;
&lt;p&gt;[00:07:47] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: saying, okay, it&#39;s a bigger thing than a collection of atoms and a collection of molecules. And then it steps outside of that. Biological frame reference. And then he talks about, templates and ultimately pages. And it is, it&#39;s a neat way of encapsulating it. And when in 2013 everybody was scrambling around for a way to make design easier, and the web at that point was starting to get complicated.&lt;/p&gt;
&lt;p&gt;Rou could, you really were seeing, think of Facebook. There were bits of Facebook, which just repeated it. Itself all over the place. Yeah. you&#39;d have hundreds of this thing and hundreds of this thing. Yeah. and so I guess it made sense to start thinking about it in this way.&lt;/p&gt;
&lt;p&gt;And maybe it still really does, maybe it still does work. If you&#39;re on a giant project and you&#39;ve got a hundred people working on, excuse me, one thing, and they all need to share that understanding of what that one thing looks like and what&#39;s an easy way to distill it. Make it a component, make it so that&#39;s the card, that&#39;s what the timeline view looks like, and a aspects of the timeline will look like this.&lt;/p&gt;
&lt;p&gt;And then another one will look just the same. Here&#39;s where everything is, here&#39;s the atom, here&#39;s the molecule, here&#39;s the organism, and so on and so forth. So I, guess if you&#39;re not you, David working, freelancer working by yourself, there&#39;s robably still utility in this,&lt;/p&gt;
&lt;p&gt;[00:09:06] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I would&#39;ve thought. Yeah, and I think the whole thing goes with the development of the app as well, with the The mobile was fit, where there&#39;s a slightly different expectation of how an app might work as it recognizable components as opposed to the website. And really they&#39;re on a continuum in reality. And I think we&#39;ve readjust our thinking there, but it comes in with that. There was a, I wrote down a little example to make sense of the atoms and molecules.&lt;/p&gt;
&lt;p&gt;So an atom might be a button which you would define, and then a molecule might be an input field that has a button in front of a form and an organism may be the whole footer that contains all of those things they could be in, in there. And it builds up in that way. And I think a lot of it was about working in teams to create this kind of design system, which we&#39;ve no experience of that. we&#39;re taking customers one at a time, working on our own and we really didn&#39;t need to worry too much about the naming of our button &#39;cause Yeah. It&#39;s just for us.&lt;/p&gt;
&lt;p&gt;[00:10:18] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: But I guess if your team has complete buy-in to this, component based process, and let&#39;s say that you go with the atomic way of describing it, atom, molecule, organism, I can see a, I can see a moment where everybody&#39;s just got that hardwired.&lt;/p&gt;
&lt;p&gt;In their head and they all know, okay, the here&#39;s, the atom. Like you say it might be a button and, here&#39;s the associated molecule and this is what our organic or organism footer looks like, or hero section or whatever it may be. very soon. I can imagine that just becomes embedded and people start to talk about it and it makes perfect sense.&lt;/p&gt;
&lt;p&gt;Getting me into that would take. There&#39;d be a lot of onboarding, and I&#39;d have to really wrangle, my head around it because I&#39;m not using those, not using those, terms, but in effect, having used the page builder for years, I am using those terms, but I&#39;m just not giving them the same name. yes.But yeah,&lt;/p&gt;
&lt;p&gt;[00:11:16] &lt;strong&gt;David Waumsley&lt;/strong&gt;: so there you go. And I I think the importance of something like React at that time when you&#39;ve got atomic design and React coming out. React was this thing that solved this issue because it&#39;s a cascading style sheet. So we were used to defining the look of a page and a document at the top of, most of your rules were created.&lt;/p&gt;
&lt;p&gt;If you were going for these individual blocks, they had to be encapsulated. And that&#39;s really what. Facebook React brought, which wasn&#39;t available. If you wanted to work in teams and you wanted to isolate your button to be a certain style, then you could make it a component through React in a way that was difficult to do if you worked in a team with CSS and those people who did still work with CSS has to come up with kind of ways of being able to modularize.&lt;/p&gt;
&lt;p&gt;CSS itself. And that became quite complex. So we got Bem, which is the block mod, element modifier, way of elective stuff. And I think it&#39;s fascinating because what shifted was this. What is often referred to as separation of concerns where you used to try and when we were learning h TML to CSS in the first place, I came across this term and it was about separating your HTML document from what was in your CSS.&lt;/p&gt;
&lt;p&gt;You, made reference. From, you need to put some classes sometimes in your htm l although admittedly, the first, when I went back to html, the first site I did, I tried to avoid using any classes to see if I could keep that separation of concern. And I was able to do it with the CSSI was really, I was able to select Nth Child of things. Okay, so&lt;/p&gt;
&lt;p&gt;[00:12:57] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: you did it that way, so you were Yeah. In effect using.&lt;/p&gt;
&lt;p&gt;[00:13:02] &lt;strong&gt;David Waumsley&lt;/strong&gt;: but yeah, they, but they were separated from the html, it wasn&#39;t in the document. So there was always that concern about keeping those things separate. And when we shifted to this, the separation of concern was keeping the. Units, the individual, the button separate from the input that was separate, and it&#39;s a complete shift. And that&#39;s obviously where we get things like Ben in CSS and we get, react and all of those libraries come out there. But I think we&#39;ll move on to the next question we asked ourselves, do we need it?&lt;/p&gt;
&lt;p&gt;[00:13:36] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah, I think I made the case just then that it definitely. I think it definitely had a moment in time where it, for the broadening scope of what the web could do.&lt;/p&gt;
&lt;p&gt;web apps and complicated web applications and, mobile phone apps and all of that kind of thing. The, I think it probably really useful and probably continues to be useful. I guess the question really relies on what kind of work it is that you are doing. do you need a component based web design?&lt;/p&gt;
&lt;p&gt;Maybe not. Would a team still need component based web design? I, can certainly see why it would be handy to have. but do you wanna go, should we go through the, the bullet points that&lt;/p&gt;
&lt;p&gt;[00:14:22] &lt;strong&gt;David Waumsley&lt;/strong&gt;: you listed? Yeah, so the, sense is still there today, isn&#39;t it? Don&#39;t repeat yourself the dry method, you know that is still there, it&#39;s not without problems with going for components for, one of those is that there were just scores of complex design systems out there, which, you spend more time trying to come up with design systems and you do design in anything I think is. I think that&#39;s where Brad was quite apologetic in his atomic design about that because he knows in a lot of organizations this becomes problematic in itself, doesn&#39;t it?&lt;/p&gt;
&lt;p&gt;[00:14:58] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: I wonder how many teams there are out there where, when they onboard somebody new, they have to teach them their design system, which, it might be popular throughout the world.&lt;/p&gt;
&lt;p&gt;Each employee might have been using something entirely different when they arrive. And so there&#39;s that moment where they&#39;ve got to be onboarded and taught how it works and, okay, this is what we do for this is what we do for that. And maybe we lose thousands of hours each year just to that process.&lt;/p&gt;
&lt;p&gt;[00:15:26] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. And I think his job was to, To try and explain how you can create your own in-house design system and people can spend more time on that. And my point on that, I think, I&#39;ve no experience of it, but it feels like it&#39;s not very agile. It doesn&#39;t mean that you can kind, you have to define how your button&#39;s going to look for this design system or how you name this.&lt;/p&gt;
&lt;p&gt;You can&#39;t change things as you move along with the project as real. feedback comes in from the site, so you fixed yourself early. So I think that&#39;s a problem. Oh, and then also&lt;/p&gt;
&lt;p&gt;[00:15:58] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: that&#39;s interesting. Yeah. So you mean not agile in that sense? Not, it&#39;s not agile, amongst the employees, you mean?&lt;/p&gt;
&lt;p&gt;It&#39;s not particularly agile to change, should you discover that certain things need, a complete overhaul. Okay. Alright. I&#39;d mis I&#39;d&lt;/p&gt;
&lt;p&gt;[00:16:12] &lt;strong&gt;David Waumsley&lt;/strong&gt;: misunderstood that. Alright. I, think you just, you and in a way there&#39;s great examples of how you can. spend a lot of time creating a design system, then you make a mistake and you replicate that mistake over and over again.&lt;/p&gt;
&lt;p&gt;There are a couple of examples of that in material design it, they removed the labels for your inputs and, decided because it looks stylish and then put placeholders above. And there&#39;s a great video by Hayden Picker in, on that one what happened to inputs, but obviously they realized that this is a usability problem for people and, misusing, how HML works for their design system, but it looked cool. But because it&#39;s Google and it&#39;s their material design, lots of people jumped on it. the dry don&#39;t repeat yourself, can also end up repeating lots of mistakes which are difficult to correct.&lt;/p&gt;
&lt;p&gt;And if you spend a long time, you&#39;re not very agile, are you? If you define how. Everybody has to work in putting something together in these blocks. You can&#39;t, as, I can just change, if I want my naming convention in my CSS to change, I can just do it. because you&#39;ve got a find a replace and it&#39;s done, right?&lt;/p&gt;
&lt;p&gt;[00:17:24] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: yeah. You&#39;ve gotta notify your team and make sure that not only do the team know it, but they&#39;ve implemented it across the entire project. Okay. Okay. Yeah. That&#39;s interesting. I&#39;d misunderstood your point there, but I get it now. Yeah.&lt;/p&gt;
&lt;p&gt;[00:17:36] &lt;strong&gt;David Waumsley&lt;/strong&gt;: when you realize you made a mistake on all of your forms, to have to go back over that design system and get everybody on a meeting, you can&#39;t, you&#39;re just say, oh, that&#39;s a, and I&#39;ll just change it.&lt;/p&gt;
&lt;p&gt;but yeah. And I think also that the. CSS in JavaScript is also those frameworks is difficult because effectively you&#39;re reinventing the browser. Most of the time you&#39;re telling the browser how to behave to do CSS. So it&#39;s, there&#39;s a lot of complexities with that and, that some of the downsides, What else did I put in here? Yeah, so you could, but obviously that leads to JavaScript burnout, which a lot of people have been experiencing as they have to, work with different frameworks which keep changing all the time, or feel they have to learn a new framework, which seems to do something a bit better than the last one.&lt;/p&gt;
&lt;p&gt;[00:18:28] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: yeah, it must be fairly demoralizing if you are. Literally, moving from job to job and you are moving from framework to framework and you never coincide with the same framework twice. And just to imagine the, the joy that would bring.&lt;/p&gt;
&lt;p&gt;[00:18:45] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. Yeah. And I think, Obviously stepping out and going back to HTML myself, I very quickly worked out that I didn&#39;t want to use things like bem, which was very popular as a way of modularizing your CSS and because it just didn&#39;t have that separation and concern. Suddenly your HTML was full of so many instructions that you needed so many selectors that affected your, CSS.&lt;/p&gt;
&lt;p&gt;Same with Tailwind again, which is, Being very useful for a lot of people who&#39;ve been working with component based design who are JavaScript based developers, mostly working with that. It&#39;s quite useful for them. But if you stand back for someone like me who could you know and has managed to learn enough CSS and HDML to feel confident with sites, you realize that this is just such an overload.&lt;/p&gt;
&lt;p&gt;Just so much extra code and no separation of concerns. So it depends who you are, but I can see there&#39;s a bit of a, shift away from the last decade where we were Yeah. Components because it didn&#39;t it make perfect sense?.&lt;/p&gt;
&lt;p&gt;[00:19:49] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Is there anything in your recent forays into CSS and HTML. That you have been defeated by. Is there anything that you&#39;ve wished to achieve or some sort of little stretch goal on a project where you thought that would be a nice thing to implement, where you realized that the only way to achieve that would&#39;ve been through something like a JavaScript framework, but you just said to yourself, no, forget it. We&#39;ll just, we&#39;ll pair back the design, we&#39;ll do the, more straightforward thing.&lt;/p&gt;
&lt;p&gt;[00:20:15] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. I think you&#39;ve just led onto the next topic, actually, the last thing we were gonna cover, which is, what are our component options? Because yes, in a way, we need it for this site. but yeah, we, I listed out some things here where we now have more options.&lt;/p&gt;
&lt;p&gt;Once really, if you wanted this component based design. And to encapsulate something that you were reusing, and in our case, we&#39;ve needed it. We probably need a podcast player or not. We&#39;ll talk about this later. Yeah. But that&#39;s a component where we&#39;d probably want to be able to take this one component and move it to wherever you needed an audio player without having to reinvent the wheel all the time with it.&lt;/p&gt;
&lt;p&gt;And before, really, there wasn&#39;t much option you would&#39;ve to use something like a React library to do something like that. Where now we have got some new options, they&#39;re not new, but we have what is called web components. do you wanna explain that&lt;/p&gt;
&lt;p&gt;[00:21:10] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: a little bit? &#39;cause I think it might be interesting for it. Maybe use the use case of the, the air, what is it? Even the MP three player? That&#39;s what I&#39;m after. The audio player. yeah, just go into that a&lt;/p&gt;
&lt;p&gt;[00:21:23] &lt;strong&gt;David Waumsley&lt;/strong&gt;: little bit. I mean with web components, really, I mean it&#39;s just using, it&#39;s actually predates React. It goes back to, 2011. It&#39;s taken different forms and it&#39;s different APIs if you like, but essentially it is just linking your JavaScript to your HTML.&lt;/p&gt;
&lt;p&gt;So at the simplest level, it is a custom element that you create. So we&#39;ve actually got a couple of them acting on the site, which I&#39;ll do videos on later. so we&#39;ve actually got the videos going through a web component. I. Which effectively is just within, I borrowed it from somebody else&#39;s library, and all it is a custom element that says, I forgot what it&#39;s called actually on it.&lt;/p&gt;
&lt;p&gt;It says Light YouTube embed or whatever, and we&#39;re putting that in there. And then this JavaScript created by somebody else is acting on this custom element. Stopping YouTube from loading all of its things until this, image has been clicked. And we have another one where it is, taken from Dave Rupert, which I haven&#39;t shown to anybody yet.&lt;/p&gt;
&lt;p&gt;But, we&#39;ll do a video on this one, which is a podcast player, designed around the existing. audio tag the element itself, but add it on through JavaScript around another custom element called a podcast player. it adds to that and adds in some extra functionality through JavaScript and also the Stein in that goes with it.&lt;/p&gt;
&lt;p&gt;And this is what&#39;s considered as the shadow dom because. The styling isn&#39;t, so it&#39;s very portable. We can take that and move it anywhere else. So we have got that option in there. there&#39;s a lot to talk about this because it&#39;s done at the end of last year, 2000 and, 23. There were so many people, if you like, who were standard space people talking about this and whether they need it.&lt;/p&gt;
&lt;p&gt;that it&#39;s gained a lot of attention and for me. I don&#39;t know if I fully understand what we&#39;re talking about. &#39;cause some people talk about the shadow dom, which is a way of using JavaScript to add in to your browser, some extra slots if you like. Yeah. With functionality in it. And it allows you to encapsulate your CSS, which used to be a problem for everybody before.&lt;/p&gt;
&lt;p&gt;But it also has a slight issue with it in the sense that, as you saw, I was showing you the demo of the podcast player when you. Load the page. There&#39;s a, flash of un styled content that happens &#39;cause the JavaScript then has to load the, CSS. so there&#39;s a lot of people who are just looking towards the light dom.&lt;/p&gt;
&lt;p&gt;But effectively, when you&#39;re talking about light dom, all you&#39;re talking about is putting a custom element. So you create your own instead of having a diviv. Between your angle brackets, you put a name, so it could be Pod, and it has to have a dash player in between that, and you&#39;ve got your own custom element and you can attach JavaScript or CSS to it, or you can create within that.&lt;/p&gt;
&lt;p&gt;So that, that&#39;s the, I think more people are moving that way. certainly when you look at, it&#39;s not the case with React at the moment, but you can, through another service, you can convert a lot of the. Libraries that are created Views library, they&#39;ve got one as well. And React Libraries, they can be converted into, web components, HTML, web components as well.&lt;/p&gt;
&lt;p&gt;So we, I think there&#39;s a lot of moving that way or moving both directions. So if you are a. JavaScript library person who wants to stay would react? I think you can. There&#39;s a, bit of a, getting back to standards without React, being something with JavaScript, people being off on a entirely different planet to the web standards people who put JavaScript as the third language, which you need to call upon.&lt;/p&gt;
&lt;p&gt;So I think there&#39;s a emerging going on and I&#39;m talking too much. no. I&lt;/p&gt;
&lt;p&gt;[00:25:21] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: was just gonna say, I&#39;ll probably. Paraphrase what you&#39;ve just said in order to Encapsulate my understanding of it as well, but also to say that if you want to see this in action now, I don&#39;t know if this will be the correct url, but the show notes for this episode will be at no script show slash five.&lt;/p&gt;
&lt;p&gt;there&#39;ll be an audio player there or whether it&#39;ll be this, Web component version of it is as yet to be decided. But if you, see something with, I don&#39;t know, a non-standard player, then you&#39;ll know that David has implemented it on that particular page. But is so what you&#39;re saying is this web component for, let&#39;s take the example of the audio player you, load in the.&lt;/p&gt;
&lt;p&gt;The, audio file in the normal way the browser takes control and says, okay, I&#39;m gonna show it with the default browser, version of an audio player, which is, pretty uninteresting to look at. But in order to make that more potentially usable, to add in elements, take away elements or just style elements, you&#39;ve, there&#39;s a little bit of JavaScript which hijacks that and.&lt;/p&gt;
&lt;p&gt;Makes it into a web component so you can make, I dunno, the play button be in the center rather than at the far left. You can make the, the, scrubber, the way you find where you want to go in the audio. You can stretch that across the whole element. You can add, jump 30 seconds, go back 30 seconds, you can put the speed up, play it two times and all of that.&lt;/p&gt;
&lt;p&gt;you can style it, you can make it go wherever you want, but a drawback of that. Is that the JavaScript takes a moment to load. So you get this kind of content, a cumulative layout shift problem where you get a flash of the old one, the new one comes in and it looks nice when it&#39;s done, but maybe you&#39;re storing up problems in terms of Google and SERP and all that.&lt;/p&gt;
&lt;p&gt;But I dunno, but is that what you&#39;re saying? This is the web component that you&#39;ve played with here. You&#39;ve hijacked the audio. The default audio player and you&#39;ve just made it look different, but you can imagine that being played out across any aspect of the website. It could be the video, it could be the buttons, it could be anything.&lt;/p&gt;
&lt;p&gt;[00:27:26] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, I mean it&#39;s obviously, I haven&#39;t done it. It&#39;s somebody much cleverer than me, Dave Rupert, who&#39;s actually has created a podcast player for their show, which is Shop Talk. Which is, excellent. so they created that and I&#39;ve just been able to literally just take their files and do that. And it&#39;s on style.&lt;/p&gt;
&lt;p&gt;if I put the styling on, I have to take the sty in and put it in the JavaScript itself, and it&#39;s loading it through the shadow dom. But yes, it&#39;s creating all of the things that through JavaScript they&#39;ve added in, which isn&#39;t in the default audio, but if somebody turns JavaScript off, the interesting thing is that we&#39;re still putting the audio, tag within.&lt;/p&gt;
&lt;p&gt;The custom element tags that we&#39;ve got, and if I turn JavaScript off the audio. Player is still there, the default one that&#39;s in your browser and will still play if you turn off your JavaScript. So as wonderful fallback. Yeah. So&lt;/p&gt;
&lt;p&gt;[00:28:21] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: the JavaScript hijacks the already loaded audio tag and then just disrupts that and replaces it, what have you.&lt;/p&gt;
&lt;p&gt;Yeah. rewrites that bit of the dom, and inserts it. And you were saying that the styling in there, if you don&#39;t put any styling inside of that little, shadow dom.&lt;/p&gt;
&lt;p&gt;[00:28:39] &lt;strong&gt;David Waumsley&lt;/strong&gt;: It just, it&#39;s default styling, is it? Or, how does it look? Yeah, that&#39;s it. You have to put the, any styling you want has to be registered within the JavaScript under the shadow dom, where the light dom, which is what I&#39;m using for the videos on the learn tab, is just preventing, that&#39;s light dom.&lt;/p&gt;
&lt;p&gt;So the. Effectively, it&#39;s nothing more as I understand it, other than putting this custom element that we&#39;ve put of light YouTube and connecting any JavaScript that you want to do to it. So it&#39;s no different for something I did before I even understood about web components. So I used to do that with JavaScript.&lt;/p&gt;
&lt;p&gt;The only difference is now that it&#39;s relating to a particular custom element, right? But I&#39;ve got my CSS separate to that, so it loads before, so there&#39;s no flash. there&#39;s none of that kind of cumulative shift in nonsense or un styled stuff, which you do get with the shadow dom. Okay. It&#39;s the interesting thing though, is I think actually we skipped over a couple of things.We should,&lt;/p&gt;
&lt;p&gt;[00:29:38] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: yeah, I was just gonna say, should we go back and finish that list?&lt;/p&gt;
&lt;p&gt;[00:29:41] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, Because we&#39;re saying that our options to us, when we&#39;ll talk about the next option, which changes component based. if you do want component-based design, we&#39;ve got container queries, which came out at the end of last year, supported by all the major browsers, which, combined with some other new stuff does allow us to effectively, control the styling so we, we can set our component up to.&lt;/p&gt;
&lt;p&gt;Style itself according to the space available to it. which means that you can move it as a component in and out of other places. And we also have something which really we don&#39;t understand, but it&#39;s very clever, which is web assembly. Again, this is all standard stuff. This is, part of the web standards.&lt;/p&gt;
&lt;p&gt;it&#39;s, E extra to, H-T-M-L-C-S-S, JavaScript, and then we&#39;ve got kind of web assembly components where we can effectively translate through that. Any other, most other technologies like might be something made. A program that might be made for making a game can be turned into html. So that&#39;s probably something we&#39;ll never get into, but we&#39;ll talk about container queries next week.&lt;/p&gt;
&lt;p&gt;So that&#39;s caught us up on that. But web components yeah, is interesting because we&#39;ll need it. But I think what&#39;s, we&#39;re in the middle of a debate about this. So shadow dom was this wonderful way to be able to create. Components and B standards compliant. So it&#39;s gonna last as long as your browser lasts, which you can&#39;t say the same with something like React.&lt;/p&gt;
&lt;p&gt;It&#39;s gonna last as long as React lasts. No. Yeah. but something that standards will be there. While there are browsers, while we have the web, so that&#39;s its benefit. But now you know, the shadow done was a way of being able to encapsulate your CSS, so you can keep it as a separate module, which you can take and put it in your different project without being affected by the cascade of your.&lt;/p&gt;
&lt;p&gt;Page and the stars there. That was a big plus. But I think what&#39;s throwing everything out now, and it&#39;s not here yet fully, and that is at scope, which is going to be something you can do with your CSS, where you can define which elements you want to start in their particular way. And there will be outside of the cascade.&lt;/p&gt;
&lt;p&gt;So I think we&#39;re on. Because a scope I think is supported by chromium browsers at the moment. So that&#39;s okay. That&#39;s all. Is it? Okay? yeah, It&#39;s 60% of the web, but I think by the end of the year this will be here. So it does throw, the big question up at the moment, if you do need these components.&lt;/p&gt;
&lt;p&gt;The big reason for needing something like Views or React or something like that was if you worked in teams and you needed to encapsulate your style so you can move those elements into your new design and have them, work independently. App Scope really throws the cat among the pigeons there, doesn&#39;t it?&lt;/p&gt;
&lt;p&gt;It says, here&#39;s another way of being able to achieve that, and it&#39;s just within CSS. Do you think that&#39;s&lt;/p&gt;
&lt;p&gt;[00:32:45] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: gonna be the beginning of a shift away from a lot of these JavaScript endeavors towards doing it natively in CSS? I genuinely don&#39;t have any intuition on that, but it sounds like it&#39;s gonna enable you to do a lot of the heavy lifting that the JavaScript, it has been deployed to do.&lt;/p&gt;
&lt;p&gt;And if that&#39;s the case, this is much more. I guess modular, understandable. Probably much more readable. Certainly. you don&#39;t have to rely on loading a boatload of JavaScript to get it to work if it&#39;s already, shipped with all the browsers, 60% at the moment. But like you say, by the end of the year, maybe 90 something percent.&lt;/p&gt;
&lt;p&gt;[00:33:26] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, the pendulum just swing, isn&#39;t it? The, our standards didn&#39;t, HTML and CSS didn&#39;t give what people wanted when they wanted component based design. When that mentality of how we design thing was there, it just didn&#39;t give you what you want, which is why things like React, I think took off and, which I think led to the split of.&lt;/p&gt;
&lt;p&gt;People who maybe just create, regular static sites of some people, they just thought you only need JavaScript. You don&#39;t really need to learn all this other stuff. Stick to tailwind in there, or something like that. And you can sort out the CSS, it&#39;s a bit quirky, but we can do that. And these other people who would be in the old style of H TM L documents start it garden style.&lt;/p&gt;
&lt;p&gt;And I think there&#39;s a, move back. The problem has been the technology. So I think there&#39;ll be a shift back. There&#39;ll be perhaps less people who will feel like they, JavaScript is all they need to learn, and more people will say, JavaScript as needed, which is my approach with everything for what I need to do.&lt;/p&gt;
&lt;p&gt;The CSS and the HTML is there to achieve almost everything I need. Yeah. With a minimum of, for these components where I&#39;ll need some JavaScript and somebody else&#39;s, someone who&#39;s cleverer than me, put something together that I could insert into my. My stuff, but at scope of course means that I think the light dom will be, effectively at scope, takes care of the problem.&lt;/p&gt;
&lt;p&gt;If you, I think. If you need to encapsulate your CSS around certain elements, you can do that within regular CSS or will be able to, I think, before the end of the year. yeah. Nice. We&#39;ll see. Yeah.&lt;/p&gt;
&lt;p&gt;[00:35:02] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. it&#39;s a, it&#39;s a, moving feast, isn&#39;t it? Or a movable feast. Yeah. The whole thing is definitely moving, but fascinating, what, was true 10 years ago is becoming untrue now, maybe.&lt;/p&gt;
&lt;p&gt;And, I guess my, hope with all of this is that it just becomes. Much more straightforward to learn because JavaScript is, for the vast majority of all of that, it&#39;s been beyond me and and I&#39;m hoping that a lot of these technologies will bring. an easier way to implement that, a more understandable way.&lt;/p&gt;
&lt;p&gt;And I&#39;m not getting any younger and learning&#39;s getting harder. So, yeah, that&#39;s&lt;/p&gt;
&lt;p&gt;[00:35:41] &lt;strong&gt;David Waumsley&lt;/strong&gt;: my hope. The declarative language are the easiest. The browser already understands you just tell it what to do. But with the, when you get to JavaScript, it&#39;s I&#39;m going to tell you browser what to do. Yeah. And if you take all those responsibilities and you have to have a mindset, which we don&#39;t have, I don&#39;t think, we&#39;re not, it&#39;s. Some people do, but I, do feel there&#39;s, over this period, I feel like there&#39;s a coming together in a way of this. It felt like everything went, it was JavaScript first CSS within it that&#39;s shifting back.&lt;/p&gt;
&lt;p&gt;But there will still be JavaScript developers, but there&#39;s that kind of, because I think. That integration with web components that they can work or you can move things from one place to the other. if you want to work in one way, you can, but for people like us who generally creating those sort of 80% of websites that small businesses need out there, it&#39;s not really a path we need to go down, I don&#39;t think.&lt;/p&gt;
&lt;p&gt;[00:36:37] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: No, indeed. I feel like we&#39;ve covered that particular topic. What do you&lt;/p&gt;
&lt;p&gt;[00:36:40] &lt;strong&gt;David Waumsley&lt;/strong&gt;: think? Yeah, I think, yeah, we mumbled our way through it. Yeah.&lt;/p&gt;
&lt;p&gt;[00:36:45] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Do we want to. Do we wanna talk about what&#39;s coming up next time? I know you&#39;ve written something in the show notes there. Yeah.&lt;/p&gt;
&lt;p&gt;[00:36:52] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. It&#39;s, just, we mentioned it, we&#39;ll just have a chat a bit further about the same topic really, but just talking a little bit about, container queries, &#39;cause that&#39;s new, bit of CSS and, we&#39;ll try and do our best to explain where we may or may not want to use it.&lt;/p&gt;
&lt;p&gt;It&#39;s such a big thing, something that we couldn&#39;t do. And everybody was very excited about it. But honestly, we&#39;ll talk about it next week, but I&#39;m thinking, where will I use it?&lt;/p&gt;
&lt;p&gt;[00:37:19] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. Yeah. okay, that&#39;s for next time. don&#39;t forget, if you want to follow along with what we&#39;re doing, the website is being updated episode by episode.&lt;/p&gt;
&lt;p&gt;no script show is the website. This is episode five. So no script show slash epi, sorry, not slash episode. Anything just slash five. So no script show. Slash five. and we will see you next time. If you watch this on YouTube, please give us a comment that would really help. That&#39;s really nice to, to hear what it is that you&#39;ve got to say.&lt;/p&gt;
&lt;p&gt;And obviously keep an eye on the, that channel as well, because David will be, updating it with his own content in between these episodes. Okay. That&#39;s it for now. Thanks, David. Done. I&#39;ll,&lt;/p&gt;
&lt;p&gt;[00:38:02] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I&#39;ll see you next time. Yeah. Thanks for listening everyone. Bye.&lt;/p&gt;
&lt;/details&gt;</content>
  </entry>
  <entry>
    <title>Accessibility - Skip nav links &amp; :focus-visible</title>
    <link href="https://noscript.show/learn/5/" />
    <updated>2024-02-20T00:00:00Z</updated>
    <id>https://noscript.show/learn/5/</id>
    <content type="html">&lt;h2 id=&quot;transcript&quot;&gt;TRANSCRIPT&lt;/h2&gt;
&lt;p&gt;We&#39;ve been progressively building the show&#39;s website with a first focus on trying to make the content as usable as we can before seriously tackling the aesthetics.&lt;/p&gt;
&lt;p&gt;Now we have 5 items in the main navigation, it seemed like time to add a way for &lt;strong&gt;keyboard&lt;/strong&gt; and &lt;strong&gt;screen readers&lt;/strong&gt; users to be able to skip the repetition of these links and get to the main page content.&lt;/p&gt;
&lt;p&gt;WCAG (the Web Content Accessibility Guidelines) does not specify &amp;quot;skip nav links&amp;quot;, but says we should have a mechanism to &lt;a href=&quot;https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks.html&quot;&gt;bypass blocks&lt;/a&gt; of content that are repeated on multiple Web pages. Other examples they give are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;News site&#39;s where the users may have to go though many article links to get to the main story and&lt;/li&gt;
&lt;li&gt;Ecommerce sites where there could be many filter options before they can get to the products.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some sites also provide a &lt;strong&gt;&amp;quot;skip to the footer&amp;quot;&lt;/strong&gt; option too.&lt;/p&gt;
&lt;p&gt;We don&#39;t need that, but this has made me think about how footers are often used to dump less relevant content and legalese and how we might also want to allow people to skip that. Amazon does this by placing their &amp;quot;back to top&amp;quot; link at the start of their footer.&lt;/p&gt;
&lt;p&gt;(Accidentally there&#39;s no legal links here as there&#39;s no tracking or cookies on this site)&lt;/p&gt;
&lt;p&gt;Truefully, if it hadn&#39;t been for accessibility legislation increasing awareness (and we&#39;ll probably have more with the &lt;a href=&quot;https://ec.europa.eu/social/main.jsp?catId=1202&quot;&gt;European Accessibility Act&lt;/a&gt; coming in 2025) I am not sure how much attention I would have paid to these things.&lt;/p&gt;
&lt;p&gt;It&#39;s a shame I needed the law to encourage me to do the designer&#39;s main job of finding empathy with users, but now I think sharpening up these &amp;quot;soft skills&amp;quot; is becoming more vital. Not just to increase the reach of our website, but to highlight the advantages we have over AI.&lt;/p&gt;
&lt;p&gt;As a sighted mouse user I almost never use the keyboard on web pages until recently when I had a temporary strain on my mouse hand. Presumably age will force me to do this more.&lt;/p&gt;
&lt;p&gt;From my limited experience of tabbing my way around the web it is frustrating, but this must pale into insignificance compared with those with motor issues who have to navigate pages with &lt;a href=&quot;https://webaim.org/articles/motor/assistive&quot;&gt;head wands, mouth sticks or sip-and-puff switches.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While many off-the-shelf sites have &amp;quot;skip to content links&amp;quot; added by default they can make things even more confusing when addons (like forms) and DIY user mess up the tabbing order.&lt;/p&gt;
&lt;p&gt;It is not difficult to add this yourself and do it right, but before I get into that I want to mention (as it&#39;s relevant) the new…&lt;/p&gt;
&lt;h3 id=&quot;focus-visible-pseudo-class&quot;&gt;:focus-visible (pseudo class)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible&quot;&gt;:focus-visible&lt;/a&gt; now has support across all major browsers and solves a problem that when a sighted mouse user clicks on a focusable element (like a button) they get a &#39;focus ring&#39; that may only be needed to guide those using the tab key.&lt;/p&gt;
&lt;p&gt;When I was in a page builder community this issue came up regularly with people saying how do I get rid of the ugly outline around the header text of my FAQ section when clicked. The reason was the accordion module marked up the titles with the button tag.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;wrong&lt;/em&gt; solution was to the add this CSS:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;:focus&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;outline&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://www.a11yproject.com/posts/never-remove-css-outlines/&quot;&gt;My solution&lt;/a&gt; was to add JavaScript to detect a mouse action and then remove the outline. Now browsers will by magic (or heuristics) do this for us via its own user agent CSS. No need for JS.&lt;/p&gt;
&lt;p&gt;Assuming we are not &lt;a href=&quot;https://caniuse.com/?search=focus-visible&quot;&gt;supporting IE&lt;/a&gt;, we only have to remember to avoid using :focus (rather than :focus-visible) when we want to custom style our focus state as this will undo what browsers are now doing for us.&lt;/p&gt;
&lt;p&gt;I have used this:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;:focus-visible&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;outline&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2px solid &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--accent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;outline-offset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .35rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;skip-nav-links&quot;&gt;Skip nav links&lt;/h3&gt;
&lt;h4 id=&quot;adding-the-html&quot;&gt;Adding the HTML&lt;/h4&gt;
&lt;p&gt;Ideally I would have set this up first, but the idea was to build up this starting with the bare minimum which was a single page.&lt;/p&gt;
&lt;p&gt;I also wanted to see how far we could go using VS Code search and replace before having to bring in a CMS or static site generator the manage the growing number of pages&lt;/p&gt;
&lt;p&gt;To quickly add the skip links to all pages I went to VS Code&#39;s &amp;quot;Edit tab&amp;quot; and selected &amp;quot;replace in files&amp;quot;. I searched for the beginning&lt;/p&gt;
&lt;p&gt;tag which gave me all the HTML pages and replace with:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#skip-to-main&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;skip-link&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Skip to content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The link has an ID (skip-to-main) for the same page linking and a class (skip-link) or the styling&lt;/p&gt;
&lt;p&gt;I repeated this search and replace to add where I wanted the skip link to go to in the document. I chose the maing tag Some use a H1:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;narrow&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;skip-to-main&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I had to do this twice as there were two types of classes already added to the main tag.&lt;/p&gt;
&lt;h4 id=&quot;adding-the-css&quot;&gt;Adding the CSS&lt;/h4&gt;
&lt;p&gt;We needed some styles for the link and a way to hide it until it is focussed on. As I have already added a custom focus ring we have that already.&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.skip-link&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .3rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;margin-inline-start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .5rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--shade&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token property&quot;&gt;text-decoration-thickness&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.06rem&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;text-underline-offset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0.2rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;token property&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token comment&quot;&gt;/* styles the skip to content link */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The most frustrating part of this is that CSS has multiple ways to hide content, but no specific display property for hiding content from all except screen reader or keyboard user.&lt;/p&gt;
&lt;p&gt;We can&#39;t use&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;as this removes elements altogether. Because of this we have all sorts of over complex “belt and braces” approaches which have to get changed according to the changing inconsistency of screen readers and browser vendors&lt;/p&gt;
&lt;p&gt;Here I have included what is used by &lt;a href=&quot;https://tailwindcss.com/docs/screen-readers&quot;&gt;Tailwind&lt;/a&gt; and Bootstrap at the time of recording plus clip-path (that is supposed to replace the now deprecated clip property, but is used for old browsers).&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.skip-link:not(:focus)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
&lt;span class=&quot;token property&quot;&gt;clip-path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;inset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -1px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;clip&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;token property&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; nowrap&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;border-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;/* hides the link when not focussed */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the live site (for now) I have only added:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.skip-link:not(:focus)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
 &lt;span class=&quot;token property&quot;&gt;clip-path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;inset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is to see under what circumstance this today is not enough. Let me know if you see an issue. There was one with Safari, but I think it is fixed now.&lt;/p&gt;
&lt;p&gt;What this does is clip all edges of the element to 50% effectively hiding everything.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.w3schools.com/accessibility/accessibility_skip_links.php&quot;&gt;W3schools.com&lt;/a&gt; take a different approach.&lt;/p&gt;
&lt;h3 id=&quot;other-links&quot;&gt;Other links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.scottohara.me/blog/2023/03/21/visually-hidden-hack&quot;&gt;Visually hidden content is a hack that needs to be resolved, not enshrined&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tpgi.com/the-anatomy-of-visually-hidden/&quot;&gt;The anatomy of visually-hidden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/merri/can-we-at-least-modernize-visually-hidden-n31&quot;&gt;Can we at least modernize visually hidden?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Creating links that are not too hyper!</title>
    <link href="https://noscript.show/learn/4/" />
    <updated>2024-02-13T00:00:00Z</updated>
    <id>https://noscript.show/learn/4/</id>
    <content type="html">&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;As hyperlinks make the web what it is, I thought I should talk a bit about how we have marked-up and styled our anchor tags on this initial version of the show&#39;s website.&lt;/p&gt;
&lt;p&gt;The premise of the podcast is that we are relearning the fundamentals of web design. What this has been showing us is that this process is only partly about learning new approaches and specifications.&lt;/p&gt;
&lt;p&gt;Much of it is about unlearning things that once seemed like cool design, but increasingly look more like ignorance and even contempt for web users.&lt;/p&gt;
&lt;h3 id=&quot;lets-start-with-the-basic-html-markup&quot;&gt;Let&#39;s start with the basic HTML markup&lt;/h3&gt;
&lt;p&gt;Getting an anchor link with the VSCode editor is really easy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We type &amp;quot;a&amp;quot; and enter on the first option that automatically appears. The cursor moves to where we want to add our url.&lt;/li&gt;
&lt;li&gt;If that url is for a local HTML file we only need to enter a forward slash to select from the available files.&lt;/li&gt;
&lt;li&gt;Then we only need to tab to where we can enter the text to be linked (just before the closing anchor tag)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; linked text here&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For accessibility we should avoid vague link copy like &amp;quot;Click Here&amp;quot; and &amp;quot;Read More&amp;quot; which can be confusing when a screen reader reads them out of context. Of course, we can get around this by adding an aria-label for screen readers to announce:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;read more about avoiding aria-labels&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; read more...&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An easier way might be to try (where possible) to design with non-sighted people in mind.&lt;/p&gt;
&lt;p&gt;It saves having to read the difference between aria-label and aria-labelledby and still doubting you got it right? That could just be me!&lt;/p&gt;
&lt;p&gt;Recently I programmed the &amp;quot;read more&amp;quot; links on a WordPress blog archive page to add an aria-label that included the blog post&#39;s title.&lt;/p&gt;
&lt;p&gt;It&#39;s a very common pattern, but often it seems pointless as the title is typically a link that has been styled to not look like a link and so require another for the sighted people.&lt;/p&gt;
&lt;h3 id=&quot;using-target-blank&quot;&gt;Using target &amp;quot;_blank&amp;quot;&lt;/h3&gt;
&lt;p&gt;In the VS Code editor we can select the 2nd anchor tag option (blank) and will get:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&quot;token attr-name&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;_blank&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;noopener noreferrer&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; read more...&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This, of course, opens the link in a new browser tab and VS Code kindly adds rel=&amp;quot;noopener noreferrer&amp;quot;.&lt;/p&gt;
&lt;p&gt;It does this as target “_blank” opens up a security issue which these solve. There is no SEO implication with these.&lt;/p&gt;
&lt;p&gt;You may also notice that rel=&amp;quot;nofollow” is not an option nor does it auto-complete in VSCode. I am quite thankful for this because I was an over user of nofollow.&lt;/p&gt;
&lt;p&gt;Many years back I bought into the idea that you could balance your inbound and outbound like ratio for better SEO results. I&#39;m sure ratios matter, but if everyone can prevent search engines from following everyone else there is little point in having search or SEO&lt;/p&gt;
&lt;p&gt;From now on I&#39;m using it to prevent passing link authority to sites that don&#39;t reflect the values of the site. My guess would be that with Google&#39;s new focus on &lt;a href=&quot;https://developers.google.com/search/blog/2022/12/google-raters-guidelines-e-e-a-t&quot;&gt;Experience, Expertise, Authoritativeness and Trustworthiness&lt;/a&gt; linking to reputable sources might help.&lt;/p&gt;
&lt;h3 id=&quot;when-should-we-use-target-blank&quot;&gt;When should we use target &amp;quot;_blank&amp;quot;?&lt;/h3&gt;
&lt;p&gt;For most previous sites I&#39;ve defaulted to using target&amp;quot;_blank&amp;quot; for external links. This is something which a &lt;a href=&quot;https://css-tricks.com/use-target_blank/&quot;&gt;2014 CSS tricks article&lt;/a&gt; argues is a bad approach.&lt;/p&gt;
&lt;p&gt;I read this article when it was published and changed my approach, but like one of the article&#39;s commenters says I had it flagged by a client as a bug! Since this article I imagine even more people&#39;s use of social media where external links open a new tab.&lt;/p&gt;
&lt;p&gt;Interestingly when I switched to following people who blog on web standards who mostly don&#39;t use target&amp;quot;_blank&amp;quot;, I was thrown at first. That told me I had also developed this expectation.&lt;/p&gt;
&lt;p&gt;I believe the CSS tricks article is right. When you force target”_blank” you take away the user&#39;s ability to opt-in to that. This, of course, is assuming they know they can right click and choose to open links in a new tab or window.&lt;/p&gt;
&lt;p&gt;This site has one of the &amp;quot;good reasons&amp;quot; CSS tricks list for using target&amp;quot;_blank&amp;quot; This is that we have audio and video content which could be disrupted if the user clicks a link that does not open a new tab.&lt;/p&gt;
&lt;p&gt;Of course, that is not on every page. Initially to keep the site&#39;s behaviour consistent I made the external links on resources and subscribed page target&amp;quot;_blank&amp;quot;, but I have changed this to give (our type of) users the option. I would be interested in your thoughts.&lt;/p&gt;
&lt;p&gt;As most modern screen readers will declare what will happen, the concern is with sighted users. To help I have added a “link-out” icon with this CSS that selects every link with the target=&amp;quot;_blank attribute:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;a [target=&quot;_blank&quot;]:after&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
&lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;/images/link-out.svg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;margin-inline&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0.2rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--brand&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://webaim.org/techniques/hypertext/hypertext_links#new_window&quot;&gt;Webaim.org&lt;/a&gt; suggests this, but also note that it does not necessarily tell users that a new tab will open.&lt;/p&gt;
&lt;p&gt;I can&#39;t possibly do this video without citing Heydon Pickering&#39;s powerful slide from a &lt;a href=&quot;https://vimeo.com/377175838&quot;&gt;talk at Paris Web&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;underline-your-f-cking-links-you-sociopaths&quot;&gt;&amp;quot;Underline your f*cking links, you sociopaths&amp;quot;&lt;/h3&gt;
&lt;p&gt;This seems to have become a popular t-shirt slogan now.&lt;/p&gt;
&lt;p&gt;Without Custom CSS browser agent styles give us underlines on our links by default. It is a signifier that identifies this UI from other things as a way of navigating the web.&lt;/p&gt;
&lt;p&gt;Unfortunately designers come along and remove them without a full understanding of the impact. Particularly on the 300 million colour blind people of the world.&lt;/p&gt;
&lt;p&gt;I&#39;m particularly guilty of this because I used a builder based Bootstrap 4 framework and unthinkingly went along with the default. They remove the links until the user hovers over them. This was changed with Bootstrap 5.&lt;/p&gt;
&lt;p&gt;In Heydon&#39;s talk he mentions how accessibility expert &lt;a href=&quot;https://adrianroselli.com/&quot;&gt;Adrian Roselli&lt;/a&gt; was urging Mastodon to add underlined links. There was resistance as The CEO and lead developer did not want the &lt;a href=&quot;https://github.com/mastodon/mastodon/pull/9898#issuecomment-456410756&quot;&gt;&amp;quot;visual clutter&amp;quot;&lt;/a&gt; (and being open source there were other subjective opinions). It seems they have added underlines now.&lt;/p&gt;
&lt;h3 id=&quot;styling-underlines-with-css&quot;&gt;Styling underlines with CSS&lt;/h3&gt;
&lt;p&gt;Of course aesthetics are also important and fortunately CSS keeps giving us more control over our underlines.&lt;/p&gt;
&lt;p&gt;We can independently colour, style and set the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness&quot;&gt;thickness&lt;/a&gt; of them. We can set them to skip ink ( i.e. leave space for font descenders)or not . My favourite is the new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-underline-offset&quot;&gt;text-underline-offset&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For our site, I have used this reset taken this from a brilliant article by &lt;a href=&quot;https://moderncss.dev/modern-css-for-dynamic-component-based-architecture/#css-reset-additions&quot;&gt;Stephanie Eckles:&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* Baseline for default links */&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;a:not([class])&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;text-decoration-thickness&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.06rem&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;text-underline-offset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0.4rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One difference on this site is that I set mine to rems (set by the root) where she uses ems relative to the element. We are using a lot of h2&#39;s as links and ems seemed too thick in this case.&lt;/p&gt;
&lt;p&gt;One last thing I like to do to is give links a subtle press down feel on click:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt; &lt;span class=&quot;token selector&quot;&gt;a: active&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
&lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;inset-block-start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0.05rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* inset-block-start is the
 modern way to write &quot;top&quot;  */&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Web safe or system fonts are cool again</title>
    <link href="https://noscript.show/learn/3/" />
    <updated>2024-02-06T00:00:00Z</updated>
    <id>https://noscript.show/learn/3/</id>
    <content type="html">&lt;h2 id=&quot;transcript&quot;&gt;TRANSCRIPT&lt;/h2&gt;
&lt;p&gt;In the last video I showed how we got fluid typography for the show&#39;s website through Utopia.fyi&#39;s wonderful (copy and paste) tool. It gives us these variables we can assign to our type elements. Carrying on with the theme of typography I want to talk about fonts.&lt;/p&gt;
&lt;p&gt;As this is an agile project where the aim is to get something out and iterate as we go (in this case in line with the shows content) we are starting with system fonts.&lt;/p&gt;
&lt;p&gt;System fonts are having a bit of a comeback at the moment so It seemed like a good time to talk about why that is and why it might matter more in the near future and also mention another great online tool.&lt;/p&gt;
&lt;h3 id=&quot;free-online-tool-for-web-safe-fonts&quot;&gt;Free online tool for web safe fonts&lt;/h3&gt;
&lt;p&gt;Firstly, VS code offers a drop-down menu of web safe font stacks when you type font family. That&#39;s good, but if you want more information and choice it is worth checking out the &lt;a href=&quot;https://modernfontstacks.com/&quot;&gt;Modern Font Stack site.&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you hover over any collection you will see an information icon which when clicked will take you to GitHub. Here you will see a visual representation of the sytem fonts and will be able to see the font weights avialable.&lt;/p&gt;
&lt;h3 id=&quot;the-pros-and-cons-of-web-safe-fonts&quot;&gt;The Pros and Cons of web safe fonts&lt;/h3&gt;
&lt;p&gt;Let&#39;s start with the more obvious pros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;It&#39;s very quick and easy to set up.&lt;/strong&gt;&lt;br&gt;
No messing with converting and optimising fonts. No individually adding weights. No messing with font-display to avoid “Flashes of Unstyled or invisible Text” no updating fonts because it&#39;s not displaying correctly on X device.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It&#39;s more environmentally friendly and cheaper.&lt;/strong&gt;&lt;br&gt;
If you and your visitor are paying for their bandwidth use. Certainly it will help us keep out Netlify host free for longer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Faster page loads which might boost SEO,&lt;/strong&gt;&lt;br&gt;
Less visitor bounces and a plus point for Google&#39;s algorithm.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No 3rd party gathering your visitor&#39;s data and legal risk of fines.&lt;/strong&gt;&lt;br&gt;
Something we have been seeing with those using the Google Font API.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Less obvious upsides for using system fonts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Access pro fonts optimised and updated to the users device.&lt;/strong&gt;&lt;br&gt;
We would not be able to license fonts like San Francisco and Segoe&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Familiar to users.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Looking ahead to when &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-data&quot;&gt;prefers reduced data&lt;/a&gt; is supported&lt;/strong&gt;&lt;br&gt;
As we saw with the rapid use of Dark and Light preference we could be expected to provide a good system alternative on our websites.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The cons are obvious:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No Branding.&lt;/li&gt;
&lt;li&gt;Loss of control.&lt;/li&gt;
&lt;li&gt;Boring (but is that partly a lack of imagination?).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Much of the time and depending on the type of site we will need a non-system font, but certainly many web agencies are now sugesting (at least for the body copy) the client look to websafe fonts first.&lt;/p&gt;
&lt;p&gt;Recently saw this thought provoking quote from &lt;a href=&quot;https://en.wikipedia.org/wiki/Massimo_Vignelli&quot;&gt;Massimo Vignelli&lt;/a&gt; from when the NYC SCHOOL OF VISUAL ARTS made him the recipient of its 1991 Masters Series Award:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;In the new computer age, the proliferation of typefaces and type manipulations represents a new level of visual pollution threatening our culture. Out of thousands of typefaces, all we need are a few basic ones, and trash the rest.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The fonts he talked about are not websafe, but this was in 1991 before most new fonts for device were created.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>What is intrinsic web design?</title>
    <link href="https://noscript.show/4/" />
    <updated>2024-02-02T00:00:00Z</updated>
    <id>https://noscript.show/4/</id>
    <content type="html">&lt;h2 id=&quot;show-notes&quot;&gt;Show Notes&lt;/h2&gt;
&lt;p&gt;Intrinsic web design was a term coined by Jen Simmons in her 2018 talk called &lt;a href=&quot;https://talks.jensimmons.com/GdnO62&quot;&gt;&amp;quot;Everything you know about web design just changed&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We add our perspective to Jen&#39;s history of web layouts and ask what does that mean for us? And do we need to approach projects and client&#39;s differently?&lt;/p&gt;
&lt;h3 id=&quot;what-is-intrinsic-web-design&quot;&gt;What is Intrinsic Web design?&lt;/h3&gt;
&lt;p&gt;Perhaps this quote best explains how it is different to responsive design:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;We&#39;re programming a flexibility model, not telling elements exactly where to sit and how to look.&amp;quot;&lt;br&gt;
- Jeffrey Zeldman (paraphrasing Jen Simmons)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Key points:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS Grid and letting the browser calculate size and alignment.&lt;/li&gt;
&lt;li&gt;New creative possibility without disregarding web standards (the web&#39;s universal approach to communication).&lt;/li&gt;
&lt;li&gt;A more abstract approach to visual design.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;the-history-of-web-layouts&quot;&gt;The history of web layouts&lt;/h3&gt;
&lt;p&gt;An overlapping history that loosely goes from flow only to HTML tables to Flash to fluid to fixed to responsive.&lt;/p&gt;
&lt;img src=&quot;https://noscript.show/img/intrinsic-design-history.avif&quot; loading=&quot;lazy&quot; width=&quot;1600&quot; height=&quot;900&quot; alt=&quot;A chart of Jen Simmon&#39;s history of web layouts&quot;&gt;
&lt;h3 id=&quot;what-does-this-mean-for-us&quot;&gt;What does this mean for us?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Re-educating ourselves (possibly without making a podcast)?&lt;/li&gt;
&lt;li&gt;Setting better expectations of the web for clients (ie. HTML/communication first)?&lt;/li&gt;
&lt;li&gt;A change in how we organise web projects (reversing the picture to web approach)?&lt;/li&gt;
&lt;li&gt;More creatively with space (thinking outside the fixed box)?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;jens-css-layout-resources&quot;&gt;Jen&#39;s CSS layout resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://labs.jensimmons.com/&quot;&gt;Jen Simmon&#39;s web layout experiments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/layoutland&quot;&gt;Layout Land on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
  &lt;details&gt;
&lt;summary&gt;Transcript&lt;/summary&gt;
&lt;p&gt;[00:00:05] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Hello there. Welcome to this episode four of the No Script web show, which is all about modern front end web design. We&#39;ll be looking at what we can build today with minimal dependencies and skills.&lt;/p&gt;
&lt;p&gt;Today we&#39;re talking about intrinsic web design, a term coined by Jen Simmons in her 2018 talk, which was called Everything You Know about web design Just Changed. She. iss, a graphic designer, educator and speaker, a member of the CSS working group who worked on CSS grid layouts. She worked as a developer advocate at Mozilla and later at Apple.&lt;/p&gt;
&lt;p&gt;we&#39;ll be adding our perspective to Jen&#39;s talks on the history of web layouts and asking what it means for us. I cannot have these conversations by myself. And as always, I&#39;m joined by David Waumsley. How are you doing, David?&lt;/p&gt;
&lt;p&gt;[00:00:53] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I&#39;m very well, thank you. Yeah, that was a good introduction.&lt;/p&gt;
&lt;p&gt;[00:00:58] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. Thank you. I&#39;m glad that you wrote it for me.&lt;/p&gt;
&lt;p&gt;[00:00:59] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. Oh, so shall we start? We&#39;ve got some headers, haven&#39;t we? Yeah, we&#39;ve got that. and was starting with, what the heck is intrinsic design? Which, I do remember on the first episode we was doing for this show where I&#39;ve mentioned that and then chuck it at you and said, do you have a definition of what is? And the answer&lt;/p&gt;
&lt;p&gt;[00:01:18] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: was, I really didn&#39;t. and to be honest with you, I&#39;m still a little bit. Hazy on it because there isn&#39;t a, an exact dictionary, different definition&lt;/p&gt;
&lt;p&gt;[00:01:27] &lt;strong&gt;David Waumsley&lt;/strong&gt;: is there. no, of course not. And I think, I get from the talk itself that Jen did is that she&#39;s just wanting to signify whether you use it or not. I think she even says, just wanted to say that. I think with the technology we have and the approaches we have to web designing that it warrants. Another name other than just a bit more responsive. Yeah, responsive plus. Yeah. Yeah. yeah, I thought there&#39;s a good, we&#39;ve got it actually up on the screen there.&lt;/p&gt;
&lt;p&gt;There&#39;s a quite a good quote, I think. it&#39;s taken from a tweet from Jeffrey Zeldman, who&#39;s paraphrasing Jen Simmons, and I quite like that as my way of understanding, Intrinsic design as being something different to responsive design.&lt;/p&gt;
&lt;p&gt;[00:02:16] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: I&#39;ll read it out for the people who are listening to this.&lt;/p&gt;
&lt;p&gt;So Jeffrey, in his tweet said, we&#39;re programming a flexibility model, not telling elements exactly where to sit and how to look. So it&#39;s very much open-ended.&lt;/p&gt;
&lt;p&gt;[00:02:30] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, and I think that probably with the technology, with the way that we have with CSS grid particularly, and Flexbox before that, but in a way, when we got Flexbox, we tended to not use it fixed flexibility.&lt;/p&gt;
&lt;p&gt;We tended to set the, kind of fixed wits on it, but now all of these kind of ways that the browser can now calculate the size of items and align them for us according to. The user that they find do the calculations first. I think that&#39;s what she&#39;s getting over, I think with this. And that is slightly different from the responsive designs.&lt;/p&gt;
&lt;p&gt;&#39;cause when we got that, we just thought it was a reaction with the media queries, I think to, having the iPhone. So we thought, okay, we need another version of the phone with the iPhone. We&#39;ll use the media queries and then we&#39;ll just design something and we will fix where things. Exactly are going to sit and look, where they&#39;re going to sit and look.&lt;/p&gt;
&lt;p&gt;Yeah. Where I think now we&#39;re moving away from that. We&#39;re now thinking, you know what? We&#39;ll never know. There&#39;s so many different devices out there. Let&#39;s stop trying to do, let&#39;s let the content decide that the size that it needs. And I think that&#39;s probably the big thing about it. I think&lt;/p&gt;
&lt;p&gt;[00:03:41] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: that&#39;s quite a hard thing for us to get into our heads as well, because we really have spent a long time, decades on the internet trying to get things to look exactly.&lt;/p&gt;
&lt;p&gt;As we wish them to look and to know exactly where every pixel will be with any given device. Yeah, so if you were to open up a tablet and I, you could tell me the dimensions of it, I would be able to predict exactly where this. This div or card or content piece would be, but this is a bit more, this is a bit different, isn&#39;t it?&lt;/p&gt;
&lt;p&gt;you just generally say, okay, these things will probably be about there, but I&#39;m not entirely sure based upon that device because everything is entirely, and I&#39;m gonna use your word squishy. Yes. Squishy. everything can move in its own way and it will be very hard because the maths is being carried out.&lt;/p&gt;
&lt;p&gt;On the fly as opposed to it being based upon viewport. So at some point it, it does exactly this. This is a much more fluid, it&#39;s doing whatever it says in a kind of curved way. if it&#39;s, if, we move things, if we make the viewport smaller, all of these. Pieces are going to move over, but we&#39;re not entirely sure where they&#39;re gonna end up. So yeah. Yeah, that&#39;s&lt;/p&gt;
&lt;p&gt;[00:04:50] &lt;strong&gt;David Waumsley&lt;/strong&gt;: a new challenge and I think it&#39;s very different from the way that we&#39;ve looked when we&#39;ve borrowed from print and we&#39;ve looked at, generally we thought to templates. We make our boxes and then we put the content into those boxes and we think, oh, okay, that box won&#39;t sit, there&#39;ll have to go underneath on the mobile.&lt;/p&gt;
&lt;p&gt;And we do that. But we still think of it as the same fix W box where now this suddenly this idea that. you&#39;re gonna say, you want this content to have enough room, but let the browser decide where it is and you&#39;ll style this content. And I think it&#39;s just a complete mind flip. And I do think there&#39;s something that I thought was quite interesting because it, it&#39;s eight years on.&lt;/p&gt;
&lt;p&gt;When Jen did this talk in 2018 from when the List Apart event talk was done, that really brought in the Ethon Marcotte, brought in the responsive era, but he started that off with a quote, which goes back to 2000. I&#39;ll read that one &#39;cause I&#39;ve got it on my extra notes, which is we should embrace the fact that the web doesn&#39;t have the same constraints as print and designed for this flexibility.&lt;/p&gt;
&lt;p&gt;But first we must accept the ebb and flow of things. And I think in a way, you know what? I think what Jen&#39;s doing with this one is having another crack at if you like, at the same thing that we have to, with better tools now to be able to do that to, get us to think about content and it becomes A HTML first approach, isn&#39;t it?&lt;/p&gt;
&lt;p&gt;The, you are styling to the HTML document and the content that you put in there, rather than the kind of reverse where we style things and then made the HTML stuff fit into the boxes we designed right.&lt;/p&gt;
&lt;p&gt;[00:06:31] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah, I think it&#39;s gonna be really interesting. I think it&#39;s gonna take a whole new generation of people to get into this system.&lt;/p&gt;
&lt;p&gt;I don&#39;t mean a new generation, as in it has to be the younger people. &#39;cause obviously you are absolutely fascinated by this at the moment. But you, are, really gonna have to, not unlearn, but just put a completely different layer over what you have already learned and be willing not to know quite where everything is.&lt;/p&gt;
&lt;p&gt;But I also think it&#39;s quite freeing because you can just put something on the page and be satisfied that it. It&#39;ll do something adjacent to what I want, but I won&#39;t know exactly where it is. And we&#39;ve been very much focused on knowing exactly where everything is based upon the device size. And, you only have to look inside the Chrome browser and things like that.&lt;/p&gt;
&lt;p&gt;And it&#39;s obviously got all the different devices by name. And, maybe that whole process will change because it&#39;ll just be, drag it in from the left, drag it in from the right and just see, if it&#39;s behaving in the way that you&#39;d anticipated, and if not, rewrite the CSS to, to match exactly what your expectations were.&lt;/p&gt;
&lt;p&gt;But none of this is new. Is it 20? What did you say? 2018 was when? Jen did this&lt;/p&gt;
&lt;p&gt;[00:07:33] &lt;strong&gt;David Waumsley&lt;/strong&gt;: talk for that talk. Yes. And then, eight years before for responsive, alluding to this ebb and flow thing that&#39;s been going on for ages, going back to 2000. So it&#39;s always been there. This I idea, I guess it is just that the technology, because we can not so much have to set size into absolute pixels, and we have a layout tool that does it, it does open up loads of.&lt;/p&gt;
&lt;p&gt;I, I think creativity. I think that was her main thing because she&#39;s a designer coming at it. And actually we can talk about that. I guess while we talk about the main part. A good part of her talk was about the history of web layout, so maybe we can just chat a little bit for those people watching the YouTube, we have actually borrowed, One of her slides to just show her kind of loose history of overlapping changes in the web. Going from only having flow only in the beginnings in the nineties to H TM L tables to flash to fluid where we would generally. Our sites with percentages ourselves to fix, where we ended up getting a lot of these frameworks in the nine 60 framework was particularly popular.&lt;/p&gt;
&lt;p&gt;Yeah. Where we spotted everything into those fixed widths, then moving to responsive and then to the unknown, which I think is catching on as intrinsic as an idea that we are perhaps in a new era. So yeah, it&lt;/p&gt;
&lt;p&gt;[00:09:01] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: seems to be the watch word at the moment, doesn&#39;t it? The word intrinsic design seems to be popping up more and more.&lt;/p&gt;
&lt;p&gt;Yeah. which I think is gonna be the, The future for, the foreseeable future. However, the chart that we&#39;re showing on the page, probably does give us some intuition that Intrinsic will be here for a period of time and then will be replaced by something in its turn. But for now, it does feel like, yeah, it&#39;s the next evolution.&lt;/p&gt;
&lt;p&gt;But she also, there was a little quote, and I can&#39;t remember the exact wording, but it was something along the lines of, in, in, evolutionary terms, the internet is that period where the fish. grew legs, the fins became a little bit more rigid and suddenly some of the fish could waddle out onto the land and all land based, Life, which can, which is mobile came from that moment and she was likening where we are to that with the internet. And I think that&#39;s a really good point. You get the impression that everything we&#39;ve got now is the destination. But it isn&#39;t, we&#39;re just literally beginning the journey and maybe, a hundred years from now, the internet will still be around us.&lt;/p&gt;
&lt;p&gt;Probably entirely different in the way it&#39;s consumed and the kind of devices that are available. But probably look back on where we are now, and it&#39;ll just be one of the, one of the cards on Jen&#39;s charts Intrinsic design. Oh, how, oh, how quaint that was.&lt;/p&gt;
&lt;p&gt;[00:10:22] &lt;strong&gt;David Waumsley&lt;/strong&gt;: she was very much on the mission of the web as opposed to just the internet keeping that.&lt;/p&gt;
&lt;p&gt;Because the core foundations of that is that, hasty mail, the ability to be able to share information with each other, given to us for free for that and to keep it on board with that. And I dunno what you got from the her account of the history, but for me it was a little bit about, I.&lt;/p&gt;
&lt;p&gt;Because she frames it within this idea that you&#39;ve got the designers who want things to just look pretty like hers and the kind of standards people who just go, we can&#39;t lose this thing. Where it&#39;s able to communicate with anybody, whatever the device they&#39;ve got, whether they can&#39;t read or not, we need to keep that HDML markup good.&lt;/p&gt;
&lt;p&gt;And there&#39;s always been this battle. Which she thinks is now solved. And the two points I, suppose in the, story was the HTML tables. Oh yeah. That made stuff pretty, but it ruined the web, didn&#39;t it? Yeah. Purpose of it.&lt;/p&gt;
&lt;p&gt;[00:11:14] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: you couldn&#39;t, can&#39;t, can only imagine what the HT ML markup of a tables based layout look like. It would just be a 99% junk that you don&#39;t&lt;/p&gt;
&lt;p&gt;[00:11:23] &lt;strong&gt;David Waumsley&lt;/strong&gt;: these days need. Yeah. Exactly, and it couldn&#39;t work on all devices. It was useless for a good percentage of people who couldn&#39;t read the stuff, but it gave you graphics and pretties, And then of course, from Flash, it almost went entirely off, didn&#39;t it?&lt;/p&gt;
&lt;p&gt;Because then you&#39;ve got proprietary code, which was only effectively embedded in the HTML, that it had no relationship to HTML. So it was unusable by basically anybody who wasn&#39;t signed up to. to go in this whole proprietary route. So yeah, I think after, that point, I do think then we start to get into the more problems of okay, we have agreed that we, need to keep the HTML clean and readable and serve everybody.&lt;/p&gt;
&lt;p&gt;And then the rest of it becomes, how do we make the design work?&lt;/p&gt;
&lt;p&gt;[00:12:08] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: That&#39;s right. Yeah. That&#39;s interesting. if you could stare into the mind of people like, Vince Cert and, oh, who&#39;s the other guy that&#39;s usually, regarded as one of the founders of the internet. Tim Burners Lee, that&#39;s it.&lt;/p&gt;
&lt;p&gt;Oh, yes. Tim Burners Lee back in the day when they came up with the, idea of hyperlinks and all of that. Just no intuition that the internet would be anything other than an academic exercise that would probably be connected. With a handful of computers in major universities, and that was it.&lt;/p&gt;
&lt;p&gt;And so the idea of moving text around was it, but then it just, it exploded. Suddenly people had this intuition that it could be used for a thousand different things. And everybody got really excited. Modems came along. We all got computers of one fashion or another. And like you say, ht ML tables, suddenly people figured out, oh.&lt;/p&gt;
&lt;p&gt;We can make it look a bit like a magazine. Yeah. that was not expected, but it had to be crowbarred in. Then obviously everybody realized, hang on, we&#39;ve lost the content somewhere. The actual content is just surrounded by a load of junk HDML that we don&#39;t need, but we really like it to look pretty.&lt;/p&gt;
&lt;p&gt;So who cares? We&#39;ll make it look pretty, even though people who can&#39;t see it, can&#39;t, consume it. Like you said, flash, which is a little black box, a box that nothing could communicate with. And, now we seem to have gotten full gone. Full circle. Yeah. And we&#39;re now hopefully at a stage where it can look pretty.&lt;/p&gt;
&lt;p&gt;[00:13:35] &lt;strong&gt;David Waumsley&lt;/strong&gt;: But it&#39;s just HTML and it&#39;s web standards. It&#39;s keeping the web as one. I think the worry with things like Flash was the break off. you go to this propriety thing, suddenly this free tool for communication that we can all use, which at its core is HTML, if that&#39;s lost, which it was really with breaking, HTML with tables and, then going off, away from it with flash.&lt;/p&gt;
&lt;p&gt;And she does make a little thing, and we&#39;ll, address that later a little. There&#39;s a. Passing comment is not on there. She&#39;s not talking about component based design and the move to JavaScript in CSS Oh, CSS, sorry. In JavaScript getting right way round. Yeah. But she did allude to the fact that they, that complexity, that, it still, always.&lt;/p&gt;
&lt;p&gt;Has the potential to produce standards, but it does move it and makes it more complicated and switches the normal route of how the web is built with JavaScript being an addition to the HTML and CSS, so we&#39;ll talk about that later because it&#39;s quite interesting how there has been a shift back, I think, for those people who came in with JavaScript. Back to the HTML again? I think so. Even since her talk, I think. But that&#39;s for later episodes. I think&lt;/p&gt;
&lt;p&gt;[00:14:44] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: But it, but yeah, just to reemphasize that point, we really don&#39;t know what the destination of this is, but we know that what we&#39;re doing at the moment is probably more akin to the spirit. It&#39;s got the standards, it&#39;s gonna be hopefully consumable by all sorts of different people who can consume things with their eyes or with their ears or whatever it may be. And, and it, does feel like a. we&#39;re going back to something which got lost by things like tables and flash&lt;/p&gt;
&lt;p&gt;[00:15:11] &lt;strong&gt;David Waumsley&lt;/strong&gt;: and all of that. Yeah, that&#39;s why I think we&#39;re always with this stuff where everybody seems to be looking backwards to see where we got to where we are now. But I think interesting because her table of dates on it, doesn&#39;t reflect my reality in the real world because it, markets are so much different, aren&#39;t they?&lt;/p&gt;
&lt;p&gt;when something may have gone out of fashion to those people who technically know, like her, who work on the spec, reality has it become. It can become even more popular. So things like Bootstrap and jQuery, we&#39;re still growing up to a year ago and still have a dominance in the market.&lt;/p&gt;
&lt;p&gt;And, something like Bootstrap doesn&#39;t ha I think it&#39;s still experimental when it comes to Grid. So and we&#39;re, grid goes back to 2017, so we&#39;re catching up. So you see how things probably are 10, I would say in the real world, things are about 10 years out on her. kind of history if you like.&lt;/p&gt;
&lt;p&gt;[00:16:06] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. She&#39;s very much a thought leader though, isn&#39;t she? Yes. and I think that&#39;s also something which I find remarkable about people like Jen, is just that capacity to stare into a crystal ball and imagine what could be, and then collaborate with other people to build the, spec so that can be, and then communicate with the browser manufacturers so that all of that can be implemented.&lt;/p&gt;
&lt;p&gt;All of this stuff going on in the. Background, but just feeling, feeling into the future as to what it can be. And then you and I and people like us, we get the trickle down from that. Once it&#39;s been built, we then start to explore what we can do with it. So it really does make people like us seem, almost messianic &#39;cause they, can build the future and imagine what that would look like and, have the, passion to push, their agenda and their vision&lt;/p&gt;
&lt;p&gt;[00:17:02] &lt;strong&gt;David Waumsley&lt;/strong&gt;: through. it&#39;s people like yeah, there&#39;s always somebody I think in the working groups on a spec at the time. So we got her and then we got, Rachel Andrew, who we talked about last week, and we&#39;ll be talking sooner about Miriam Suzanne, who effectively is the same sort of role in the working groups when it comes to container queries.&lt;/p&gt;
&lt;p&gt;And thank it&#39;s, I&#39;m so thankful that we&#39;ve got people like that who can relate it, that they built websites and they can relate what&#39;s going on the technical side of the W3C into stuff that we might. Understand how we might put it to use, so&lt;/p&gt;
&lt;p&gt;[00:17:35] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: yeah, it&#39;s interesting. I wonder what the, and again, we, I&#39;m going off piece a little bit here, but I wonder what the incentive for them is.&lt;/p&gt;
&lt;p&gt;So obviously they&#39;ve got the time to do it, so they, they must have some sort of, job. So in Jen&#39;s case, I think you said, worked at Mozilla for a long time and perhaps is at Apple now, although that. I dunno if that&#39;s still the case. So these companies, it&#39;s may, maybe there&#39;s a philanthropic element to it.&lt;/p&gt;
&lt;p&gt;So we&#39;re talking about, standards based and it&#39;ll be able to be viewed by everybody. But maybe also it&#39;s just good commercial sense. if Google&#39;s Chrome browser, which seems to be. Really the browser of choice for almost any part of the world that you care to go into. If it, all of these things are built in, it makes the, it makes whatever they build more likely to succeed as well.&lt;/p&gt;
&lt;p&gt;And if we can convert everything over to the web and rely less on, I don&#39;t know, proprietary software sitting on a desktop computer, if it can all be handled online, that works for them. As well, So that kind of philanthropic versus company, discussion is quite interesting.&lt;/p&gt;
&lt;p&gt;[00:18:44] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, sure. Just, move on a little bit to Yeah, we&#39;ve put a little section here, just some questions for ourselves on what does this mean for us?&lt;/p&gt;
&lt;p&gt;And I put the answers in here as well, which was, we do, I do feel there is a bit of reeducation that&#39;s needed going on. we covered it a little bit last time in the sense that we were referring to. Rachel Andrew says It&#39;s often easier to teach somebody who doesn&#39;t know CSS today because we have to think about it in a very different way because suddenly an outpouring of a load of changes have come to it and, a new mental model.&lt;/p&gt;
&lt;p&gt;The intrinsic mental model, I think means that we have to reeducate ourselves, so not everybody can. Set up a podcast, but, that&#39;s our way of doing it, isn&#39;t it? Yeah. And it,&lt;/p&gt;
&lt;p&gt;[00:19:32] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: but there is a lot to, I don&#39;t know if unlearn is the right word, but there&#39;s a lot, like I said earlier, there&#39;s a lot, there&#39;s another layer, just a slap on top.&lt;/p&gt;
&lt;p&gt;Yeah. But a lot of the layer, which is slapped on top means that the layers beneath, there&#39;s bits of that no longer are worth thinking about anymore. And it&#39;s figuring out which bits of the new knowledge. Which bits replace the bits that I used to know? and I think that&#39;s gonna be the journey that I&#39;m on.&lt;/p&gt;
&lt;p&gt;&#39;cause I&#39;m very much at the beginning of all this, and I&#39;ve got a lot of reeducating to do. And for me it&#39;s quite hard because I&#39;m constantly thinking, yeah, but I could do that with, something that, and then you figure out, oh no, but then it wouldn&#39;t enable this possibility. Wait a minute. So there is quite a lot of reeducation, and I think, I&#39;m sure you&#39;re right.&lt;/p&gt;
&lt;p&gt;If you&#39;re a, if you&#39;re a, a. Person just going into college or just beginning on your web development journey? I think you&#39;ve pro, you&#39;ve probably got the, a shot at doing far more learning than I will do because mine is gonna be bundled up with forgetting what&lt;/p&gt;
&lt;p&gt;[00:20:32] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I&#39;ve already learned. Yes. I, we put down, I put down setting better expectations for the web for clients and, I mean is, I think what this is trying to do is get us a little bit back to that. We are putting out content in HTML and the styling goes over the top of that, where I think for most. Clients their expectation is, and their experiences are pretty sight, which they see in their one particular view and say that I like something like that.&lt;/p&gt;
&lt;p&gt;Yeah. &#39;cause that&#39;s their experience. they probably won&#39;t understand unless said otherwise, that, the importance of GOOD HTML in terms of helping them to get visitors because it&#39;s, search friendly and, being able to reach. Many more people and designing over the top of that. So I often think there&#39;s a lot of trying to not only cope with the fact that we&#39;re almost flipping the way you design upside down.&lt;/p&gt;
&lt;p&gt;Also, I think, if you have to do it for somebody else, they usually come in with an expectation of show me a website and I&#39;ll tell you if that&#39;s what I like the look of, But there&#39;s so much more to it than that, isn&#39;t there? Yeah.&lt;/p&gt;
&lt;p&gt;[00:21:50] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. How much of this do you think you are gonna be, pushing forwards into your client&#39;s lap?&lt;/p&gt;
&lt;p&gt;Or, are you gonna be talking about any of this? Will the word intrinsic design ever exit your mouth when you&#39;re talking to clients? Or is it more about, okay, this is, look, I&#39;ll show you roughly what it&#39;ll look like when we, use a different variety of browsers. Are you even gonna get into that?&lt;/p&gt;
&lt;p&gt;Are you just gonna, I think the word responsive design has landed so well out in the real world that I think even non-technical people understand that. There&#39;s some something going on when you look at it on a mobile that&#39;s different to a desktop, but do you feel that you need to educate your clients with the technicalities of this?&lt;/p&gt;
&lt;p&gt;[00:22:30] &lt;strong&gt;David Waumsley&lt;/strong&gt;: as I&#39;ve learned, I think I&#39;ve started talking about it differently. I do talk about it as in terms of the content that we need, because at the end of the day, it doesn&#39;t matter how it&#39;s styled to a lot of people. if that content isn&#39;t reaching everybody who might want it and that search engines, et cetera, can&#39;t see it.&lt;/p&gt;
&lt;p&gt;So we always start with the content and then we say how we&#39;re going to beautify that content from there. Yeah. Yeah. And I think that&#39;s it. And because of that. That approach to it, it makes a lot more sense to them. So usually the first conversation is about how the, how the message is gonna go and reach people, so the content&lt;/p&gt;
&lt;p&gt;[00:23:01] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: comes first.The design is a definite&lt;/p&gt;
&lt;p&gt;[00:23:04] &lt;strong&gt;David Waumsley&lt;/strong&gt;: second, right? So I think it&#39;s easy to explain to them in that way, if it had no design, it would still do quite well, as many. Badly designed sites, if they&#39;ve got the fundamentals underneath, can do quite well, it&#39;s interesting&lt;/p&gt;
&lt;p&gt;[00:23:18] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: though, &#39;cause that&#39;s a profound shift for a lot of people, isn&#39;t it?&lt;/p&gt;
&lt;p&gt;Because really the, building of websites, it very much felt like the, design was, I. Central to what the client wanted. it&#39;s okay, how&#39;s it gonna look? And you fill it up with LO and then, you pull the LO out and hope for the best. Whereas this is exactly the opposite.&lt;/p&gt;
&lt;p&gt;Let&#39;s just start with the content. Let&#39;s get the message get the words right, get all the assets right, and then.&lt;/p&gt;
&lt;p&gt;[00:23:49] &lt;strong&gt;David Waumsley&lt;/strong&gt;: you do. You know what I mean? That&#39;s it though. So the next point in probably changing how we organize web projects, right? And she alludes to that in the talk, doesn&#39;t she? With saying the typical thing is that someone has an idea, then they get a rough draft of that idea, better draft of that idea, and then it goes to the person to turn that into the code.&lt;/p&gt;
&lt;p&gt;And that really is the way it&#39;s always been done. But in a way, it&#39;s the wrong way round because. there is something to know about how that&#39;s co the intrinsic bit. I wouldn&#39;t use it with clients, but I think the intrinsic is saying that it&#39;s still intrinsic to that web standards. HTML means of communication.&lt;/p&gt;
&lt;p&gt;The design is a part of the content and that&#39;s, in a way, while we&#39;re. While she&#39;s doing all her clever experiments, which she does, which we put links to on the show notes there to her layout, land where she does experiments. She&#39;s coming in from the, I want it pretty and the designer, but knows from a. Standards perspective, she needs to have this good, clear, marked up communication in the HTML, but I think what she&#39;s seen is, oh, I can have lots more fun with this. And I think that&#39;s the way I&#39;m trying to sell it now on to clients without using intrinsic &#39;cause It doesn&#39;t mean it&#39;s just, it sounds like Tech Talk, doesn&#39;t it?&lt;/p&gt;
&lt;p&gt;[00:25:04] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: interesting because it feels like the workflow. Of a project is amended. rather than the design coming first or at the same time as the content, that the content comes first, the design then comes second. But it doesn&#39;t, marginalize the importance of the design.&lt;/p&gt;
&lt;p&gt;It just, yeah. and it&#39;s not like designers are gonna go out of work. Exactly. In fact, they&#39;re gonna have a lot more, to think about. But it just puts it in a different. Position in the Yes, in the project workflow. it, it comes after the content, whereas I feel very often it, it was the other way around.&lt;/p&gt;
&lt;p&gt;[00:25:37] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. Yes, and exactly because you can&#39;t control the devices that people are coming in on their experience. And of course, something that Jen talks about in lots of other things. I&#39;m not sure in that talk. But otherwise, she&#39;s very keen to point out that, whatever design you do, if somebody sticks it in reader mode or they decide they have high contrast on their computer or they&#39;re on the screen readers, all that, all of what you&#39;ve designed isn&#39;t there.&lt;/p&gt;
&lt;p&gt;So the essentials, we all must agree is that everybody can I. Get this content and that&#39;s a well marked top HTML. But I think what she&#39;s making as a designer is like, wow, there&#39;s some of these clever stuff. And actually it&#39;s a harder task for the designer now because you can&#39;t fix &#39;em into these boxes any longer.&lt;/p&gt;
&lt;p&gt;There&#39;s come in different devices, so now you have to be really inventive and imagine lots of different flows for your content. So people will lots. Lots of different experiences, all of which will be great from a designer. So I think the designer&#39;s more important now, but I just think the traditional approach of the designer where they would just create something that looked pretty with just their colors, and that&#39;s your box where you gotta stick that text in there and this is where you&#39;re gonna stick this widget and. That approach to it doesn&#39;t work. The, I don&#39;t think it&#39;ll&lt;/p&gt;
&lt;p&gt;[00:26:48] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: be, quite interesting because in the past you had so many conversations with designers where you would get the design and then you would figure out that the content wouldn&#39;t fit in the design. Now, it&#39;s entirely possible that conversation will go in reverse and you&#39;ll give them the content and they&#39;ll, the disciples will say. There&#39;s too much content. we can&#39;t get the content into anything like a reasonable design. So there&#39;ll be interesting trailer, your menu is, it&#39;s lovely, but there&#39;s 97 items in it. we can&#39;t deal with that. You&#39;ve put everything front and center, so there&#39;s just, we have to figure out new ways to have these conversations and new workflows to make it, work. I. I think&lt;/p&gt;
&lt;p&gt;[00:27:25] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Nathan, you put on your tab just for those on YouTube. I think I did you put that her labs where she&#39;s got lots of little experiments. these are a bit out date &#39;cause there&#39;s so much more you can do. I mean if you make that responsive, I think you should. Yeah. So for those&lt;/p&gt;
&lt;p&gt;[00:27:40] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: that are listening to this, we&#39;re showing, and I&#39;ll give you the, I&#39;ll give you the RL it&#39;s labs dot Jen Simmons.com.&lt;/p&gt;
&lt;p&gt;I&#39;m sure David will put that into the show notes. But what we&#39;re staring at is a. Is a, like a desktop ish layout, but everything is on its side, and as I reduce it. You can see that essentially lots of the different pieces. It now looks like it&#39;s in two halves where the top half is moving up and the bottom half appears to be moving down a little bit.&lt;/p&gt;
&lt;p&gt;Then suddenly everything that was at 45 degrees at some point went to normal orientation. Yeah. And as we can see, it just so smart. So it dramatically changes the way it looks. Yeah, based upon the design and, if you&#39;re watching the video, you&#39;ll be able to get an, impression of that.&lt;/p&gt;
&lt;p&gt;But yeah, go to jen labs dot jen simmons.com and and just play. With the, the widths and the view port and you&#39;ll Oh, it&#39;s so&lt;/p&gt;
&lt;p&gt;[00:28:40] &lt;strong&gt;David Waumsley&lt;/strong&gt;: clever. I love it. Yeah. And it changes, doesn&#39;t it? I think, that idea that you might go, oh, I&#39;ve had an idea. And every, but &#39;cause what we&#39;ve always tried to do with all our designs is when we&#39;ve said, okay, the visual design is what we want and we want everyone to experience it.&lt;/p&gt;
&lt;p&gt;We&#39;ve been trying to. Bang, these kind of square pegs into round holes with it, trying to make the code underneath work. but that&#39;s it. That&#39;s, it is that kind of thing, which I think is just clever design I can&#39;t do because okay, there isn&#39;t one experience for people, but you can&#39;t force an experience that&#39;s gonna be brilliant.&lt;/p&gt;
&lt;p&gt;But what you can do now is you can. Create a range of experiences,&lt;/p&gt;
&lt;p&gt;[00:29:20] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: And, it looked every si even if you do a tiny modification to the width of the window that you&#39;re looking at it in. I&#39;m just gonna move it by what I consider to be a centimeter on my screen. I know that unit is of no use to anybody, but you get the idea.&lt;/p&gt;
&lt;p&gt;Some, it&#39;s changed, like you can&#39;t predict where it&#39;s gonna go. you can roughly predict where it&#39;s gonna go, but, and there we go, little tiny change again and another one, and another, and then there&#39;s suddenly a dramatic change. Yeah. And then another dramatic change about now. Then we go back out.&lt;/p&gt;
&lt;p&gt;Little change. It&#39;s just, you&#39;re right. I wouldn&#39;t have the faintest idea what she&#39;s done here, but&lt;/p&gt;
&lt;p&gt;[00:29:58] &lt;strong&gt;David Waumsley&lt;/strong&gt;: it&#39;s and she could put all the text on an angle because the space is there big, but it wouldn&#39;t work small. So I think it&#39;s a great time for design. Sometimes when you talk about the web standards, which I&#39;m very keen on getting the HTML right.&lt;/p&gt;
&lt;p&gt;Sounds like you are. Poo-pooing it. And I think that&#39;s what Jen&#39;s talk does for us, comes in with a designer&#39;s perspective where you go, yeah, sure it needs to be good. Everybody needs to be able to access the content you make for the web. That&#39;s just a given, isn&#39;t it? But then you can still be beautiful with stuff.&lt;/p&gt;
&lt;p&gt;You just have to think a little bit differently. I think you have to work from the content rather than the design, and then stick the content in it. You make the, content, flexible and interesting. So it. Only needs, it doesn&#39;t have more space than it needs, but has space needs. Yeah. I&#39;m with&lt;/p&gt;
&lt;p&gt;[00:30:45] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: you. And I think that, I think it&#39;s gonna be interesting for people who, create these websites, especially if their role is, the content, let&#39;s say, is encapsulating that to hand it off to a designer to suggest what that design could look like. Yeah. I think there&#39;s a whole new set of skills that we&#39;re gonna have to get new conversations to get into new ways of figuring out new workflows, but ultimately I think we&#39;ll manage it.&lt;/p&gt;
&lt;p&gt;[00:31:09] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I think it translates To I, yeah. I think any client or the type of client I work with, when it&#39;s just the solo owner, it&#39;s easy to get over the fact you wanna get your message out there. The easiest way is to make sure you get good H ml that Google can read full of that stuff, and then we can have some real adventures about how this content&#39;s got the design, which gets us back to the, let&#39;s start with the content, Yeah. yeah, it&#39;s a great system. I think so, yeah. Different from what we&#39;ve done, I think in the past. We&lt;/p&gt;
&lt;p&gt;[00:31:38] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: should probably plug, Jen Simmons YouTube channel as well. She&#39;s got a yes, a channel called Layout Land. The, I imagine you&#39;d be able to Google that, but if you can&#39;t, the, it will be in the show notes and it&#39;s, it&#39;s video after video of her, showing all sorts of interesting, things that you can do.&lt;/p&gt;
&lt;p&gt;I haven&#39;t consumed even a. 10th of what she&#39;s done. But it&#39;s all really fascinating and breaks, breaks apart one little problem at a time&lt;/p&gt;
&lt;p&gt;[00:32:04] &lt;strong&gt;David Waumsley&lt;/strong&gt;: and it&#39;s, it&#39;s lovely. Yeah. Yeah. the only problem with it is that some of the stuff has moved on. You might do some of that stuff differently, but it&#39;s still, I think it&#39;s a useful, she&#39;s. She&#39;s good at talking as well, so Yeah.&lt;/p&gt;
&lt;p&gt;[00:32:16] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah, she is. She&#39;s very good. How do you feel? Have we, managed to get through that episode or? I think we have. Yeah,&lt;/p&gt;
&lt;p&gt;[00:32:21] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I think we have. Shall I just lead on quickly? &#39;cause it does lead on from her. Talk a bit into the next one. We&#39;ll, we&#39;ve got two episodes which we&#39;ll do next, which we&#39;ll really be talking about component based design, which you didn&#39;t talk about.&lt;/p&gt;
&lt;p&gt;And at the time of our talk in 2018, we didn&#39;t have container queries and. I think that&#39;s component based design can come outta that. But we&#39;ve also got something called web component. So I think next time I think we&#39;ll talk about component based design, because when you&#39;re looking at Jen Simmers, this is really somebody who&#39;s making a document.&lt;/p&gt;
&lt;p&gt;Look beautiful. Basically, it&#39;s how we started with the web and that&#39;s all she refers to. But there is this sort of other movement isn&#39;t there where we, actually the web is just these little blocks of UI that we build up. Yeah. we&#39;ll I think next time we&#39;ll be, that&#39;s just a little lead in it comes out of a talk.&#39;cause in some way she makes reference to it, but doesn&#39;t cover&lt;/p&gt;
&lt;p&gt;[00:33:15] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: it. So component based design, container queries, all that kind of stuff. Coming up in episode five, we&#39;re taking it. Each episode is just recorded. When it&#39;s recorded. we&#39;ll get them out as we get them out. So it may be that we manage one every week, or maybe it&#39;ll fall into a, shorter cadence or longer cadence, who knows?&lt;/p&gt;
&lt;p&gt;But for now, I guess we&#39;ve wrapped up number four. yeah. And we&#39;ll see you. On the no script show next time. For the, for those of you that are listening, the website is being, updated with the bits and pieces that we&#39;ve talked about, and you can find it at no script show and then you just do forward slash and the number of the episode.&lt;/p&gt;
&lt;p&gt;So there&#39;ll be no script show forward slash four. And yeah, there we go. I will see&lt;/p&gt;
&lt;p&gt;[00:34:02] &lt;strong&gt;David Waumsley&lt;/strong&gt;: you next time, David. Yeah. Lovely. Bye-Bye. Bye bye.&lt;/p&gt;
 &lt;/details&gt; </content>
  </entry>
  <entry>
    <title>Easy responsive or fluid typography</title>
    <link href="https://noscript.show/learn/2/" />
    <updated>2024-01-30T00:00:00Z</updated>
    <id>https://noscript.show/learn/2/</id>
    <content type="html">&lt;h2 id=&quot;transcript&quot;&gt;TRANSCRIPT&lt;/h2&gt;
&lt;h3 id=&quot;the-reason-for-this-video&quot;&gt;The reason for this video&lt;/h3&gt;
&lt;p&gt;This is an extra to the main no script podcast.&lt;/p&gt;
&lt;p&gt;As part of the podcast we are live designing and developing the show&#39;s website. This is so as the show progresses we can highlight the huge number of significant advances that have been coming to the web platform recently (mostly HTML and CSS).&lt;/p&gt;
&lt;p&gt;Ahead of our episode on typography (where there will be too much to cover) I thought it might be helpful to do a quick walkthrough of the responsive typography that&#39;s already been set up.&lt;/p&gt;
&lt;p&gt;As with much of the podcast we are presently learning how to move to the more flexible intrinsic web design approach.&lt;/p&gt;
&lt;p&gt;I hated having to set font sizes for different devices with media queries. It got ever more time consuming and ineffective as the range of devices available grew.&lt;/p&gt;
&lt;p&gt;Adding more breakpoints as most page builders did only made site&#39;s harder to change, bloated and still unable to serve users of the future.&lt;/p&gt;
&lt;p&gt;Fortunately, CSS has given us a function called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/clamp&quot;&gt;clamp&lt;/a&gt;. With this, we can get the browser to do all the hard work for us. We just set our minimum and maximum size parameter and it will do the calculation to see the right size is served to the user.&lt;/p&gt;
&lt;p&gt;Even better, we don&#39;t really have to write it or understand it. There are free copy and paste tools out that create custom property we can use in our designs&lt;/p&gt;
&lt;h3 id=&quot;utopia-fluid-type-scale-calculator&quot;&gt;Utopia - Fluid Type Scale Calculator&lt;/h3&gt;
&lt;p&gt;The one I used here is &lt;a href=&quot;https://utopia.fyi/&quot;&gt;Utopia.fyi.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is made by James Gilyead (a designer specialising in typography) &amp;amp; Trys Mudford (a really smart frontend developer) and is supported by &lt;a href=&quot;https://clearleft.com/&quot;&gt;Clearleft&lt;/a&gt; a UK agency co-founded by &lt;a href=&quot;https://adactio.com/&quot;&gt;Jeremy Keith&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have tried other tools, but I like Utopia best because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We can also use it to set responsive spacing&lt;/li&gt;
&lt;li&gt;It is thoughtfully developed. Recently I saw vw was updated to vi (to measure the inline size of the viewport, not just the viewport).&lt;/li&gt;
&lt;li&gt;It also includes a non-viewport unit in the middle “preferred” value to see if things do not get messed up if the users zoomed in on their viewport .&lt;/li&gt;
&lt;li&gt;They have already added sizing for container queries which we will cover later on the show. Also A WordPress theme.json generator is in the pipeline!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also mention in the video is &lt;a href=&quot;https://typescale.com/&quot;&gt;Typescale.com&lt;/a&gt; and the new unit for the text-wrap property:- balance and pretty which help balance text and reduces widowed words.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CSS layouts made simple</title>
    <link href="https://noscript.show/learn/1/" />
    <updated>2024-01-24T00:00:00Z</updated>
    <id>https://noscript.show/learn/1/</id>
    <content type="html">&lt;h2 id=&quot;transcript&quot;&gt;TRANSCRIPT&lt;/h2&gt;
&lt;h3 id=&quot;the-reason-for-this-video&quot;&gt;The reason for this video&lt;/h3&gt;
&lt;p&gt;This is extra content to the main &lt;a href=&quot;https://noscript.show/&quot;&gt;No Script show&lt;/a&gt; No Script show. In particular, &lt;a href=&quot;https://noscript.show/3&quot;&gt;Episode 3&lt;/a&gt; where Nathan and I were trying to both understand and explain modern CSS layout and how it has been completely refactored.&lt;/p&gt;
&lt;p&gt;We used the main points of a talk by &lt;a href=&quot;https://noti.st/rachelandrew/VqOEAa/refactoring-the-way-we-talk-about-css#scagi0F&quot;&gt;Rachel Andrew&lt;/a&gt;. She was significant in seeing we got the first truly comprehensive layout spec for the web:- CSS Grid. It was actually supported in all the browsers back in 2017 so you can see we are doing a lot of catching up.&lt;/p&gt;
&lt;p&gt;Its not a topic that translates to an audio podcast very well so here I&#39;m showing how it connects with the first stages of building the show&#39;s website.&lt;/p&gt;
&lt;p&gt;The site is, on purpose, simple and under-styled so we can use it to keep showing what we are learning in the show. For example the enforced dark mode should be an option by the time we do our episode on user preferences.&lt;/p&gt;
&lt;h3 id=&quot;why-understanding-css-and-html-is-more-useful-than-ever&quot;&gt;Why understanding CSS and HTML is more useful than ever&lt;/h3&gt;
&lt;p&gt;Overall the show is about learning the fundamentals of designing for the browser at a time when it could not be more different to designing for print.&lt;/p&gt;
&lt;p&gt;Even if you are not authoring the HTML and CSS yourself it&#39;s probably more essential than ever to know the basics of what it is doing. And if you know the basics then HTML and CSS also becomes easy (which they were always designed to be)&lt;/p&gt;
&lt;p&gt;About a year ago I decided I should be able to offer clients who need a CMS a site just using the web platform and I got a bit overwhelmed, but now with a few sites under my belt it seems you don&#39;t need to over complicate this or know it all. I think this is essentially Rachel Andrew&#39;s main point. She says she can teach new people easier than those with a history with CSS and get people able to make their own site in a day.&lt;/p&gt;
&lt;h3 id=&quot;tools&quot;&gt;Tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://visualstudio.microsoft.com/&quot;&gt;Visual Studio Code&lt;/a&gt; A free and open source code editor. I won&#39;t cover installing that as there are plenty of posts and YouTube videos on that.&lt;/li&gt;
&lt;li&gt;There is also this fork that does not send data to Microsoft. &lt;a href=&quot;https://vscodium.com/&quot;&gt;VSCodium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify Hosting&lt;/a&gt; . Free up to 100GB bandwidth per month.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We are working to W3C &lt;a href=&quot;https://www.w3.org/2001/tag/doc/leastPower.html&quot;&gt;rule of least power&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That is starting with HTM and CSS first as declarative language where the browser is already equipped to do what we tell it or declare what we want it to do . We will still need a smidge of JS which needs programming logic. But typically if enough people are doing stuff in JS it gets put into HTML or CSS where it is fast and has much less room for error. Presently we will need JS for a dark mode switcher, but this probably will not be true for much longer.&lt;/p&gt;
&lt;p&gt;Long term as this is a content site we will probably have to manage. Maybe with WordPress (locally) or a static site generator like &lt;a href=&quot;https://astro.build/&quot;&gt;Astro&lt;/a&gt; or &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;11ty&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The nice thing about editors today is they do most of your writing.&lt;/p&gt;
&lt;h3 id=&quot;looking-at-the-code&quot;&gt;Looking at the code&lt;/h3&gt;
&lt;p&gt;The rest of the video looks and the code used and how it is influenced by Rachel Andrew&#39;s talk covered in Episode 3 of the podcast.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flow layout&lt;/li&gt;
&lt;li&gt;Use of CSS Flex, Grid Subgrid&lt;/li&gt;
&lt;li&gt;Logical properties&lt;/li&gt;
&lt;li&gt;(Box) Alignment and sizing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;code-snippets&quot;&gt;Code snippets&lt;/h3&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* Intrinsic resposive grids: */&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;/* min function added to remove the 
   media query shown in the video. */&lt;/span&gt;
 
 &lt;span class=&quot;token selector&quot;&gt;.resources&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-s-l&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token property&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;auto-fit&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;minmax&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;27rem&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1fr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token property&quot;&gt;margin-block-end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-m-l&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;token comment&quot;&gt;/* Used to center the main content: */&lt;/span&gt;

   &lt;span class=&quot;token selector&quot;&gt;.narrow&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;token property&quot;&gt;margin-inline&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;70ch&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 100% - 3rem&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
</feed>