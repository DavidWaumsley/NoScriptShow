<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="pretty-atom-feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
  <title>No Script Show</title>
  <subtitle>Building solid websites simply.</subtitle>
  <link href="https://noscript.show/feed/feed.xml" rel="self" />
  <link href="https://noscript.show/" />
  <updated>2024-01-24T00:00:00Z</updated>
  <id>https://noscript.show/</id>
  <author>
    <name>David Waumsley</name>
  </author>
  <entry>
    <title>CSS layouts made simple</title>
    <link href="https://noscript.show/learn/1/" />
    <updated>2024-01-24T00:00:00Z</updated>
    <id>https://noscript.show/learn/1/</id>
    <content type="html">&lt;p&gt;Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.&lt;/p&gt;
&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;h3 id=&quot;this-is-a-very-long-heading-that-i-want-to-wrap-this-is-a-very-long-heading-that-i-want-to-wrap-this-is-a-very-long-heading-that-i-want-to-wrap-this-is-a-very-long-heading-that-i-want-to-wrap&quot;&gt;This is a very long heading that I want to wrap This is a very long heading that I want to wrap This is a very long heading that I want to wrap This is a very long heading that I want to wrap&lt;/h3&gt;
&lt;p&gt;Bring to the table win-win survival strategies to ensure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;
&lt;span class=&quot;token comment&quot;&gt;/* Intrinsic resposive grids: */&lt;/span&gt;

  &lt;span class=&quot;token selector&quot;&gt;.resources&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-s-l&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;auto-fit&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;minmax&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;27rem&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1fr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;margin-block-end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-m-l&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; 

    &lt;span class=&quot;token comment&quot;&gt;/* I added a min function with the 2nd value to 100%.
    This removed the media query needed in the video. */&lt;/span&gt;
  
    &lt;span class=&quot;token comment&quot;&gt;/* Used to center the main content: */&lt;/span&gt;

    &lt;span class=&quot;token selector&quot;&gt;.narrow&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;margin-inline&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;70ch&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 100% - 3rem&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;   

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;heading-with-a-link&quot;&gt;Heading with a &lt;a href=&quot;https://noscript.show/learn/1/#code&quot;&gt;link&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Bring to the table win-win survival strategies to ensure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// this is a command
function myCommand() {
	let counter = 0;
	counter++;
}

// Test with a line break above this line.
console.log(&#39;Test&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;section-header&quot;&gt;Section Header&lt;/h2&gt;
&lt;p&gt;Capitalize on low hanging fruit to identify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Modern CSS layouts</title>
    <link href="https://noscript.show/3/" />
    <updated>2024-01-22T00:00:00Z</updated>
    <id>https://noscript.show/3/</id>
    <content type="html">&lt;h2 id=&quot;show-notes&quot;&gt;Show Notes&lt;/h2&gt;
&lt;p&gt;Here, we are looking at the principles of modern web layouts and to understand that we are referring a talk by Rachel Andrew from 2019 called &lt;a href=&quot;https://noti.st/rachelandrew/wuKH4y&quot;&gt;&amp;quot;Refactoring the way we talk about CSS&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;She writes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;We need to look again at what it is to learn CSS. We need to leave our old ideas behind. It is only when we do, that we will stop supporting the idea that CSS is the fragile, broken, quirky language that its detractors would like to believe.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Her talk shows how CSS has become a logical system and if we understand the problems it is solving, it is far easier to understand.&lt;/p&gt;
&lt;h3 id=&quot;general-points-on-css-layout&quot;&gt;General Points on CSS layout&lt;/h3&gt;
&lt;p&gt;Modern CSS layout:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Has progressed from a series of hacks to a logically refactored system.&lt;/li&gt;
&lt;li&gt;Is partly reclaiming the universal and responsive web we started with.&lt;/li&gt;
&lt;li&gt;Reminds us that &amp;quot;What we see is &lt;strong&gt;NOT&lt;/strong&gt; what they will get&amp;quot;.&lt;/li&gt;
&lt;li&gt;Gives us resilient superpowers and creative freedom we have not had before.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;specific-points-on-css-layout&quot;&gt;Specific Points on CSS layout&lt;/h3&gt;
&lt;p&gt;Below are the topic covered in Rachel Andrew&#39;s talk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flow_layout/Block_and_inline_layout_in_normal_flow&quot;&gt;Flow layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Changing the value of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt;display&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flow_layout/In_flow_and_out_of_flow&quot;&gt;Out of flow elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode&quot;&gt;Writing modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values&quot;&gt;Logical properties and values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_box_alignment&quot;&gt;(Box) Alignment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values/Sizing&quot;&gt;Sizing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have linked above to the appropriate &lt;a href=&quot;https://developer.mozilla.org/&quot;&gt;MDN web docs&lt;/a&gt; where Rachel is also a key contributor.&lt;/p&gt;
&lt;h3 id=&quot;useful-css-layout-resources&quot;&gt;Useful CSS layout resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gridbyexample.com&quot;&gt;Grid by example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://1linelayouts.glitch.me&quot;&gt;1 line layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://every-layout.dev/&quot;&gt;Every layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/ANg1d8wO3Pc&quot;&gt;Video: building this site 1. Layouts simplified.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt;Transcript&lt;/summary&gt;
&lt;p&gt;[00:00:05] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Hello, and welcome to the third episode of the No Script Show. I&#39;m joined, as always by &lt;strong&gt;David Waumsley&lt;/strong&gt;. Hello, David.&lt;/p&gt;
&lt;p&gt;[00:00:13] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Hello Nathan. How are you?&lt;/p&gt;
&lt;p&gt;[00:00:15] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Good, thank you. The No Script web show is all about modern frontend web design, and we&#39;re gonna be looking at what we can build today with minimal dependencies and skills. Today we&#39;re looking at the principles of modern web layouts and to understand that we are referring to a talk by Rachel Andrews.&lt;/p&gt;
&lt;p&gt;It comes from 2019 and, the talk is called refactoring the way we talk about CSS. You&#39;ll be able to find links to that in the show notes on our website. Rachel Andrews is a prolific technical writer, editor, and speaker, and an invited expert to the W3C&#39;s CSS working group. We&#39;d need a whole episode to do a justice, but she&#39;s probably best known for her tireless work on CSS grid.&lt;/p&gt;
&lt;p&gt;[00:00:59] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Over to you, David. Yeah, you might as well bring up the show notes, that we&#39;ve got. We&#39;re gonna start this one by, in a way, recapping what we&#39;re going to talk about because. When we&#39;re talking about layouts, for me that&#39;s always been the most difficult thing of trying to just do something with the web platform alone.&lt;/p&gt;
&lt;p&gt;CSS, when it comes to layout, has, been difficult. And if you scroll down a little bit, Nathan, for those Sure. On YouTube, we&#39;ve got just some bullet points, about. we just wanna sum up, and that is really that modern CSS layout. What&#39;s changed really is it&#39;s gone from being a series of hacks, to what is now, and it&#39;s really in a talk, a logical refactored system.&lt;/p&gt;
&lt;p&gt;the main thing we&#39;re trying to get over, in this, or what I&#39;ve needed to learn is that. Web design is so much easier if you&#39;re trying to work with just CSS and HML if we understand the actual system and what problems it&#39;s trying to solve. So largely that&#39;s what we&#39;re trying to do.&lt;/p&gt;
&lt;p&gt;There&#39;s a wonderful quote there. I dunno if you want to read that, Nathan, that. Yeah, I can do that.&lt;/p&gt;
&lt;p&gt;[00:02:17] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: this is the quote from the, video of Rachel Andrews and she says, we need to look again at what it is to learn CSS. We need to leave our old ideas behind. It is only when we do that, we will stop supporting the idea that CSS is the fragile, broken, quirky language. That its detractors would like to believe.&lt;/p&gt;
&lt;p&gt;[00:02:36] &lt;strong&gt;David Waumsley&lt;/strong&gt;: That&#39;s quite powerful, isn&#39;t it? It is, and I think that was, at that time, her focus was to try and get us to not see it as these old, wonky tricks that we would do, hack together our sites and, to look at the system, which of course used to be very much a part of when it comes to layout with.&lt;/p&gt;
&lt;p&gt;Her work on, CSS grid. But, and I think that&#39;s also one of the main things I take away from this, and not just her and this talk, but other people saying the same about kind of modern CSS is that it&#39;s, we see it often as kind of meeting the new challenges of today, the fact that we have so many different devices and we need to have our layouts work on it.&lt;/p&gt;
&lt;p&gt;It&#39;s a little bit about reclaiming the universal and responsive web that we always had from the start. And I think this is something which a lot of people are trying to get over in the first place. When it came out until we as people who tried to do graphic design on it, it worked already.&lt;/p&gt;
&lt;p&gt;It would fit and expand. To, whatever screen somebody had and for me as well. Another point I&#39;ve put here maybe sounds slightly contentious, it&#39;s a bit of a reminder. I think when we talk about layout, that a reminder to the fact that what we see is not what they get. &#39;cause we used to, and that&#39;s our background, isn&#39;t it, with you, with builders, is thinking from.&lt;/p&gt;
&lt;p&gt;We see the pixels on our screen, and now with modern responsive design, we have to get away from that and particularly if we&#39;re gonna learn the new stuff, Flexbox and grid as well, to be able to do that. So that was that. it&#39;s, I think it&#39;s some ways when we get into that mentality, it allows us to think, and this is where I feel.&lt;/p&gt;
&lt;p&gt;All the spec is going is to serve the users of the future. If we set something up where we allow the browser with the spec that we use to do the clever calculations on our behalf, then I. It&#39;s it means that we&#39;re future proof and we were future proof anyway if you&#39;re just using CSS, but it&#39;s gonna allow for new devices to come in. So it&#39;s a different mindset. So there&#39;s that.&lt;/p&gt;
&lt;p&gt;[00:04:56] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah, it was interesting watching that video. There were a couple of occasions where she alluded to that I, can&#39;t remember the specifics, but in the video a couple of times she said something about things as yet unimagined. And yes, that&#39;s quite a forward-thinking mentality, I think.&lt;/p&gt;
&lt;p&gt;[00:05:12] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, and it&#39;s the way they&#39;re going. And fa this is a bit of an aside, but there&#39;s a really interesting talk. I, really should put that in the links. It&#39;s from a CSS Day conference back in 2017. Where at Comb William Lee, that&#39;s how you say his name, I&#39;m never quite sure. He is a. Norwegian, I think actually Abert Boss who were the creators of CSS discussing the kind of, the thought process behind what they were doing.&lt;/p&gt;
&lt;p&gt;And one of the, questions at the end were, it was the guy who was talking to him saying that he trains a lot of people&#39;s students to have to learn it. And they get frustrated with css. Can&#39;t, it&#39;s a visual thing. You&#39;re trying to create style on stuff, why don&#39;t we have an editor and what I didn&#39;t.&lt;/p&gt;
&lt;p&gt;What I wasn&#39;t aware of is that kind of stuff had been thought about, but the argument was that you can&#39;t avoid it. You have to, even if you do work visually with something, you still have to understand the underlying code because of simply. What is not what they are going to get. It needs to be entirely responsive.&lt;/p&gt;
&lt;p&gt;So what is just what your device is showing you. And that may not be the same for others and other people in the future. so that&#39;s, so even if you&#39;ve no thoughts about ever doing the coding yourself, an author, in it, it&#39;s good, I think to know the principles underneath.&lt;/p&gt;
&lt;p&gt;[00:06:38] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. The, whole thing about devices, it is really interesting because who knows what kind of devices we&#39;ll have in the future, and we seem to be, certainly lot the mobile phone manufacturers are launching these kind of flip phones where it&#39;s almost like a book and it opens out and the screen interface is actually a square and no, nobody has a square interface until now. So just freeing yourself from the constraints of, okay, it&#39;s gonna be viewed in this particular viewport shape is quite interesting. And the endeavor for a lot of the underlying things that we&#39;ll be talking about over the weeks to come.&lt;/p&gt;
&lt;p&gt;[00:07:16] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, and the, final point that I put there was just that modern CSS layouts gives us this kind of superpower really in terms of, again, Designing for the future, programming for a flexible web. So it can be used anywhere. But also I think, and we&#39;ll get onto that more I think next week, is the creative freedom that it can give us in the sense that now with a lot of the layout systems we&#39;re designing to all four corners of the page.&lt;/p&gt;
&lt;p&gt;We&#39;re not, we were always top left and working down. Yeah. And we&#39;re restricted by that, but now we can design. So if you are. moving your screen horizon, vertically up, you can now have things responding in a different way. So it does really open up a lot of creative freedom that really wasn&#39;t there until now.&lt;/p&gt;
&lt;p&gt;[00:08:04] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: That&#39;s a really interesting observation actually. So yeah, the idea that in the past it&#39;s always been, if you&#39;re a left to reader, it&#39;s from the top left pixel to the bottom right pixel, and that is, that&#39;s the layout that you&#39;re working with. But with these more modern approaches.&lt;/p&gt;
&lt;p&gt;Really anywhere&#39;s up for, you can put anything anywhere. You don&#39;t have to begin in that top left hand corner. It could be any part of the page. yeah. Because of all of the different ways that you can position things and yeah. We&#39;ll be learning about those.&lt;/p&gt;
&lt;p&gt;[00:08:37] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, we&#39;ll get to that. &#39;cause I think that&#39;s, from a designer&#39;s point of view, Jen Simmons, who will.&lt;/p&gt;
&lt;p&gt;We&#39;ll talk about next week from her perspective that she&#39;s been doing a lot of that with her layout land. it&#39;s quite older stuff, but things where they are just using the design for all corners and we&#39;ve never really thought like that because the tools haven&#39;t been there, Yeah.&lt;/p&gt;
&lt;p&gt;We&#39;ll talk about next week from her perspective that she&#39;s been doing a lot of that with her layout land. it&#39;s quite older stuff, but things where they are just using the design for all corners and we&#39;ve never really thought like that because the tools haven&#39;t been there, Yeah Good point. Anyway. Should we move on to Rachel&#39;s talk? you might need to scroll down just to get our main points on this. There you go. And this isn&#39;t enough to put anyone off, isn&#39;t it? Whether the title&#39;s there. So Rachel&#39;s talk is a bit technical, isn&#39;t it?&lt;/p&gt;
&lt;p&gt;[00:09:16] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah, it&#39;s about, it&#39;s probably about 45 minutes long, maybe 46, 7, something like that. And, it is, fairly technical, but it is not going at breakneck pace. There&#39;s plenty of time for breathing and taking it all in, but it&#39;s very, powerful. I, warmed to her as an individual during that video. I, thought she was an excellent, proponent of what she was talking about.&lt;/p&gt;
&lt;p&gt;It was nice, calmly delivered, easy to understand. But there is. There is a lot in there, so you might need to like, I will need to, I think there&#39;s gonna be an awful lot of rewinding and starting again and pausing and taking it all on board and, but it never gets too technical. You&#39;ve only got one or two lines of things to take in at the same time.&lt;/p&gt;
&lt;p&gt;[00:09:58] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, and I, and honestly, I watched it a few years back the first time, probably listening to it, a double speed or something as I tend to do with these things. I thought, yeah, I nailed that, I know what that&#39;s about. And then I came back again to it and thought, honestly, I missed the main points of it.&lt;/p&gt;
&lt;p&gt;So I&#39;m gonna pull out perhaps a little bit more, watching other people talk about the very same thing and also what other things that she&#39;s talked about that&#39;s added to this. So I think the key thing. About trying to understand modern CSS layout is the first point we&#39;ve got there, which is understanding flow layout, which is that default that we have because, and a lot of people are making this point, is that we have a good start straight away with HTML and the browser zone style sheet, the user agent style sheet that goes on that, It gives a little bit of minimal styling into our sites. And what we&#39;ve done in the past is we&#39;ve generally, as designers, seen this as no layout at all. And yeah. That&#39;s interesting. Yeah. Yeah. And and what that&#39;s led to is really that we give up, some of this great. Power that it has because it&#39;s there, it&#39;s designed.&lt;/p&gt;
&lt;p&gt;The original, browser that was created by CERN that we&#39;re gonna use was a graphical interface. They actually dumb that down to something where the texts would, if you like, squeeze to, depending on the device that was viewing it. So it, the, obviously the text would wrap around And the content would get lower and no one would miss seeing any of the content.&lt;/p&gt;
&lt;p&gt;So we have a pretty good start there. And it&#39;s only really when we started adding Wister things and sticking stuff in tables that we broke what was already that responsive. web design, Yeah. But obviously we wanted it to look a bit prettier, but I think that&#39;s a real good point here.&lt;/p&gt;
&lt;p&gt;And I think although she doesn&#39;t make this point, it&#39;s one that I&#39;ve come to the conclusion of after listening to her and many people about, because of the fact that so many of us are on small devices these days. Probably about 60% of the web in total are. Probably only going to see something that is very similar to what we had in the first place, which is one column with everything vertically being scrolled to that, we might want to think about how much design we do for.&lt;/p&gt;
&lt;p&gt;We might start from that mobile thinking first and only get a little bit more complex from normal flow. As we need to.&lt;/p&gt;
&lt;p&gt;[00:12:30] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah, that is, novel, isn&#39;t it? The idea that th 25 plus years ago, whenever that all happened, yeah. Everything was just in this one column layout and now we&#39;ve got back to the point where I&lt;/p&gt;
&lt;p&gt;That most people, I think you said, what did you say? 60% of people are now, viewing the internet on a handheld device, a mobile phone or something equivalent. Where we&#39;re back to that. We&#39;ve just got this one column design that&#39;s curious how, that&#39;s how that we&#39;ve come full circle.&lt;/p&gt;
&lt;p&gt;[00:12:58] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I. Yeah. And in some ways, and you could see it on this site, we&#39;re on a single column anyway on this. and I did add in a new page. Now for people who are just listening to us, this won&#39;t make sense, but I dunno. If you want to, Nathan, just, have a little look at, the, I don&#39;t know, take one or the other.&lt;/p&gt;
&lt;p&gt;[00:13:16] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. If you go to, shall I try this low layout one?&lt;/p&gt;
&lt;p&gt;[00:13:19] &lt;strong&gt;David Waumsley&lt;/strong&gt;: No, if you go to the main menu, that&#39;s Oh, I see what you mean.&lt;/p&gt;
&lt;p&gt;Yeah. Apologies. So you, okay. Yeah, so all we&#39;re doing on this site here is most of this site is just normal flow. basically just centered it with one line of text and the rest of it, and where we needed it to go into multiple columns. then we can use grid just to expand it out. And if you&#39;re watching on YouTube, you can see that Nathan showing that this is, again, effectively one line of code introducing grid.&lt;/p&gt;
&lt;p&gt;the basic site, which of course we will design as we go on, is really keeping to that simplicity of starting with normal flow on the first page, and then pages that need it or sections that need it. And the same one line of code is being used for this and the resources page, if you ever go to it or the little, SVGs of us, Nathan. that&#39;s in two columns.&lt;/p&gt;
&lt;p&gt;[00:14:15] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Where are they? Oh, they&#39;re not there. Let me find those. They&#39;re on the home page, I think. Yeah, there they are.&lt;/p&gt;
&lt;p&gt;[00:14:21] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. Yep. And they&#39;re on that. Anyway, sorry for the people who are listening to this only, it&#39;s not gonna make much sense, but, no, it&#39;s a good, it&#39;s&lt;/p&gt;
&lt;p&gt;[00:14:28] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: a good lesson that this, podcast is, partly audio, but also there is gonna be a always, I think, a slight video component to it.&lt;/p&gt;
&lt;p&gt;And, we&#39;ll be showing things. So you&#39;ll be able to look on the, the website, no script show. Yeah. But also you are gonna be doing bits and pieces on video, which. go alongside some of these episodes and maybe, you&#39;ll even do one, over here. So go and check out that website if you are listening. And it&#39;s confusing you. It is a, is a very visual subject, I&#39;m afraid.&lt;/p&gt;
&lt;p&gt;[00:14:59] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. And I will do a video just showing just how sticking really to the things that are in this about normal flow. I&#39;ve tried to use that as much as possible before we&#39;ve got a design because it&#39;s still functional. And then we&#39;ve needed to add some new pages for the episode.&lt;/p&gt;
&lt;p&gt;So I&#39;ve needed to pull in some grids, some very simple grid. Anyway, let me move on to the, shall I move on to the next point that she&#39;s making about, on our notes, which was just display. So display is the property now that gives us access to other things other than normal flow. And the interesting thing about normal flow is it works as its responsive and everything goes back to it.&lt;/p&gt;
&lt;p&gt;So if we go to our display property, then we&#39;ve got some options. The best known are going to be Flexbox and Grid. They, so Flexbox is generally a sort of one dimension, layout things. It works slightly different to Grid, where it&#39;s takes the look at the item and arranges that in the best order. In fact, it&#39;s there on the menu.&lt;/p&gt;
&lt;p&gt;So there&#39;s flexbox on that. The easiest way to just get, ordered list, which would run vertically to turn into something that runs across the top is to just stick flex on it. And if there was more of those in there. text wrap and that would send it down to, the next row under there. So it&#39;s still working with normal flow and grid, as we&#39;ve shown here, is two dimensions.&lt;/p&gt;
&lt;p&gt;You can work in the grids and the rows. So really our it, our thing is to be using the. Display is the way to now do layouts. That&#39;s where everything is changing.&lt;/p&gt;
&lt;p&gt;[00:16:39] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Can I just interrupt there so that I&#39;m clear because I am the poor relation in this, podcast series. I&#39;m the, sort of sto who is gonna be trying to keep up with, David as he pushes forwards with all of this.&lt;/p&gt;
&lt;p&gt;So forgive me for the interruptions, but just to be clear, the flow layout is the bedrock of. Everything. if, everything is stripped away, flow is gonna work because that&#39;s what the browser is instructed to do. It will all work on this flow layout if you want to go away from flow, so one thing going horizontally under another.&lt;/p&gt;
&lt;p&gt;If you want to move away from that and have things side by side, we&#39;re then into the domain of display. And display has then got, there&#39;s a whole variety of ways that you can do that. But the popular, display mindsets, methodologies are flex and grid, which in many ways overlap. But there&#39;s different ways that they handle it. But have I broadly got that about right.&lt;/p&gt;
&lt;p&gt;[00:17:40] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, absolutely. And that&#39;s usually what we&#39;re moving to. And the interesting thing she makes it in a talk is the fact that we always revert back to normal flow anyway. So when we say put something into a grid of two columns, We do that on say a container element, we&#39;ll say display this container element into grid and say we want it into two.&lt;/p&gt;
&lt;p&gt;But everything that&#39;s within those two element, those, children Yep. Yep. Will then revert back to normal flow. So we&#39;re, it&#39;s always good to think, understand normal flow, how that works, how that&#39;s built. The hub of basically inline and block content, which stacks vertically.&lt;/p&gt;
&lt;p&gt;[00:18:20] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Again, okay, so just to be clear, so if we, if, we don&#39;t do anything, we&#39;re in flow layout, and flow layout is just, everything&#39;s stacked one on top of the other then.&lt;/p&gt;
&lt;p&gt;But if, we then have a, component on the page, let&#39;s say, two side by side boxes for one of a better word, they&#39;re positioned side by side using display and there&#39;s a variety of ways that you could do that. But then if you don&#39;t do anything. What will be inside the display will immediately revert back to flow.&lt;/p&gt;
&lt;p&gt;So if you don&#39;t instruct it to do anything, it will automatically, the browser will say, okay, we&#39;re back to flow layout. So you&#39;ve got flow at the top of the tree, then display takes over, and then if you don&#39;t tell it to carry on, displaying in a certain way, we&#39;re back to flow.&lt;/p&gt;
&lt;p&gt;[00:19:06] &lt;strong&gt;David Waumsley&lt;/strong&gt;: The elements within, so the, you&#39;ll put display grid, say, and then you&#39;ll put that on the container that will be its child and all the elements of that will fall in line with the grid.&lt;/p&gt;
&lt;p&gt;But those within, inside that the grandchildren, if you like, say right ahead of two. And some paragraphs that were in those columns, they will default back to normal flow.&lt;/p&gt;
&lt;p&gt;[00:19:28] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: And I suppose that&#39;s, a sensible default, isn&#39;t it? Because the, typical. Purpose, I suppose at the beginning was just text, more text, gimme some more text and that&#39;s how text ought to behave. It just, it flows down the page. yeah. Okay. I&#39;m keeping up so far I think.&lt;/p&gt;
&lt;p&gt;[00:19:46] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I think there&#39;s maybe one thing that we should talk about here. &#39;cause she does allude to it a little bit and I think she&#39;s. Since the talk that we were looking at, she&#39;s perhaps become a little bit more clear about how if we&#39;ll discern learning layout now she, she makes a big point that they&#39;re not in competition.&lt;/p&gt;
&lt;p&gt;Flex and grid do very similar things, But they are, if you like, not in competition, but just options in the same system, which have their strengths and weaknesses. One, of course is one dimensional, the other one is two dimensional. but I think she, I. As I came in not really knowing either of these, I&#39;ve now come to the conclusion that it might be easier.&lt;/p&gt;
&lt;p&gt;And she mentions this to, to look at grid. Grid in some ways is easier to understand and flex if you try and follow people to learn that, you have to remember that it&#39;s had all of these years, maybe eight years before Grid was fully supported for people to build up ways of using Flexbox to create grids.&lt;/p&gt;
&lt;p&gt;Yeah, so you can end up learning a lot more about Flex than you might ever need because it&#39;s useful in certain circumstances. And I use it, the menu being an obvious one where. It adapts to the elements that you put in. It takes notice what you&#39;ve got the content and works out. yeah. Anyway.&lt;/p&gt;
&lt;p&gt;[00:21:03] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. So are you saying that, the two are not mutually exclusive? You can, you could have a page and liberally sp sprinkle it with flex and grid. It&#39;s not like you need to pick one over the other, but there are certain scenarios where grid would be a, better choice. And there are certain scenarios where.&lt;/p&gt;
&lt;p&gt;Flex would be a better choice. And, in, in this case, a menu, would be good for flex because it&#39;s, it&#39;s one thing next to another until the viewport collapses, and then it, it immediately is one thing beneath another. Yeah. And that works really well because it&#39;s not, so opinionated about where the bits and pieces should be.&lt;/p&gt;
&lt;p&gt;[00:21:40] &lt;strong&gt;David Waumsley&lt;/strong&gt;: It&#39;s, I mean there&#39;s reasons why you might probably start with Grid now. It would, it&#39;d be nice if they came out at the same time and they do have their differences when you know them. And we won&#39;t get into them here. But in some ways, if I was starting, I did start with Grid and it&#39;s been easier doing it that way round because Oh, okay.&lt;/p&gt;
&lt;p&gt;[00:21:55] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: That&#39;s interesting. I was gonna say, is there one which is. Probably more likely to be used more than the other. And I think what you&#39;re saying there is grid probably fits the bill for most things. Okay. All right.&lt;/p&gt;
&lt;p&gt;[00:22:08] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yes, because you can lay out a whole page where you effectively working in one dimension, one row at a time.&lt;/p&gt;
&lt;p&gt;Mostly with flex. Yeah. they&#39;re both still very useful for different things. she&#39;s just doing a talk a little bit about outflow elements, but I&#39;ll just skimm over that quickly. But ju really what she&#39;s saying is this is what we had in the past. So what we would use as, we didn&#39;t have a system for it, we would, for well long time we were using tables, which semantic, that&#39;s Htm l tables, although that wasn&#39;t correct.&lt;/p&gt;
&lt;p&gt;And then we moved to floats and for little time. we were doing a lot with absolute positioning as well. So these two things are outer flow elements, so you end up with a big problem. So floats was the way, only way to do things. You would float things left and right. Yeah, and then you would always have this issue because she shows in her talk about how you don&#39;t necessarily see it. If you see an image being floated to the left of some text, it seems the text wraps around it, but in fact it comes out of its box and the text below it moves up to the top. So it goes out, out of, flow.&lt;/p&gt;
&lt;p&gt;[00:23:17] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. It&#39;s hard to describe, but just seeing it once you&#39;ll get it. Yeah.&lt;/p&gt;
&lt;p&gt;[00:23:21] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, exactly. And and for that we always needed all this kind of clear fix stuff and she talks about a modern day solution for that, but really it&#39;s. Needed for layout as such. So that&#39;s gone absolute positioning. Interestingly enough, it&#39;s again, ham Lee, the creator of, CSS admitted if there was one thing that they shouldn&#39;t have put into, CSS, it would probably be absolute positioning.&lt;/p&gt;
&lt;p&gt;Oh, it&#39;s, yeah. Yeah. I agree. Because it takes everything completely outta flow. Yeah. And then you take the whole responsibility for the browser and all it does for making things fit together. Do you remember, I dunno if we never talked about this before, but Dreamweaver Oh yeah. And they had a thing called layers for a while.&lt;/p&gt;
&lt;p&gt;[00:24:11] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Oh, I don&#39;t remember that, but okay.&lt;/p&gt;
&lt;p&gt;[00:24:14] &lt;strong&gt;David Waumsley&lt;/strong&gt;: It was the most magical thing to me. I was starting then, it was about 2000, I dunno, five or something, and it came out and you could just move anything around as you wanted to.&lt;/p&gt;
&lt;p&gt;[00:24:23] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: And it was just absolutely positioned. Was it? Everything was.&lt;/p&gt;
&lt;p&gt;[00:24:26] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. Absolutely positioned. Same way as Wix was built in the early days, you could just. Move stuff around. It was like a, an early page builder. But even.&lt;/p&gt;
&lt;p&gt;[00:24:34] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: But that, was also back in the day where everybody was looking at things on a desktop. Yeah. And you could rely on the 768 pixels being the minimum.&lt;/p&gt;
&lt;p&gt;And so every website was, that big and probably no bigger. Yeah, I remember. I remember. But I don&#39;t, remember that tool, but I remember, learning, Dreamweaver and then realizing soon after I&#39;d learned it that I didn&#39;t need it anymore.&lt;/p&gt;
&lt;p&gt;[00:24:58] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. Oh no, it was fabulous. That it seemed fabulous.&lt;/p&gt;
&lt;p&gt;And then you realized, of course it wasn&#39;t responsive at all. Then you&#39;ve got stacking issues. Yeah. sorts of stuff. yeah. The next point in talk is really, and this was, I mentioned this before, writing modes. Now, once you&#39;ve got established flow and the fact that everything is a box of some kind and that things are stacking vertically, as blocks, although elements are blocks, writing modes throw.&lt;/p&gt;
&lt;p&gt;Because you could change the direction. These are flowing your blocks and your inline, and the reason for having these kind of routing modes, which most people just use to create special effects where you might have your text, going up and down instead of left and right. Yeah, exactly. But really it&#39;s there and it&#39;s part of, The thing to have internationalization as the whole group in the W three C that work on that and and talk also to the working groups on CSS about how to do that. And this is, to make the worldwide web worldwide and support all those other kind of languages. And also support that when we write our sites, if we need to put them in another language, that we can actually convert that same.&lt;/p&gt;
&lt;p&gt;Layout system easily to the new language mode. And that&#39;s where writing mode&#39;s become, I think, really important. The, fact that we now use, logical properties, so we stop talking about. Top, bottom, left and right and notice that every element now has got, a new property and value with it, which is starting with block start and end.&lt;/p&gt;
&lt;p&gt;Start and end. Yeah. Yeah, And all that. I&#39;ve moved on to the next point with this, and I think that&#39;s really important because if you, if everything is marked up like that, you can retain. The design and have it all tilt another direction for the language. So you can imagine if you, you have to support multi-languages, how difficult that would be if you&#39;ve marked everything up as left, right?&lt;/p&gt;
&lt;p&gt;And then you have to go and create that same design in another language and reverse all of that manually. You, now, you could be able to switch. So I think that&#39;s, and that really, informs how everything is working. Grid and Flexbox. So it&#39;s been out there for a long time. Flexbox, started with talking, everything in terms of the kind of block inline start and end in some ways.&lt;/p&gt;
&lt;p&gt;So it&#39;s been growing and definitely a grid is that. So in order to understand that, I think we have to understand that, that we now have these logical properties, which. and values which go, which are flow relative, they change as your writing, writing mode changes.&lt;/p&gt;
&lt;p&gt;[00:28:00] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: She does. Rachel Andrews does a fabulous job of, explaining that, but obviously, she&#39;s got a video.&lt;/p&gt;
&lt;p&gt;yes. and she does it with a bunch of. Basically boxes with little bits of text in. And you can see how when you flip them over onto their side, through 90 degrees. So instead of it being, one way, it&#39;s a another way. And she, shows how you can, how, it can then be used for layout.&lt;/p&gt;
&lt;p&gt;And it&#39;s hard to imagine at the beginning when writing mode was created. It, I&#39;m imagining that there was no. Real sense that it would be used for granular layout properties, more that it was just, that you were writing from right to left or left to right and for top to bottom or whatever the permutations are.&lt;/p&gt;
&lt;p&gt;But it&#39;s interesting, it gets really complicated and I&#39;m wondering how much I. That is used in the wild in design, because I guess you need, so it can be used purely for design to make things quirky and interesting. But I&#39;m wondering if the actual writing mode is used a, great deal, for its intended purpose, which is, actual writing going in different directions, I guess on multilingual sites. It&#39;s used rather a lot.&lt;/p&gt;
&lt;p&gt;[00:29:14] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, I think it&#39;s gonna be important and of course. When Rachel was doing this talk in 2019, at the end of it, she really had to make some reference to support because if you are to be doing things right now, we have to get rid of. And it&#39;s, quite a hard habit to get rid of, because I&#39;ve been using, margin left and right or Yeah.&lt;/p&gt;
&lt;p&gt;Yeah. For a long time. And, there still is a slight issue &#39;cause I think we&#39;re roughly at the time of recording this, we&#39;re about 98% will support all your kind of logical properties. And values. So that still does leave some people out, right? And she just made reference to the fact that you can at that time introduce it through an app support, feature query where you can, code it up that way, but you would&#39;ve to code it the normal way for old browsers.&lt;/p&gt;
&lt;p&gt;At this point, I&#39;ve decided that those 2%, and you have to remember actually, if you look at floats, which has been 2002, if you actually look at, can I use for that? It&#39;s got, I think something like 97 point something percent. Oh, still? Okay. Okay. Yes. Because you can&#39;t really take that as a good figure for stuff and you&#39;ll find other things like, Flexbox as well, which of course all of the page builders we&#39;ve known and loved are, are working basically on flex.&lt;/p&gt;
&lt;p&gt;They wouldn&#39;t have existed without it, still has a fairly low support. So I&#39;ve really made the decision that. Okay. If my HTML is marked up and it&#39;s a bit of a jumble, they still should be able to read it. We&#39;ll still progressively enhance, and I&#39;ve jumped entirely on board with using multiple properties.&lt;/p&gt;
&lt;p&gt;And I think it&#39;s probably time to do that. Yes. She moves on to, I think I, that&#39;s covered that. We&#39;ll move on to box alignment, which I don&#39;t think. I have any hope of explaining very well, partly because it confuses me still and I have to look up articles and then play around with dev tools, but it really came in and this idea of being able to justify items and content came in with Flex and it used to be called Flex then same as end and start used to be flex end and start now.&lt;/p&gt;
&lt;p&gt;Box alignment now it is its own, module in CSS and so it&#39;s, it gets, its sort of properties being shared amongst flex layout and table layout and grid layout. So there&#39;s something there that we can understand, but it&#39;s, I won&#39;t go into great detail on it, but you, anybody you work with Flex will probably know that you can, when you&#39;ve assigned Flex to.&lt;/p&gt;
&lt;p&gt;Say container and you&#39;ve got some dibs within that, then you could then instruct those how to behave. But you can also instruct them to those contents to align in certain different ways you can put space between them, because all of these are working in the way that we didn&#39;t used to design. So when you thought about it, we would design a page with.&lt;/p&gt;
&lt;p&gt;Dimensions, and we would say, this box is gonna be this side, that size on this side, and on the left hand side is gonna be this size. And then we&#39;re putting our content in there with some space. Now we&#39;re really thinking as Flex does and Grid does, it thinks about it provides. As much space as is needed to contain the content there.&lt;/p&gt;
&lt;p&gt;And the it will flow and then we have to adjust. So we reverse our logic from, it&#39;s the size of the content that matters rather than the box that is in. and often how you can arrange this stuff. So Flex has this way of stretching out too. To fill out the available space that it has, and it&#39;s not set in pixels.&lt;/p&gt;
&lt;p&gt;It&#39;ll just adjust according to what the user comes with. And justify items is great. And align items, solves. One of the biggest problems in web design before we had it, is that you couldn&#39;t align items. Vertically, yes. Yeah. To the center. Couldn&#39;t to the center.&lt;/p&gt;
&lt;p&gt;[00:33:04] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: The center of anything was a nightmare.&lt;/p&gt;
&lt;p&gt;[00:33:06] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. Center of anything. So they solved this with alignment. So you can choose how they align, whether they are, justifying to the left or the right or the middle, or aligning to the top to the bottom. Why I won&#39;t go into this is because there are slightly different ways that a flex and grid work, it&#39;s easier to understand with grid.&lt;/p&gt;
&lt;p&gt;Than it is with flex, because Flex has a cross axis as well as its main axis. And if you are thinking about writing modes and block, you can easily switch it upside down by going to columns. And then if you are thinking writing mode, just switching it upside down again. Okay. So Grid is probably a lot easier to understand when we come to, justifying items, but that&#39;s it really.&lt;/p&gt;
&lt;p&gt;[00:33:48] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: But it&#39;s another choice, right? It&#39;s another quirky way of laying things out. A box alignment. Yes. you can implement this. I dunno. I can&#39;t off the top of my head. Imagine a use case right now, but it&#39;s there. It&#39;s in your arsenal. yeah.&lt;/p&gt;
&lt;p&gt;[00:34:02] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah. it just aligns, you can put space between automatically.&lt;/p&gt;
&lt;p&gt;So let the browser, if you want things to move something right over, one example, particularly with Flex or something, you might have a logo on your left and Oh yeah, that&#39;s a good example. Yeah. On your right and you can make it so you can justify those items. So something align to left and the right and the space in between will be.&lt;/p&gt;
&lt;p&gt;Decided by the browser itself because you set it up with your justify. Yeah. I think one interesting thing on this is, this is because it is a spec now that stands alone and in theory it should come to block layout, normal flow layout. But it hasn&#39;t till now, and it&#39;s behind as we speak now.&lt;/p&gt;
&lt;p&gt;It&#39;s behind a flag in Chrome. So it&#39;s come in, is the fact that if you wanted to center your actual content in a container in the middle. Which I&#39;m actually doing on some of our content there. on the site, you couldn&#39;t do that without throwing Flex in, so you could get that justify the Yeah. The content to the center and have an absolute center.&lt;/p&gt;
&lt;p&gt;that&#39;s now coming to block layout, so you might not need to do that. So it&#39;s something that you have to spend a lot of time with. And if you go to Dev Tools, they&#39;ve, they&#39;re brilliant because they give you a way of just being able to click on things. Yes. Out the settings, so that&#39;s fabulous.&lt;/p&gt;
&lt;p&gt;Okay, I better move on. sizing Rachel. Andrew says, this is probably the thing that would need to be concentrated on the most, or this is the biggest change. So if we get to. Sizing when it comes to flex and grid. Really they are trying to stop overflow, which is the thing that we broke with normal flow when we started to put fixed widths on things.&lt;/p&gt;
&lt;p&gt;Widths on things. Yeah. Yeah. And this is really, if you like, its main job of allowing us to design with grids and different layouts. But not have this overflow. So there is that classic meme everybody must have seen where there is a box with CSS is awesome and some of the awesome is leaking outta the box.&lt;/p&gt;
&lt;p&gt;And that&#39;s probably most people&#39;s experience of working with CSS before flex and grid and understanding it. Yeah. and I think the key point that she&#39;s trying to get on is that everything in those is defaulting to auto. It&#39;s making it squishy naturally. And in order to do that, we have a whole load of new sizes that we&#39;ll use.&lt;/p&gt;
&lt;p&gt;So when it comes to grid, we will have a fraction, which isn&#39;t like a percent, because if you get percentages and there&#39;s some, overlap of padding or margin or something, you have to calculate it to really difficult things. This will just take up the space and. Fr a fraction is the same as what grow would be to flex, and it&#39;s something that will adjust.&lt;/p&gt;
&lt;p&gt;We have minimum, maximum content. we have autofit and auto content and all of these great new ways of basically being able to lay things out without. Specifying an actual pixel value for things.&lt;/p&gt;
&lt;p&gt;[00:37:01] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. Which is nice, isn&#39;t it? Yeah.&lt;/p&gt;
&lt;p&gt;[00:37:04] &lt;strong&gt;David Waumsley&lt;/strong&gt;: And that&#39;s pretty much it, really. So I could just mention when it comes to, if you&#39;re looking at the site as it is at the moment, obviously it&#39;s not much of a design there, but it has got those layouts and it&#39;s simply is making use of what&#39;s in this tor on the whole, it&#39;s just looking.&lt;/p&gt;
&lt;p&gt;Essentially, I&#39;ve just got a couple of lines. So it&#39;s normal flow for most of it, and all we&#39;re doing is putting a, margin in line of auto and then we&#39;re fixing a minimum width to it and a maximum and a bit of padding, and that is. Most of it. And then when needed, we needed the grid to go into boxes, which went from three to two to one, depending on your device with the boxes.&lt;/p&gt;
&lt;p&gt;Then there&#39;s a wonderful trick that you get with, grid now where it&#39;s called ram. They use it and it&#39;s Autofit. MinMax, sorry, it&#39;s repeat. AutoFi and MinMax. So basically you say repeat. You keep growing boxes. As they scroll down, the more boxes you have, they&#39;ll just keep going down and form in. Other rows.&lt;/p&gt;
&lt;p&gt;and then you&#39;ve got Autofit. So the content&#39;s going to automatically fit accordance to the figures you give it. And then what you can do is put a MinMax. So you say it&#39;s maximum of this or minimum of that, and everything beautifully responds with no media queries to deal with. So yes. Nice. That&#39;s, I don&#39;t know. Nathan, do you think I&#39;ve at all covered modern CSS layout?&lt;/p&gt;
&lt;p&gt;[00:38:30] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah, I think you&#39;ve laid it out. I think it would be important to, to probably watch the video and then also, if you go to our website, no script show, and you click on the episodes link in the top and then hit. Number three. I think we might change the URL structure of the website at some point to make it easy.&lt;/p&gt;
&lt;p&gt;But for now, click on episode number three and there&#39;s all these, links here, which will take you to the different documentation for each of the pieces that David talked about. flow, layout, display, all of the other bits that we mentioned. and that&#39;s where to explore it. It&#39;s hard to explain that stuff because it&#39;s so jolly visual.&lt;/p&gt;
&lt;p&gt;But the video certainly does that, and the developer docs will definitely help as well. It&#39;s a hard subject. Like I said, I watched that video from start to finish. I&#39;m gonna need to watch it several more times before I think I&#39;ve got a grip of it, because although the concepts have delivered really well, they&#39;re a little bit.&lt;/p&gt;
&lt;p&gt;With my old brain, they&#39;re a little bit difficult for me to, to take on board on a first pass. But, yeah. That&#39;s great. There&#39;s loads of new stuff in there. Yeah. I&#39;m wondering, if anybody is listening to this, I&#39;d be curious to know. Curious to know which of those bits and pieces A, were you aware of, feel that you&#39;ve got complete command of, or which of these are just things that you&#39;ve never explored because you&#39;ve got a, I don&#39;t know, a tool, like a page builder or something like that, which means that you don&#39;t have to, but it&#39;s gonna make life easier.&lt;/p&gt;
&lt;p&gt;All of these things, once you&#39;ve got your head round them, a lot easier.&lt;/p&gt;
&lt;p&gt;[00:39:57] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I think so, and interestingly for me, because I, as you say, I couldn&#39;t really explain a line. I have to play around with it. And I see some of the experts as well do that. They, mix up when it&#39;s an aligned content or items, what&#39;s the difference?&lt;/p&gt;
&lt;p&gt;They, just try both and I think people like. Rachel, Andrew would be the first person to say that, when she&#39;s doing something, she might throw flexor in and think, nah, that&#39;s a problem. I&#39;ll throw grid at it. They don&#39;t necessarily know exactly where it might be useful. But here&#39;s the interesting thing that might be offputting, and it sounds like you need to learn a lot, but I&#39;ve done three clients sites doing them with almost no knowledge and just a few of these little tricks that I&#39;m pulling out here, and I think you don&#39;t need to get in.&lt;/p&gt;
&lt;p&gt;Depth and I think where things will probably go for the future for those people who still want no coding, I think it&#39;s very likely that we&#39;ll see instead of having the big frameworks like Bootstrap that we have now, where you have to buy into the whole thing there. I think particularly with things like layers come in and and scope a way of being able to separate your CSS out.&lt;/p&gt;
&lt;p&gt;I can see many. Frameworks come in, or little snippets that I see. So there are a lot of good resources out there. They&#39;re growing all the time. There&#39;s something by Rachel Andrews, grid by example.com. Definitely worth checking out. There&#39;s another one called, one Line Layouts, dot glitch me, and a whole bunch of stuff.&lt;/p&gt;
&lt;p&gt;And, something that I like, which is partly commercial to get all of it you need to pay. But there&#39;s, every layout. dev, by Hayden Pickin and Andy Bell. And you can see there&#39;s gonna be an accumulation of these kind of things where you can, as I&#39;ve done on this site with little knowledge, I&#39;ve been able to copy and paste a couple of one-liners, if you like, and achieve.&lt;/p&gt;
&lt;p&gt;And all I needed to know was basically the things I covered here, how things are actually working underneath.&lt;/p&gt;
&lt;p&gt;[00:41:52] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah. Do you have an intuition that in the show notes, you&#39;ll paste the links to the resources that you just mentioned, or are they gonna live on our resources page separated out from each of the, episodes.&lt;/p&gt;
&lt;p&gt;[00:42:04] &lt;strong&gt;David Waumsley&lt;/strong&gt;: I don&#39;t know. We might have to discuss this later. I think I&#39;ll add them there and, yeah, I dunno where to put them. Maybe they should be in the show notes.&lt;/p&gt;
&lt;p&gt;[00:42:12] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Yeah, we&#39;ll see. Okay. okay. I feel like we&#39;ve done our third episode Justice, that&#39;s, that was a hard one to cover because everything was so visual.&lt;/p&gt;
&lt;p&gt;But if you take a look at our website, no script show, you&#39;ll be able to see all of the links and get some intuition as to what David&#39;s trying to build here. anything else you felt you wanted to cover or shall we?&lt;/p&gt;
&lt;p&gt;[00:42:34] &lt;strong&gt;David Waumsley&lt;/strong&gt;: No, I think next time, we&#39;ll it&#39;ll be a bit more conversational &#39;cause we&#39;ll be talking about Jen Simmons.&lt;/p&gt;
&lt;p&gt;The same topic, just slightly different perspective, historical and from a designer&#39;s point of view.&lt;/p&gt;
&lt;p&gt;[00:42:44] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Okay, I&#39;ll enjoy, enjoy doing this one with you, and I looking forward to doing the next one. So I&#39;ll, see you next time on the no script show. David, take it easy.&lt;/p&gt;
&lt;p&gt;[00:42:53] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, thanks a lot. Bye.&lt;/p&gt;
&lt;p&gt;[00:42:55] &lt;strong&gt;Nathan Wrigley&lt;/strong&gt;: Bye.&lt;/p&gt;
&lt;/details&gt;</content>
  </entry>
  <entry>
    <title>The big picture.</title>
    <link href="https://noscript.show/2/" />
    <updated>2024-01-17T00:00:00Z</updated>
    <id>https://noscript.show/2/</id>
    <content type="html">&lt;h2 id=&quot;show-notes&quot;&gt;Show Notes&lt;/h2&gt;
&lt;p&gt;This episode looks at future topics and how they&#39;re interconnected and better understood within a historical context. It&#39;s to save us from getting overwhelmed and paralysed by all the new options.&lt;/p&gt;
&lt;h3 id=&quot;talking-points&quot;&gt;Talking points&lt;/h3&gt;
&lt;p&gt;Web tech is exhilarating, but can leave us feeling lost and burned out. How do we:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Know what to learn.&lt;/li&gt;
&lt;li&gt;Know who to learn from.&lt;/li&gt;
&lt;li&gt;Find a direction.&lt;/li&gt;
&lt;li&gt;Gain perspective.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-our-next-episodes-tell-a-story&quot;&gt;How our next episodes tell a story&lt;/h3&gt;
&lt;p&gt;Below is the order to the subjects we are covering next. We are using them here to show how web tech has evolved and what is coming in the near future.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS layouts.&lt;/li&gt;
&lt;li&gt;Intrinsic design.&lt;/li&gt;
&lt;li&gt;Component based design.&lt;/li&gt;
&lt;li&gt;Container queries.&lt;/li&gt;
&lt;li&gt;CSS interactivity.&lt;/li&gt;
&lt;li&gt;Web typography.&lt;/li&gt;
&lt;li&gt;Web Images.&lt;/li&gt;
&lt;li&gt;Web colours.&lt;/li&gt;
&lt;li&gt;User preferences.&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt;Transcript&lt;/summary&gt;
&#92;[00:00:06&#92;] **Nathan Wrigley:**:Hello there and welcome to this the second episode of the No Script Show, a brand new podcast, which is gonna be all about modern front end web design, where we look at what we can build today with minimal dependencies and skills. I&#39;m joined as I always will be by David Waumsley. Hi David.
&lt;p&gt;[00:00:06] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:Hello there and welcome to this the second episode of the No Script Show, a brand new podcast, which is gonna be all about modern front end web design, where we look at what we can build today with minimal dependencies and skills. I&#39;m joined as I always will be by David Waumsley. Hi David.&lt;/p&gt;
&lt;p&gt;Hello. As I said, this is the second episode. In the first episode, we just orientated you a little bit about who we are and what our background is. This episode will be a little bit different, but I still feel orientation is the right word because we&#39;re gonna spend a moment or two just thinking about what we&#39;re gonna be doing in the episodes to come.&lt;/p&gt;
&lt;p&gt;Like I said, we talked in the first episode about what prompted this show, and really that was all about the overwhelm in the things that are becoming. We&#39;ll be coming in the web platform in the near future. We&#39;ve both been users of WordPress, heavily reliant upon WordPress over the last decade, and I think David got the intuition first that, that maybe we&#39;d become a little bit de-skilled.&lt;/p&gt;
&lt;p&gt;And there were things going on in the background, innovations happening, especially with browsers and what they&#39;re capable of. and we&#39;ve got left a little bit behind. So this show is an exploration. Of that and trying to relearn or learn for the first time what we may have missed out on over the last decade.&lt;/p&gt;
&lt;p&gt;But rather than dive into every single standalone topic, we decided to do an overview in this episode about the next few episodes that are gonna be coming. And the reason for that is we, hope to. In your mind, dear listener, be able to connect all of the different bits and pieces and give you some historical context.&lt;/p&gt;
&lt;p&gt;And there is historical context and so that&#39;s important. So we&#39;ll be talking a little bit about that. In short, we&#39;re trying to see the big picture behind what&#39;s coming. From the W three C, in recent, what has been coming and what will be coming in the future? mostly to save ourselves from getting overwhelmed and paralyzed by it all.&lt;/p&gt;
&lt;p&gt;yeah, that&#39;s the, beginning and I&#39;ll pass over to David.&lt;/p&gt;
&lt;p&gt;[00:02:10] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, nicely put. And it was you really who said, we started to try and list out the topics we&#39;d talk about and there was a kind of a developing story over the last sort of five years about what new stuff is coming on. And it leads on because it&#39;s all, as we&#39;re focusing mostly on the sort of simple stuff, the HML and CSS, there&#39;s a lot really coming to that, which we haven&#39;t seen until recently.&lt;/p&gt;
&lt;p&gt;And it was me trying to, explain why I&#39;ve put &#39;em in a certain order. I realized that we were telling the. The kind of history, won&#39;t we, of what&#39;s coming and, it gives you a sort of. A philosophical, aspect to the whole thing. you can see direction and that if you bring up, actually for those people watching on YouTube, the website.&lt;/p&gt;
&lt;p&gt;We have got our talking points where we will just chat first a little bit before we introduce the next episodes. A little bit about, that problem that I know I have or certainly suffered it recently is knowing, what to learn next. Who from. And the direction of that, getting some kind of perspective, if you like, on what I&#39;m learning next.&lt;/p&gt;
&lt;p&gt;And, so I thought even if, let us, shall we start with the, what to learn. So we have limited our choices for this show, haven&#39;t we? We, yeah. Are just sticking with mostly with HTML and CSS and we are for that purpose, we are ignoring frameworks and platforms. So in theory, it should be a little bit easier.&lt;/p&gt;
&lt;p&gt;Say, if you were in WordPress, you&#39;ve got a lot of builders to possibly choose from and lots of different tools. If you are a JavaScript developer, you&#39;ve got lots of different frameworks to choose from or going in their own direction. In theory, what we&#39;re covering should be easy because H two ml and CSS, but.&lt;/p&gt;
&lt;p&gt;It isn&#39;t always that easy because I think there&#39;s lots of places where you can fall down different rabbit holes because the W three C tell you what is available, what can browsers can do, but they don&#39;t necessarily tell you how you should do it. And. Nathan, you are. When you started learning, as we did in those early days, just trying to build with HML and CSS, did you find there was lots of, even though you found experts then, that there was a lot of division between certain things that would be, I remember arguments about whether you should be coding everything up to be fixed or whether it should be fluent. yeah, there&lt;/p&gt;
&lt;p&gt;[00:04:42] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:was, there were definitely different debates going on at the time, but I feel that it&#39;s much more difficult if you&#39;re making a start now, I feel it&#39;s, there&#39;s, more overwhelm, there&#39;s more differences of opinion, there&#39;s more different directions you could go in. So as an example, when I began, really, nobody was using JavaScript at all for.&lt;/p&gt;
&lt;p&gt;More or less anything. It came along after the fact. So at least that part of the, jigsaw was out of the question, it just simply didn&#39;t exist. It was HTML and then after that CSS came along and it, so it was fairly straightforward to, for me at least, to figure out what to do. But then as you say, those, little things crept in, like fluid design and responsive design later, all, crept in there were.&lt;/p&gt;
&lt;p&gt;There were differences and people started to argue about, which was the air quotes, the correct way to do it. And I think because there was no clear direction, all sorts of things broke out. frameworks came along and ways to do things and what have you, but also just rewinding a little bit back then, I think it was easier.&lt;/p&gt;
&lt;p&gt;I. To gain knowledge because really all you had to do was buy a book. And that book meant that the person who&#39;d written the book had obviously risen to the top in some area. there was that editorial control. Whereas now, I think especially with the advent of platforms like Facebook and YouTube, anybody can put any content out there and in some cases they may be entirely, and again, air quotes.&lt;/p&gt;
&lt;p&gt;But also they may be putting out just half the story or telling you things, which really ultimately you don&#39;t want to be doing. So yeah, I think the endeavor here is just to, is to reset a little bit. you&#39;ve found a, list of people that you trust and you&#39;ve got in, you&#39;ve got intuitions as to why you can trust them.&lt;/p&gt;
&lt;p&gt;But I do think going back to the W three C is now a really good option and, I, dunno if it&#39;s done a really great way of. Advertising itself, particularly as the, source of authority, because it feels like that&#39;s not what its purpose is. But that&#39;s, what we&#39;re making this podcast about.&lt;/p&gt;
&lt;p&gt;Really. We&#39;re putting them the W three C right in the center front and center and, all of the different things are being, being talked about in this podcast&lt;/p&gt;
&lt;p&gt;[00:07:06] &lt;strong&gt;David Waumsley&lt;/strong&gt;: will be related to that. So yeah, it all got a bit&lt;/p&gt;
&lt;p&gt;[00:07:10] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:shattered. I think it&#39;s become more shattered. And your genius, I think, really about putting this podcast together was the idea that, let&#39;s just brush aside all those shattered bits and let&#39;s just concentrate on the bit in the middle, the W three C and we will get into all of the knots and the bolts, the CSS and the h tmm l and a whole range of other subjects.&lt;/p&gt;
&lt;p&gt;But today is more about what are we trying to learn? Who are we trying to learn from? And if you&#39;re watching the screen, finding a direction and gaining some perspective.&lt;/p&gt;
&lt;p&gt;[00:07:41] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, and I think, you know what&#39;s really interesting is we just decided that we&#39;ll try and stick to people that are closest to the W3C.&lt;/p&gt;
&lt;p&gt;The people who are writing or who are in the working groups are writing some of the spec and those people who are, also publish the books as well. I think interestingly when we, I. When we were doing it, people who were publishing the books still had different ideas. So there was well-known books by people who told you how to code with tables.&lt;/p&gt;
&lt;p&gt;And then competing with that, there were other, well-known books by people say, we need web standards and you need to be, yeah, using floats and you still were stuck. But I think what&#39;s really. Interesting to me now because I, came out, a year ago if you like, trying to relearn CSS, doing it through, as you mentioned, YouTube videos.&lt;/p&gt;
&lt;p&gt;And it didn&#39;t help me. And what helped me was starting to listen and the free online, most of &#39;em, the sort of conference talks that will be given by people in the working groups, people will be mentioning as we go through this. Jen Simmons, Rachel Andrews, Miriam, Suzanne, All people that look to, and there&#39;s people from, way back as well who are still doing things.&lt;/p&gt;
&lt;p&gt;Jeffrey Zeldman, Bruce Lawson. Yeah. And yeah, Eric Meyer was probably the first person I ever came across as a name in CSS. They&#39;re still influenced in today. So all those people who are very invested in the web platform and contribute in some ways, even if it&#39;s just through their blog writing, that influences the people in the working groups.&lt;/p&gt;
&lt;p&gt;So we&#39;re trying to stick with those because. I, found a real difficulty going off the, and one example was that when I started to watch some of the developments, particularly from Rachel Andrews talking about layouts a lot, Jen Simmons two, is that I realized that was my sticking point, for everything, if you couldn&#39;t lay things out on the page as I wanted to in the correct way.&lt;/p&gt;
&lt;p&gt;And I realized when I was getting the YouTube videos, they made sense of what the W three C were tr attempting to do over the last. Decade or more to build up this comprehensive, setup for layout, which we now have, which we didn&#39;t have before. yeah, so that&#39;s, helped me find a direction and that&#39;s really all we wanted to talk about, I think in the first place was the fact that for this show at least, and it&#39;s been the direction I&#39;ve gone in, I&#39;ve listened to this, people who, if you like, reference the spec, the platform.&lt;/p&gt;
&lt;p&gt;In some ways it&#39;s an inter, you mentioned about there&#39;s not any marketing and it, you just reminded me that there is an interesting thing going on at the moment. It&#39;s an aside that, we may be seeing CSS four come out soon. Now no such thing exists in reality because for a long time. Since the nineties, CSS and HTML don&#39;t have versions, but the problem is out in the greater world, employers will still look for, what was the last spec for that?&lt;/p&gt;
&lt;p&gt;CSS three. Yeah. And even though it&#39;s a bit of a nonsense, the grouping, so much has happened since, I think 1999 was when that came out, that they. Probably putting something together for, just really for publicity, I think, and to help people who will hire people to do development, to understand what.&lt;/p&gt;
&lt;p&gt;Knowledge they may have. &#39;cause your knowledge from 1999 as a CSS person&#39;s probably not gonna be too useful to anybody. So yeah, there is the, there is all of that. And I think see a move going on, because we&#39;ve had a, decade of, since React from Facebook, we&#39;ve had a decade of JavaScript first, and the web platform is A-H-T-M-L first with JavaScript.&lt;/p&gt;
&lt;p&gt;There&#39;s a, bit of a shift, if you like, as, in the sense that many of the JS frameworks are, using web components and things like that to connect with HTML more. yeah, so I think it&#39;s a really exciting time and I, but that&#39;s basically the upshot of what we wanted to talk about here, is that this show will be led by us not trying to give an opinion, but really trying to, as best as we can, represent. Ourselves, what the people who write the spec are saying about the future of the web. It just&lt;/p&gt;
&lt;p&gt;[00:11:59] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:occurs to me that if you&#39;ve dropped in on this second episode and we&#39;re uttering words like W three C, that there may be. Really no connection in your head as to what that even is because well, what even is that?&lt;/p&gt;
&lt;p&gt;Do, you wanna just get into that for the teeny, tiniest amount of time and just say what the W three C is though? It&#39;s the Worldwide Web Consortium. that&#39;s the W three C bit, but, yeah, what is it? How is it, how has it got itself at the center and all of that?&lt;/p&gt;
&lt;p&gt;[00:12:34] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, it&#39;s, I dunno if I could do it justice for No, it&#39;s okay.&lt;/p&gt;
&lt;p&gt;Just a positive history. Yeah. But no, I think, but I can give you a I, you know it, it is the organization we look to for the web and it is still overseen by Tim Burners Lee, who is credited as the inventor of HTML, which is the center of our web journey. And it&#39;s. It&#39;s had an interest in because at certain points it could have very much lost what it&#39;s there to do.&lt;/p&gt;
&lt;p&gt;And it has a, foundation of the web being for all and on everything. And that&#39;s its mission, And in the past, the organization has been fairly loose with what is expected, how browsers to implement. And of course we get no web without browsers. Particularly in the early days with htm, l nearly went off with a, side group of people creating XHTML because Tim thought HTML was done.&lt;/p&gt;
&lt;p&gt;He changed his mind because it&#39;s always a division. He is a very good leader in that sense because he is able to, reflect on what&#39;s needed. And I think that&#39;s the way that this organization has always gone. But I think what&#39;s interesting about it today is that now that browsers. Are not working on a loose spec from the W three C on what we&#39;d expect to do.&lt;/p&gt;
&lt;p&gt;They are not going their own different routes. They&#39;ve realized, and only over recent years, which we covered last time, is that if they don&#39;t work together. To implement stuff that all developers can use because it will work in all of the browsers. They&#39;re only shooting themselves in the foot. So now we have the weight of all the big browser vendors who are also, Microsoft and Apple and Google.&lt;/p&gt;
&lt;p&gt;They&#39;re also the people who are creating devices as well. So they bring the very best of the people to that organization to work through this. And I think over recent years we&#39;ve seen this. This thing to not, one example we used before was how we nearly went off a different direction, with flash, Yeah. It was proprietary code, which could have only put in the shell of HTML, and it could have been what we experienced of the web, but the danger with that is that it would&#39;ve been. It basically the web, effectively owned by Adobe, where the Worldwide Web Consortium is there to make sure that it brings all the commercial aspects of that together, but because they&#39;ve got the opportunity to.&lt;/p&gt;
&lt;p&gt;Criticize the other work. It doesn&#39;t go through unless everybody agrees in these working groups. So it&#39;s a, at the moment it&#39;s been working well, hasn&#39;t it? To, see that the, web is a platform that everybody can build on and be creative on that will work for all and ideally on everything.&lt;/p&gt;
&lt;p&gt;That&#39;s the idea that Worldwide Web wants to make things that will suit the browsers of the future, or not even browsers, maybe a Siri type. System where the web is read to us. And images from a website are thrown up to us. Who knows? Yeah. But that&#39;s, I guess what they&#39;re charged with doing is thinking ahead a system that&#39;s gonna work that developers can work together in the same direction on. Anyway, that was a&lt;/p&gt;
&lt;p&gt;[00:15:56] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:long, I think, the history of that is really interesting because if you were to rewind to the beginning of the web, but there was no, real notion as to what it was gonna become and it probably felt to Tim Burnley at the beginning that. Maybe a couple of dozen people will hop on this with their giant mainframes in different academic institutions around the world and, may, maybe as many as a thousand people will end up using it.&lt;/p&gt;
&lt;p&gt;and then of course it morphed and it became much more popular and it, came down the telephone line and modems and all of that were in use. And then. Commercial enterprises got involved and at that point there was this conflict of what should the web become because it, felt like it, like you said, with a Adobe&#39;s flash, it felt like it really could go off in that direction and that technology was so amazing.&lt;/p&gt;
&lt;p&gt;There really was an inflection point there where it could suddenly do a lot more than it previously could. you could play videos and animations and games and all sorts of things, which was, whoa, hang on. That can be done. but the idea of wrestling it back and having this, this objective body that can look at things and weigh them up and importantly doesn&#39;t really need to be in a rush.&lt;/p&gt;
&lt;p&gt;They don&#39;t need to do things right now because somebody suggested that we should do it right now. They can pause and, be a bit more reflective. And honestly, we&#39;re very lucky that the, founding fathers of the internet had this intuition that something like this needed to be set up. Yeah, because it could have gone entirely down commercial lines and, maybe something like a OL would&#39;ve taken over and that would&#39;ve been the mechanism for us all browsing the web.&lt;/p&gt;
&lt;p&gt;And we&#39;d have to pay to get access to various different parts of the internet. Who knows, it could have gone in all sorts of different directions, but we are, I. We are where we are now, and it feels like over the last few years, all of the competing factions have decided, okay, it&#39;s better if we all just combine our efforts on the basics so that everybody&#39;s browser can at least do the basics and then we can. Work on our own stuff. So anyway, sorry that was supposed to be an aside and it ended up being like about a 10 minute aside.&lt;/p&gt;
&lt;p&gt;[00:18:09] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Shall we, scroll down on for the YouTube people to our other point so we can actually go on to and just talk about the episodes and why we think. These might work. this is just the main topic areas. So I might end up going on for some time here, Nathan, so just Okay. I&#39;ll go and grab a cup&lt;/p&gt;
&lt;p&gt;[00:18:31] &lt;strong&gt;David Waumsley&lt;/strong&gt;: yeah, the, so the next episode, which is what we said we were gonna do this time, would&#39;ve been looking at CSS layouts because probably that&#39;s. I would think that&#39;s probably the reason why we have so many CSS frameworks and WWE editors, because there simply wasn&#39;t.&lt;/p&gt;
&lt;p&gt;A layout system until recently, until we got Flexbox and really properly, until we got grid, we didn&#39;t really have a uniform system. Like you were saying with Tim Burners, Lee&#39;s idea was sending these scientific documentation. Yeah. It wasn&#39;t a, a layout tool. And it&#39;s taken all of this time to get it, but now it&#39;s here and I think, in order to understand what is coming out or to understand something like grid and. By, Rachel Andrews, who it goes back to, I think 2090 refactoring the way we talk about CSS because it&#39;s got a bad name. I think amongst people have been difficult, which it is when it comes to layout. That&#39;s what I wanted to skip, and that&#39;s why I went for the WY Wig Builders. I could do the rest of the CSS basic styling and still.&lt;/p&gt;
&lt;p&gt;Retain that stuff, but that was difficult and she, and I think why we&#39;ll talk about that on that one is because she does a really good job at explaining that there is actually a logical system where we think of CSS, we often think of something complex, difficult to use, and that&#39;s simply. Because we didn&#39;t have a layout system.&lt;/p&gt;
&lt;p&gt;We were using hacks all along the way, inappropriate properties to try and get the layouts we want to achieve. So people wrote different books about how you might want to do it and would disagree. Now there is actually a logical system where everything in the CSS is coming together and for me there was a real big breakthrough moment watching her talk.&lt;/p&gt;
&lt;p&gt;She didn&#39;t really emphasize it so much, but there is a thing called internationalization. an attempt to make the worldwide web. Actually worldwide to acknowledge that there are different directions for people writing. If you&#39;re Arabic, it is going from right to left rather than left to And once you understand that there&#39;s writing modes and there&#39;s some spec to sort that out.&lt;/p&gt;
&lt;p&gt;So if you need to make, another page that&#39;s similar design for another language, it&#39;s much easier. You don&#39;t have to just reverse everything. You&#39;ve got a writing mode, which then explains why when we move to something like. Grid or, flexbox, why we&#39;re always talking about start and end block and inline and stuff because we&#39;ve set up a system which is no longer top left, and bottom.&lt;/p&gt;
&lt;p&gt;So I, think it&#39;s really good to go through her talk next time just to get an understanding that actually there&#39;s a system there and, her big claim is, and I, can see how true it is, that it&#39;s easier sometimes for her to. To teach somebody who&#39;s never seen CSS before than it is for somebody who has a lot of experience and the baggage of.&lt;/p&gt;
&lt;p&gt;[00:21:26] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:I find that absolutely fascinating actually, because the, assumption would be that the more you&#39;ve learned over the last 20 years, the more likely you are to be able to understand what&#39;s coming. But actually maybe it&#39;s the other way around, maybe having no baggage of how things are laid out. It means that it&#39;s, it is easier. So I&#39;m interested to see how that goes. Yeah, that&#39;s good.&lt;/p&gt;
&lt;p&gt;[00:21:48] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, it&#39;s more harmonious I think, as well now because some of the old debates that we&#39;d have, say pixels versus rems, fixed versus, it&#39;s got fluid, Adaptive versus responsive? to be honest, we know now that all of these older methods have gone, no one&#39;s gonna argue with &#39;em now because they were looking backwards to a time of design where we were basically mimicking what we would do in print.&lt;/p&gt;
&lt;p&gt;Yeah. Now we know we have to have these squishy layouts. So to understand the system that creates these squishy layouts in ways we can understand is that, but that also leads on, and I think we need two episodes and we say intrinsic design. That&#39;s basically the, we&#39;ll look at the talk. By Jen Simmons, which we talked about./p&amp;gt;&lt;/p&gt;
&lt;p&gt;We called, episode roughly after that, where everything had changed in, web design. And we can get another perspective of all the changes, which we&#39;ve just alluded to. the historical changes of ways that we would do web design with the tools that we got and how she believes that we&#39;re in a new period of intrinsic design, this squishy internet and.&lt;/p&gt;
&lt;p&gt;What we&#39;ll get from her is that historical side, but also she as a designer more than a developer. She&#39;s asking more the question, what does it mean to be a designer? today when we are, simply because the spec is thinking about that, where we are designing for. browser devices that don&#39;t yet exist for browsers.&lt;/p&gt;
&lt;p&gt;That&#39;s, yeah. That might be used in different situations. She uses the browser. That might be on your fridge or the Siri type thing. Always talk that way. It talks to you, so it&#39;s being that designer and understanding that. So that was good. But she does make a couple of points, in her tilt.&lt;/p&gt;
&lt;p&gt;They&#39;re little aside. And one of those is about how she felt that we maybe have over complicated just some things with everything wrapped in JavaScript. And we might be making some of the mistakes of flash. and I know why she doesn&#39;t go very far because that has been a whole period of the last 10 years where it&#39;s gone that way round.&lt;/p&gt;
&lt;p&gt;And I think back in 2018 when she was doing that, we didn&#39;t have some of the new stuff that were. That we&#39;re leading to now because they were there for a reason. She skips over that in her talk. so there was a point, I think you&#39;ll agree, where everybody&#39;s thought, why are we styling these scientific documents to look like pages?&lt;/p&gt;
&lt;p&gt;Why are we not just saying these are all made up? A little blocks of reusable ui. Why are we not component-based designing? And I think that&#39;s what&#39;s interesting about this. So from her talk onwards, we can now look at component-based design. And I think there&#39;s a bit of a debate there about, even in CSS, about how people have tackled that in order of organizing their CSS.&lt;/p&gt;
&lt;p&gt;Because what made React so popular in the JavaScript frameworks is that it could do it where CSS couldn&#39;t Suddenly. Yeah. Suddenly you want to have little units which are encapsulated. You can style up independently to build as you are building blocks for your website. You couldn&#39;t do that. So we&#39;ll move on to that into the next one on component-based design and talk a little bit about that.&lt;/p&gt;
&lt;p&gt;there is something which is now quite popular, it started even before React, which was web, components, right? Yep. Yep. And, you almost can&#39;t say that today because when you say components, everybody simply thinks of JavaScript components. But actually, they still are to an extent.&lt;/p&gt;
&lt;p&gt;But this is something that&#39;s been building up in the W three C for some time. we&#39;ll talk a little bit about that and we might use it for all of these things. We&#39;ll try and add to our third guest, which is the website you&#39;re looking at. maybe I&#39;ll do a video which will just look at some of the coding, which is borrowing from what.&lt;/p&gt;
&lt;p&gt;Rachel Andrew is saying. And then when we come to, components, maybe we will stick in our embedded video data using their web component, which is just, yeah, HML with a little bit of JavaScript in there. Okay. yeah, next episode. and then I think this is the biggest change. That&#39;s happened just really at the end of 2023, really when it&#39;s supported in all the major browsers.&lt;/p&gt;
&lt;p&gt;We have a thing called container queries. Yeah. This is big, isn&#39;t it? Yeah, it is. And it&#39;s mentioned in Jen Simmons&#39; talk that we talk about earlier as one of our other aside, which is, it, she called it the unicorn. We may or may not get it, and we have got it. And it&#39;s one of these things where the browser engines have been.&lt;/p&gt;
&lt;p&gt;Three factor to make it possible so we can query. The, container. So it does allow, and that&#39;s why I think we need another chat just with H TM L and CSS, we could be able to start to build up nice little components. So this is something that the WC three have been aware of. It&#39;s, lacking with this HTML and CSS.&lt;/p&gt;
&lt;p&gt;Stye in one document that we could, that would, it hasn&#39;t really focused on the needs for people to create these reusable stuff. And I think in our case, mostly what we need is not functionality, but is style. We maybe want a little styled card that we Because Style Up wants and just slot into any design.&lt;/p&gt;
&lt;p&gt;And we know that &#39;cause it&#39;s containing its size in it, it will respond appropriately to the design We put it in. so I&#39;m talking a lot here, Nathan, but No, it&#39;s, should I just put, should I explain a little bit just about the, I think the example of a container query is the one that&#39;s used the most. Yeah,&lt;/p&gt;
&lt;p&gt;[00:27:31] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:I think, that, I think it might be good to just pause a moment there and just explain how it&#39;s different from what we&#39;ve got now. So your card example is a good one. How, would that work on, I don&#39;t know, a range of different devices?&lt;/p&gt;
&lt;p&gt;[00:27:43] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, so you know where before you always had to take the view port as with your media queries as the thing that would controlled the whole layout.&lt;/p&gt;
&lt;p&gt;So everything had to be solved. That where you can now take a component. So in your example of a card, let&#39;s say you&#39;ve got a lot of space because in a certain. Thing. This card might need to be the full width of a screen or something. So you might have the big image in that card or something on the left hand side.&lt;/p&gt;
&lt;p&gt;Yeah. And the header on the right, and there&#39;s some paragraphs under it, and then maybe a button. So you know, a. Third of it will be taken up with the image, but then when you want that same component to slot into a sidebar, you may need it. So the image goes up to the top and then the, and all the font sizes change to that.&lt;/p&gt;
&lt;p&gt;So you can with all the sort of responsive calc stuff with your text, you can make the text squishy, but you could start to move around the order of things, so the, image, because you&#39;ve actually queer. The container by size. So in the, if it&#39;s, at 600, it behaves this way. If it&#39;s below that, it behaves in a different way.&lt;/p&gt;
&lt;p&gt;So you can start to make these reusable components. And I think this is gonna be one of the most exciting things, which we won&#39;t get very far on because I think combined with some other things that have come out, has, is one of those things. Oh, yeah, It&#39;s the parent selector where you, yeah.&lt;/p&gt;
&lt;p&gt;you can select something that&#39;s in the card and have it behave differently and later we should get container. We&#39;ve got container queries, the size format at the moment, so we can change what&#39;s in that container based on its size. What&#39;s coming soon is. Style. Hopefully at some point we&#39;ll be able to change the style based on that container size, which will be it, it is definitely moving towards a component based way, which is really not been accessible to people, I don&#39;t think, that&#39;s really why the JavaScript frameworks have been so popular, because the, only things they&#39;ve been able to address that approach to building sites.&lt;/p&gt;
&lt;p&gt;[00:29:47] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:Yeah. So it&#39;s almost like you could have these little components, these containers, and they&#39;re almost like. A website in themselves in a way, because you can, style just that unique one and then repeat it and just amend it so that the image goes right on a subset of those.&lt;/p&gt;
&lt;p&gt;And essentially it&#39;s like the view ports that we&#39;ve got with the media queries at the moment, but inside each of the little components themselves. And so it opens up this world of possibility, although. I, am actually struggling to imagine what will be envisioned by web developers over the next couple of years.&lt;/p&gt;
&lt;p&gt;I&#39;m sure it&#39;ll go in directions that I, nobody&#39;s anticipating, but it opens up the opportunity to really atomize the design and have, each little bit of the design as something separate and unique and repeatable, which will be brilliant.&lt;/p&gt;
&lt;p&gt;[00:30:42] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Yeah, it will. And I think, nobody really knows now we know that things are in place and if you get that early foundations of how, if you like, layout&#39;s being set up, I think the combination of something, which again is coming, isn&#39;t fully there yet, but Subgrid will be in all the browsers pretty soon.&lt;/p&gt;
&lt;p&gt;And Subgrid with has with container queries at the moment will give so many options for component. base styles and stuff, but I think the interesting thing we&#39;ll talk about as we go through these episodes is that there is a bit of a push and pull because, we&#39;ve all gone container ad and we think, oh, building blocks, but is a website, really the sum of it&#39;s parts&lt;/p&gt;
&lt;p&gt;Yeah, And against that, there&#39;s an argument about, and it&#39;s something that very much connects with me, this idea that we might want to write little CSS. And in a lot of case, there&#39;s only a few components we need, and it might be so much better as we can do now, to use very little code to style our whole pages, our whole sites. right at the top of the document, so the cascade isn&#39;t dead, if you like. Yeah. Yep. In css. Yeah. anyway, I think we&#39;ve gone on. I&#39;ve gone on. No,&lt;/p&gt;
&lt;p&gt;[00:31:51] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:no, that&#39;s great. But like the next four episodes, CSS layout, intrinsic design component-based design and container queiries. That&#39;s really, that&#39;s all about the Putting the things on the page and how they move around on the page, depending upon the thing that you are viewing it in. But then, we&#39;re onto something different. So the next set, if you like, they&#39;re not gonna be quite so much about the layout because the next one you&#39;ve got is CSS interactivity. So this really does get into the wheelhouse of what is currently the domain of JavaScript, doesn&#39;t&lt;/p&gt;
&lt;p&gt;[00:32:18] &lt;strong&gt;David Waumsley&lt;/strong&gt;: it? Yeah, I think for that episode we&#39;ll end up breaking it into two because we&#39;ve got so many interesting stuff. That&#39;s, stuff that I think we&#39;ll use in our website as well when we bring it in as our third guest. I think, we&#39;ll, one of the big wow things at the moment only available in Chrome, but it should come to other browsers soon, will be a view transition, which gives you a very app like. Ability to move to your next page as a smooth transition, instead of just, to your next page. and, I think that&#39;s really interesting and we&#39;ll probably try and do that.&lt;/p&gt;
&lt;p&gt;I think with our site. We&#39;ll try and make our archive page once we&#39;ve got a few episodes, we&#39;ll need that smoothly. Transitioning into the individual episode pages, perhaps we&#39;ll have a crack at that. Nice. yeah. And, but there&#39;s so much other stuff. We&#39;ve got, scroll animation, which is, fabulous stuff./p&amp;gt;&lt;/p&gt;
&lt;p&gt;I think with our site. We&#39;ll try and make our archive page once we&#39;ve got a few episodes, we&#39;ll need that smoothly. Transitioning into the individual episode pages, perhaps we&#39;ll have a crack at that. Nice. yeah. And, but there&#39;s so much other stuff. We&#39;ve got, scroll animation, which is, fabulous stuff.&lt;/p&gt;
&lt;p&gt;You, you won&#39;t need a library to do most of the things that people are doing with. Items as you&#39;re scrolling down could be moving from left to right on your screen and other things being affected by animation as you scroll to a certain point. So that&#39;s all the interesting stuff that I used to need a framework for coming.&lt;/p&gt;
&lt;p&gt;So I think we&#39;ll need two for that. But then also I think before we can start talking about how we might use this and talking about maybe working with clients. There&#39;s a whole bunch of other stuff, which is new. Typography changed. We&#39;re getting color fonts, we&#39;re getting variable fonts. We&#39;re getting so much stuff coming to, just HTML in terms of, units that will allow you to, interact with the font itself in a way that somebody who&#39;s into type might do.&lt;/p&gt;
&lt;p&gt;So I think that&#39;ll be a big learning for us, learning how to use. typography better and, and web images, again, we&#39;ve got, so much coming in the way of new formats, which are more optimized, but not just that. Ways that we can treat again with CSS. The way that images behave. Images have always been a bit of a problem &#39;cause they&#39;re an airline element.&lt;/p&gt;
&lt;p&gt;You stick in and then you stick it a hundred percent and then, if you set its boundaries, with the width or the height, you&#39;re gonna squid in the wrong way. we&#39;ve now got things where you can put a cover on it and you can let the. You can let the available space change.&lt;/p&gt;
&lt;p&gt;So if you have something in the center of an image, you can be cutting off the sides of that image as it&#39;s moving more squishy. So there&#39;s a lot of stuff in the CSS to play around with the images and colors. Oh wow. I dunno where to start on that one. We&#39;ve got some palettes and stuff. yeah. once we just had hex values and And RGB, but now we&#39;ve got a whole range of, new stuff and a new way of working with color. And finally, and I think this is where we&#39;re going with the, with a lot of this spec that&#39;s already out there is based on user preferences. And my guess would be, and that&#39;s why I think we need to cover it, is that this is the influence of. the browser vendors? Yeah. In the W3C and the fact that they also produce, devices. I, see a much more of an encouragement of people to choose their own experience of the web. So we&#39;re seeing things coming in. Where we can set up the user preferences for somebody who wants dark mode, I think that&#39;s gonna become common practice.&lt;/p&gt;
&lt;p&gt;So you can choose your light or dark and you can see apple&#39;s very much promoting that. I was very surprised with the first site I did that at Dark Mode to see just how many people came in &#39;cause it&#39;s not the default. and we&#39;ve got things like motion as well. Yep. so you. restrict, so you don&#39;t have to, you can be experimental with your motion, but if somebody set their device up to say, I don&#39;t like motion, please make it stop.&lt;/p&gt;
&lt;p&gt;You can code things up so you don&#39;t offend those people. And, it&#39;s already actually in our site, if you go to the scroll up button on our site, there&#39;s a little thing, I&#39;ve just put it in there, but it&#39;s actually behind a motion control. So if you set your device to say, I don&#39;t like motion, it&#39;ll just.&lt;/p&gt;
&lt;p&gt;Go straight up to the top. So great for accessibility. Yeah, it&#39;s that kind of stuff. And there&#39;s a lot of things and the idea of themes that you might create. So a lot of people want high contrast. And another big thing that we forget, again with the, a lot of, I think where the web&#39;s gone is to make sure that it really is Worldwide. So people are very conscious about, so you&#39;ve got now got one where you can, if you have a preference for less data, you can as a designer then say, okay, this person doesn&#39;t want to use up their data. It costs them much more money on their phone. You can say, okay, I&#39;m not gonna send them this image.&lt;/p&gt;
&lt;p&gt;I&#39;m not gonna load a font in. They can have the system font, you can choose those kind of things. So I think we&#39;re gonna see a lot more in that direction. And I think. That I think we&#39;re viewing the web does very differently, not this sort of image we used to have. It&#39;s now this squishy thing that will fit into any device to whatever a user&#39;s preference is, if they want it to, not to display so much color, if they want it dark or light.&lt;/p&gt;
&lt;p&gt;And I think that&#39;s where designers are going and I think that&#39;s where all of the stuff that&#39;s coming out from the W three C, it is leading us to that way. It&#39;ll be really&lt;/p&gt;
&lt;p&gt;[00:37:43] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:interesting to see. So this is a complete aside, but it&#39;s, it&#39;d be really interesting to see where the devices go as a result of this. at the moment, we&#39;re very used to the paradigm of the home computer with a big CPU in it and the mobile phone, which has a, again, some kind of chip in there to do an awful lot of work. And a lot of the settings are inside the, thing itself. my dark mode can be governed by, the O.S but also I can alter the font size in the oss and it&#39;ll be interesting to see if in the future it feels like a lot of this is more orientated to giving an app like experience, if you just flip the device around and suddenly it&#39;s changed. But it&#39;s changed in a way, which is something that&#39;s.&lt;/p&gt;
&lt;p&gt;That&#39;s better. Not something where you lose sight of what&#39;s going on and you&#39;ll be able to have control and agency over whether things move or not and how much data you are consuming and all of these kind of things. and it, I really can&#39;t predict where it&#39;s gonna go, but I have this intuition that for companies like Google and Apple.&lt;/p&gt;
&lt;p&gt;This must be an incredibly important moment because they&#39;re completely tied up with their, ecosystems, PCs and Android devices and iPhones and all of that. And the more, that this new version of the web, like Jensen said in 2018, how everything&#39;s changed, this new changed version of the web.&lt;/p&gt;
&lt;p&gt;Really will open up to those device manufacturers a whole set of opportunities, which at the moment were just bound inside a browser and now it feels they can step out of the browser and be a, maybe the browser will be it. That will be all that you need for all the [00:39:30] &lt;strong&gt;David Waumsley&lt;/strong&gt;: things. Who knows? Yeah, I, and I think that&#39;s it.&lt;/p&gt;
&lt;p&gt;The web, the web on everything is the mission behind this, which everybody&#39;s behind. And I think one thing I didn&#39;t mention, and we had a nice conversation. You, interviewed somebody, for the, your other show on this, and that&#39;s web assembly. That&#39;s another thing which I think comes in too.&lt;/p&gt;
&lt;p&gt;This kind of component based design. it. it&#39;s really fascinating. It&#39;s been used in WordPress, isn&#39;t it? I think if I&#39;m, if you correct me if I&#39;m wrong to, to, so you can now go and try out WordPress without installing it Yeah. In your browser, and I think that&#39;s really gonna be fascinating. It is.&lt;/p&gt;
&lt;p&gt;It is away from what we&#39;re doing as. Web designers, but where needed, it&#39;s allowing this opportunities for things like games or other apps that are written in completely non-web languages to be able to be converted into a language that will then display and could be sorted into your HTML. I think it&#39;s fascinating, Yeah, I think&lt;/p&gt;
&lt;p&gt;[00:40:31] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:it, almost like the capabilities of Flash brought into HTML Exactly. In some respect, which is gonna be quirky. so, I guess maybe we&#39;ve, exhausted the, the bits and the pieces for this. Episode, but really the endeavor here was to just to lay out what&#39;s gonna happen over the next, I don&#39;t know, 10, 11, 12 episodes.&lt;/p&gt;
&lt;p&gt;And, hopefully if you view those episodes as a whole, it will give you a real good primer on what&#39;s coming up and what&#39;s available right now. And, that&#39;s, the endeavor. I think you&#39;ve laid that out beautifully, David. Well done.&lt;/p&gt;
&lt;p&gt;[00:41:05] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Okay, let&#39;s hope it&#39;s not a waste of time for people.&lt;/p&gt;
&lt;p&gt;So next time, yes, we&#39;ll start with the CSS layouts and we&#39;ll be really taking what, Rachel Andrew says on this. And I can think of no better person to, to, reference for this.&lt;/p&gt;
&lt;p&gt;[00:41:21] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt;:Okay, perfect. in that case, we will knock it on the head, as we say in the UK for episode two of the no script show.&lt;/p&gt;
&lt;p&gt;We&#39;ll be back with episode three all about CSS. So get your, get your notepads out &#39;cause there&#39;ll be, some notes to take no doubt. And we&#39;ll see you next time. Bye.&lt;/p&gt;
&lt;p&gt;[00:41:37] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Okay, bye-Bye.&lt;/p&gt;
&lt;/details&gt;</content>
  </entry>
  <entry>
    <title>Everything we knew about web design changed!</title>
    <link href="https://noscript.show/1/" />
    <updated>2023-12-13T00:00:00Z</updated>
    <id>https://noscript.show/1/</id>
    <content type="html">&lt;h2 id=&quot;show-notes&quot;&gt;Show Notes&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;This is our introductory episode. The title is &amp;quot;borrowed&amp;quot; from an influential talk by Jen Simmonds in 2018 called &amp;quot;&lt;a href=&quot;https://talks.jensimmons.com/GdnO62&quot;&gt;Everything You Know About Web Design Just Changed&lt;/a&gt;&amp;quot;. In it she argues that we are moving to a new paradigm of web design.&lt;/p&gt;
&lt;p&gt;Since, web specifications have improved and &lt;a href=&quot;https://developer.chrome.com/blog/whats-new-css-ui-2023/&quot;&gt;web browsers can do much more&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;talking-points&quot;&gt;Talking points&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The format and frequency of the show.&lt;/li&gt;
&lt;li&gt;The show&#39;s silly name!&lt;/li&gt;
&lt;li&gt;Who might like this show?&lt;/li&gt;
&lt;li&gt;This experimental website.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes-that-prompted-this-show&quot;&gt;Changes that prompted this show&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://talks.jensimmons.com/GdnO62&quot;&gt;Intrinsic Web Design&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wpt.fyi/interop-2022?stable&quot;&gt;Browser interoperability&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A need for the &amp;quot;one web&amp;quot;.&lt;/li&gt;
&lt;li&gt;The need to embrace &lt;a href=&quot;https://www.w3.org/standards/&quot;&gt;open standards&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/WAI/fundamentals/accessibility-intro/&quot;&gt;The web for everyone&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Others points:&lt;/strong&gt; Traditional Front-end development becoming more credible. A shift away from component based thinking. &amp;quot;Progressive enhancement&amp;quot; and user preferences over &amp;quot;pixel perfection.&amp;quot;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Transcript&lt;/summary&gt;
&lt;p&gt;[00:00:05] &lt;strong&gt;David Waumsley&lt;/strong&gt;: Hello and welcome to the first episode of a new show on modern front end web design. It’s a discussion show, but one where we’ll also be sharing the practical applications of our chats. And to do this, we’ll be live developing the no script. Show website. It’s bare bones as we record this, but we’ll be constantly changing and experimenting with it as part of the show.&lt;/p&gt;
&lt;p&gt;And before we introduce ourselves, hello Nathan. I thought I’d quickly summarize the purpose of the show and the hint is in the episode’s title, which is borrowed from a talk by. Jen Simmons and it goes back to 2018 and it’s called Everything You Know About Web Design Just changed. And in it she argues that we’re standing at the threshold of an entirely new era in digital design.&lt;/p&gt;
&lt;p&gt;And since then, it’s become more of a reality with a much more improved spec from the W three C, the Worldwide Web Consortium. Great advances in what web browsers can do for us. So we thought it was probably time that we dug into this. And to do that justice, we’re going to put aside web building frameworks and platforms because the impact of what’s going on now will be felt there later and directly concentrate on what’s coming from the.&lt;/p&gt;
&lt;p&gt;As early adopters, both of us of low-code page builders, we’ve become quite detached from this. So we are very much going back to school with this, but it’s not coming out of a deep desire to be coding experts. It’s really the tantalizing prospect that we might be able to do a better job with less code.&lt;/p&gt;
&lt;p&gt;Use what we’ve learned, the foundations of this knowledge to employ how we use our tools appropriately. So that’s enough for me. Nathan, how are you? I’m&lt;/p&gt;
&lt;p&gt;[00:02:03] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; good, thank you. I’m Nathan Wrigley. I have been working with David on WordPress podcast for years and years now, but I think I’ll just give a little bit of my backstory.&lt;/p&gt;
&lt;p&gt;So I began. Working with the web, I think it was very, late 1990, so 19 99, 19 98, something like that. But back in that time, anybody was really with 10 minutes. If you put your nose into a book for 10 minutes, you could probably be as good as almost anybody else. It was really the very beginnings and I was learning.&lt;/p&gt;
&lt;p&gt;About how to put up webpages just purely for my own interest, and discovered that there were pieces of software out there which could handle building webpages and putting the assets into the correct folders. Things like Microsoft Front Page and what have you. And I really got into it on a deep level and OB kind of obsessed about it and kept learning, but there wasn’t a lot to learn except.&lt;/p&gt;
&lt;p&gt;Frustration essentially, because back in the day it was all tables based layouts. And if you wanted to mimic something like a magazine layout, which is at that time, what everybody was trying to achieve, there really wasn’t the idea of, okay, the web is its own thing. It was what we’re trying to produce magazines online.&lt;/p&gt;
&lt;p&gt;That was really hard to do. So it became very frustrating and then CSS came along and I started to learn that. And then a bit of serendipity. A friend of mine needed a website, so I helped them with that and. had this intuition that, maybe there’s a, maybe there’s a job in this. And sure enough, there was, back in those days, because it was a level playing field, there were no offices where you could go and meet web designers.&lt;/p&gt;
&lt;p&gt;There were no web pages, showing off the, portfolio of work that you’d done in the past. I was as good as almost anybody else, those days of long since gone. But I was able to picture myself and in my local community. Became one of the people that did this work. So I’ve been using, those skills for years and years.&lt;/p&gt;
&lt;p&gt;Then I discovered CMSs. Drupal Magento and then finally WordPress, which I settled on and started to use that, and that’s where I’ve settled and stayed since probably about 2015. Something along those lines. Very happy with WordPress. I will be continuing to use it, but David spotted that there was a shift and a lot of the things that.&lt;/p&gt;
&lt;p&gt;We once would have found very, difficult to implement without complicated knowledge of things like JavaScript have been moved over into the CSS spec, or are going to be moved over into the CSS spec. And the options and the possibilities of CSS are gonna be amazing in the future. So we’re trying to make that the focus of this podcast just examining what’s coming, what we know thus far.&lt;/p&gt;
&lt;p&gt;I have to say that my knowledge is pretty poor. I. I have let myself become very de-skilled because of platforms like WordPress and the amazing page builders that they provide. So I have let my knowledge stagnate and I’m probably stuck in 2018 or something like that. Things have moved on and I felt that I needed to upskill, and luckily David’s here with his Cape superhero David,&lt;/p&gt;
&lt;p&gt;[00:05:21] &lt;strong&gt;David Waumsley&lt;/strong&gt;  to save the&lt;/p&gt;
&lt;p&gt;[00:05:21] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; day, and he’s gonna be teaching me, along the way, and hopefully at some point I’ll be able to teach him a thing or two as well.&lt;/p&gt;
&lt;p&gt;[00:05:28] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, if only that was the case. Really this show is both of us on a journey of learning. I’ve got a few months ahead of you, so I’ll just give my backstory quickly ’cause it’s very similar to yours. about 2005 I started, playing around with this. ’cause I thought the web seemed very exciting and I.&lt;/p&gt;
&lt;p&gt;Got books the same on HTML and CSOs and built, some sites for some friends and family. Then I discovered WordPress in 2007, so a long time I’ve been with that and I really only used that to help me in my work. I had a remote team and it was great for communication with those. About 2012, I took a career break from that, went traveling and an old friend of mine from school was, a web designer, needed some help with WordPress.&lt;/p&gt;
&lt;p&gt;She asked me could I help. This was a big job. I got involved in that and then started working on all the other things, didn’t go back to the uk, and I’ve been doing this since with WordPress and then getting into the page builders, and then it’s only recently. since she packed in what she was doing and I’ve got more of my own clients, I’ve realized that most of mine just actually don’t use their builder or got into trouble with ’em or something like that.&lt;/p&gt;
&lt;p&gt;So mostly I thought, in their case, I don’t really need to do that. I really should be able to go back and just do it with the HTML and CSS. So that’s what I’ve been doing. So I’ve got a few months on you, but not that much really in terms of catching up. But so much has happened that it’s, Worthy of a show. We think so, yeah. That’s where we’re at. And we’ve got a third guest, haven’t we? we do, we have a third&lt;/p&gt;
&lt;p&gt;[00:06:58] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; guest. the third guest is gonna be joining us on most of the episodes, I imagine. And the third guest is. A website. The third guest is the no script show website. That’s a URL no script show.&lt;/p&gt;
&lt;p&gt;And, I should probably just point out at this point that if you are looking, at the video, all of this will be obvious. But if you are listening to this on audio, we are recording this. As a video and as audio, and there’ll be a YouTube channel where we’ll put things. So we’ll try to make sure that the audio satisfies all of the requirements and we’ll try to explain things, in words as well as visually.&lt;/p&gt;
&lt;p&gt;But if there is something that we say, which you think, oh, I would like to see that. Then no script show will be the website, I’m sure at various points. We’ll clumsily, say something that’s on the screen and forget to point out exactly what it means to the audio listeners, but hopefully you’ll be able to find it, equally on audio and a video.&lt;/p&gt;
&lt;p&gt;And what’s the point of this? It looks like a pretty, pretty bare bones website at the moment.&lt;/p&gt;
&lt;p&gt;[00:08:05] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, it is. And that’s intentional. we thought about this after we did the show that it might be best to demonstrate it because as we know with the podcast that you are still reading there, your site has had to change over time.&lt;/p&gt;
&lt;p&gt;We thought, we’ll start with something as simple as you possibly can make it, and then we can use this as we learn or explain what we’ve been learning over the time. We can actually put that to practical applications and show it on the site. And maybe, I think when it goes to diving into some of the code, which I’ll.&lt;/p&gt;
&lt;p&gt;Take responsibility for, I can do some separate videos perhaps on my own channel, which we can connect to, which will just go into that if anybody wants to get into it. But largely I think it’s just there so we can demonstrate, decisions that we might make about a website in real time, if you like.&lt;/p&gt;
&lt;p&gt;So that’s the idea. With that, we may even, I think, because we’ve both got that WordPress thing and I’m still working with it as a sort of CMS to help me build the sites and organize code, we could go off in that direction where, so with that. We’ll get, so we can have global areas like headers and footers in that and manage that kind of stuff.&lt;/p&gt;
&lt;p&gt;But the idea of this show is to try and keep it. So whatever we talk about could equally be true if you were using a static site generator like Astro or something like that. So we’re gonna keep the focus on the. The more code side of stuff, although, the aim of this one isn’t really not, we don’t wanna exclude anybody who doesn’t really wanna touch code.&lt;/p&gt;
&lt;p&gt;I think we’re heading into a new direction where just knowing what’s going on in code is useful. Even if hand that over to a builder, it might be useful to have the background Yeah, so&lt;/p&gt;
&lt;p&gt;[00:09:39] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; we’ll, see how, this website progresses, but I think the intention really is that what we’re talking about in each episode may very well get reflected almost immediately onto the website.&lt;/p&gt;
&lt;p&gt;So I can’t say what that’ll be because we haven’t planned that far into the future. But let’s say that we talk about particular thing. The intention is that thing will get displayed on the website soon after the podcast episode is released. It may well be that we put show notes or things on that website as well, and who knows, we may have some sort of way back machine type.&lt;/p&gt;
&lt;p&gt;Feature where you can look at screenshots of how it was in the past. And if you go to screenshot one, I guess you’ll be looking at what we’ve got today, which is really what we’re looking at today, is a website which you could have built in 1998. It’s images and text and it’s, really bare&lt;/p&gt;
&lt;p&gt;[00:10:27] &lt;strong&gt;David Waumsley&amp;quot;&lt;/strong&gt; bones, isn’t it?&lt;/p&gt;
&lt;p&gt;Yeah, so I think your archive is a good thing. I think we’ll do that with this when we make a next change, we’ll, put it somewhere so someone can look at it, and I, can imagine over time that we’ll run out of things that we can do with this site for one particular purpose, and we might just start to explore other things, which we’ve, done together.&lt;/p&gt;
&lt;p&gt;In another podcast, we did a whole series looking at somebody. And how they might build their site. That’s, so we might do this more practically with this. So yeah, let’s talk a little bit more about then the, format of the show where we intend to go with it. Okay. I, there’s not much to say ’cause you actually covered the fact that it’s going in two forms and that I might do some other videos.&lt;/p&gt;
&lt;p&gt;I think frequency of the show, we’re going to just keep that. Wide open. We’re going to do ’em as we want for, so we don’t burden ourselves. But also for me, I think for the quality, if we’re, going to try and. Cover the stuff that we’re gonna cover now, which is big changes there when we’re probably gonna need to represent the experts properly.&lt;/p&gt;
&lt;p&gt;And that means catching up as we’re learning. So it might take a bit of time between various episodes. I think so, yeah. We’ll keep on loose&lt;/p&gt;
&lt;p&gt;[00:11:40] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Podcast episodes that both of us have recorded so far have been on a real regular cadence, but we decided just for the. The purposes of this podcast that it, will come out when it comes out.&lt;/p&gt;
&lt;p&gt;So if we don’t do an episode for several weeks, that doesn’t mean it’s gone away. Keep it in your. Podcast player of choice, but it will come round at some point when we manage to get around to doing an episode. I think the intention right at the beginning is to get a few recorded so that they will have a regular cadence.&lt;/p&gt;
&lt;p&gt;Sure. Because obviously we have, more inspiration at this point, but, we’ll, see how this goes. So that’s in terms of the frequency, but why the name, why no script show. That’s on you, David.&lt;/p&gt;
&lt;p&gt;[00:12:21] &lt;strong&gt;David Waumsley:&lt;/strong&gt;  you too. we did have some fun with some names there, but, it’s a kind of pun, isn’t it?&lt;/p&gt;
&lt;p&gt;Because of the fact that we generally, as you’ll see, I mean as you scroll down for the YouTube people, you’ll see that we’ve got some show notes there, and that’s basically, I. We’re going off. We have no script. We just have a bunch of bullet points, and we hope that we get to the end with something sensible.&lt;/p&gt;
&lt;p&gt;But also, it’s a bit of a pun, and it’s not hating on JavaScript, but it’s also using the tag no script where you don’t want, for people who are not running JavaScript. and the thing behind that is that a lot of what’s coming to CSS means that you don’t need so much JavaScript. So hopefully if you’re doing the kind of job stuff.&lt;/p&gt;
&lt;p&gt;I will do, maybe less so with you, Nathan, but mostly just like front end stuff. I probably don’t need JavaScript, so it’s just a bit of fun on that really. yeah.&lt;/p&gt;
&lt;p&gt;[00:13:15] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; And obviously as we’ve said, the website is gonna be experimental. It’s gonna be in Fluxx, so if it looks really good one week, but terrible, the next, it’s by design.&lt;/p&gt;
&lt;p&gt;[00:13:24] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah. Yeah. It’s fine design.&lt;/p&gt;
&lt;p&gt;[00:13:27] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; so who’s, the intended audience for this then? I should probably say, we’re gonna put this into the WP Bills, which is the podcast David and I have done for many years. We’re gonna put it into that feed as well. hello to those listeners. are we trying to capture some of those?&lt;/p&gt;
&lt;p&gt;Is there an intention that maybe some people that have been using CMSs might be interested in this as well? Yeah, I think&lt;/p&gt;
&lt;p&gt;[00:13:49] &lt;strong&gt;David Waumsley:&lt;/strong&gt; the idea is just to talk about the change in fundamentals of the web. So you know, it should in theory, be relevant to anybody, whatever platform they’re using. And I think still relevant, even if you are using a no code solution.&lt;/p&gt;
&lt;p&gt;I think just to know what is there, I think. That might help you make informed decisions about what tools you’re going to use and how you’re going to use ’em, whether you need to use ’em in all situations. So I think it, we’re aiming for everybody, but, and maybe mostly it might be for people who are.&lt;/p&gt;
&lt;p&gt;freelancers just starting out who, you know suddenly, which route do you go? Do you go WordPress route, do you go JavaScript, react route? Do you go HTML or CSS? It’s quite hard, so we are taking one side of that, but I think we’ll balance it out and, but I think who it doesn’t suit or won’t suit is going to be the people to do more.&lt;/p&gt;
&lt;p&gt;Complex backend apps, stuff with JavaScript libraries and working in large teams because we have no experience of that and we’re not gonna cover that stuff. So probably exclude those people. I&lt;/p&gt;
&lt;p&gt;[00:14:50] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; think another audience, which you alluded to would be that the, person that I am, which is the person that’s used a bunch of tools.&lt;/p&gt;
&lt;p&gt;But is still interested in what you can do just with a text editor, basically. Yeah. So if you’ve been using a particular, let’s say, page builder or online software, SaaS software that’s enabled you to throw pages and things like that together with point and click interfaces, but you’re curious as to how all that is underpinned and what the technologies are behind it.&lt;/p&gt;
&lt;p&gt;then this hopefully will keep you up to date with some of those bits and pieces. And yeah, if you’re just curious about the web in general, you never know. Yeah, we might stray into more slightly opaque topics as well. So I think that’s who it’s for. Then we’re gonna move on to, why, what was the, what were the things in the web, industry going on behind the scenes that made this show as, an idea in your head?&lt;/p&gt;
&lt;p&gt;What prompted you to come up with this? Yeah, so&lt;/p&gt;
&lt;p&gt;[00:15:51] &lt;strong&gt;David Waumsley:&lt;/strong&gt;  it is all of these changes, which we’ll talk about more in the next couple of episodes. I think we’ll talk about some of the leading voices if you like, but, a big one is browser interoperability. The idea that the big players now who make our browsers have for the first time, come together.&lt;/p&gt;
&lt;p&gt;Couple of years to decide what spec they’re introducing and they been working with css. We’ve got more stuff than we’ve ever had, in a couple of years. It’s speeded up faster than I think, probably the last 20 years in the web, because in the early days it used to be a case that the, web spec was a kind of vague thing, leaving the browsers to go and do.&lt;/p&gt;
&lt;p&gt;Their own interpretation of it, and then they’re competing to be the better browser. We get the browser war, but now that’s come to an end. So that’s a huge shift I think. And we’re seeing so much in terms of layout, really exciting stuff that needed JavaScript animation and kind of popups and.&lt;/p&gt;
&lt;p&gt;Transitions between pages that you would need some big something like React or something to do. that’s massive there.&lt;/p&gt;
&lt;p&gt;[00:17:07] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; I think it’s really, I. Possibly something that you missed. If you’ve only been working on the web for a few years, you, probably didn’t really realize that there was this period of time in which the browsers really fought against each other.&lt;/p&gt;
&lt;p&gt;they did. They implemented things in entirely different ways, meaning that websites that you built were a much more frustrating experience than they are now. Because you would have something which would look different depending on the browser that it was viewed in. And so you had to go through all of these hoops that you had to jump through to make it look the same in Firefox and Internet Explorer as was, and Safari and so on.&lt;/p&gt;
&lt;p&gt;And now those problems have largely gone away. And it’s for the benefit of everybody really, that these, large browser vendors. So you mentioned, Google and Microsoft and Mozilla and all of that. All of these. These organizations are talking to each other because, it just makes sense for, people designing websites, but it also makes sense for people consuming websites because we can do better things more quickly.&lt;/p&gt;
&lt;p&gt;And I think that’s the bit that I missed is because these companies are talking to each other and because these vendors are communicating with each other, the pace of change has really picked up in, yeah, in the last few years. And I missed that. I missed that whole cycle of all the different pieces that have been, made possible.&lt;/p&gt;
&lt;p&gt;And that’s the excitement for me about this. So we’re gonna explore what you may have missed. you may not even have known because you just let your tool do the&lt;/p&gt;
&lt;p&gt;[00:18:38] &lt;strong&gt;David Waumsley:&lt;/strong&gt; work for you. Yeah. And I, it’s partly the w three’s fault for not having very clear specification, but now you’ve got all the browser vendors in with the invited experts really, and it’s one of those systems that they have where unless everybody’s happy, it doesn’t go forward.&lt;/p&gt;
&lt;p&gt;It doesn’t go into the specs. So you’ve got, the global best minds out there. All looking at problems that could be created by adding something to CSS. So there’s, I don’t think there’s ever been a time like that. So at 30 years old, the web suddenly become very adult and things are happening quickly.&lt;/p&gt;
&lt;p&gt;But yeah. The next point we’ve got on there is, oh, I’ve gone out of order, but it’s intrinsic design really, which we mentioned before, which is. it’s not easy to sum up. Do you, have an idea, Nathan, of how that could be summed up in a few words? No. No, I&lt;/p&gt;
&lt;p&gt;[00:19:31] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; really don’t, and I’m, keen not to stumble into sort of getting that wrong, but if you haven’t noticed, there is a trend.&lt;/p&gt;
&lt;p&gt;there’s always trends. There’s always a. A kind of moniker of what, is current in the web, so it, may have been responsive web design for a period of time. We’re now moving into a period of intrinsic web design. I’ve noticed in the WordPress space that we’ve been both very much involved in that.&lt;/p&gt;
&lt;p&gt;This word seems to be. Popping out more and more. the tool that we’ve got is built with intrinsic web design in place. And I guess it’s, just cribbing from the show notes. It’s a reaction to the, mobile web, and the fact that there are, there really isn’t any sensible set of defaults for what.&lt;/p&gt;
&lt;p&gt;the screen size or the dimensions are that your viewers will be looking at your website. And so for a long period of time, it was a desktop, it was a tablet, it was a mobile, and those three things fitted really well. And you could have queries, media queries as they’re called in CSS, so that if it’s a mobile will show this.&lt;/p&gt;
&lt;p&gt;If it’s a desktop, we’ll show this. And I think it’s trying to bridge the gap. To the point where, we have no idea what people are gonna be looking on. It could be any shape or size, and so it’s more about that we don’t care. Yeah. We’re agnostic to the size of it. We’ll show it beautifully, whatever size, and obviously that requires a little bit of backend engineering to make it work rather than three break points.&lt;/p&gt;
&lt;p&gt;You need some technology to say, okay, we don’t care what it is, it’s gonna show beautifully and it’s gonna show fluidly. De no matter what size or shape of device you’re using. Yeah. Would you&lt;/p&gt;
&lt;p&gt;[00:21:11] &lt;strong&gt;David Waumsley:&lt;/strong&gt; say that’s about right? Yeah, I think we’ll do an, we will do an episode actually on this one, and particularly look over Jen Simmons talk, which is now, things have moved on since she made that one.&lt;/p&gt;
&lt;p&gt;for her, it’s, she just felt it was coming into this new age. All of this new stuff had come to CSS, particularly for her CSS grid, where you could, as a designer. Suddenly realized that you could use white space, you can move stuff around. You can have things be very fluid in a way. And for her as a designer side of it, she’s, looking at the fact there’s always been this bit of a compromise between things looking pretty and great and reflecting a brand I.&lt;/p&gt;
&lt;p&gt;And on the other side, making sure that this is good, usable, reusable, readable code that’s accessible for everybody. And there’s been this compromise. You can’t have both. And she thinks now together, we can have this fluid thing that will adapt and, it deserves its own name whether we choose to take it.&lt;/p&gt;
&lt;p&gt;It’s really, I think she mentions it in her talk on it. she could have easily called it, responsive design, but a bit better You. being a adaptive to the that, so that’s definitely, I think this is a, people say it, as you mentioned, I was just listening to, one of the lead developers of WordPress talk about it and how they need to.&lt;/p&gt;
&lt;p&gt;Put that into WordPress and think about it. In fact, it holds back certain things that they might do because they need to accommodate and think of the future. So yeah, it’d be good looking at that. and I guess&lt;/p&gt;
&lt;p&gt;[00:22:40] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; getting back to the browser piece, the, fact is that the browser can really handle a lot of the heavy lifting of, let’s just call it the math.&lt;/p&gt;
&lt;p&gt;That’s going on in the background in order to compute what needs to be done at any particular moment. Yeah. And so the advances in the backend of the browser enable this to happen. And you’ve, it’s not in our show notes, but there was a lovely quote somewhere about actually, maybe it was Jen Simmons that said it, browsers are quite good at maths, so let’s let, or rather, computers are quite good at math, so why don’t we offload all of that stuff to the browser to handle on the fly.&lt;/p&gt;
&lt;p&gt;And our experiences will be. broadly better. So yeah, intrinsic web design, that’s the bus that we’re all on at the moment. Whether or not there’ll be another bus just around the corner coming that we’ve got to hop on, but the least at the beginning of this podcast, that’s, that’s what, that’s the bandwagon we’re on.&lt;/p&gt;
&lt;p&gt;[00:23:31] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, exactly. And I’ve put down here I’m probably misusing the term, I’ve heard Jeremy Ke mention this, who’s a, kind of big player on talking about the web. He’s written a lot of books and, UK guy. but, just that recently, I, feel there’s a sort of sense that because everybody’s invested in making sure that the web platform, HTML and CMS.&lt;/p&gt;
&lt;p&gt;is what everybody’s using. That’s the idea of the W three C is that it is the web for everybody, for everything as well. That it’s the thing that’s powering all the kind of different devices, not just the websites we build, but the apps and even TV and all that kind of other medium. So there has been a sort of splintering offers in the time, and I think we see that.&lt;/p&gt;
&lt;p&gt;Going on. There was a bit of a cold war, if you like, going on. When there was flash and there was web standards, again with Jen Simmers again wouldn’t like it because the flash would’ve given of the pretties and the animation and the web standards would be boring, but more usable. And I think there’s a need to bring that back together.&lt;/p&gt;
&lt;p&gt;That’s what’s making, I think the spec get looked at. Even HTML and stuff like that, because everybody’s reinvested in this, and to a certain degree, there’s been a lot splitting up between. what people do, what are frontend developers suddenly split along the lines because everybody, because there was improvements there, went to the JavaScript route.&lt;/p&gt;
&lt;p&gt;So now a lot of people went to the single, page application route, which is entirely different. So we’ve got the split. So I feel there’s a, the sense where it’s a, shifting back where you might just wanna start with your h html because that’s, there’s no web without html and there’s no styling without CSS.&lt;/p&gt;
&lt;p&gt;It. These two have a hundred percent share of the market. So the other thing’s always. addition. So I can see that moving. that’s another reason for the show to just see that kind of shift. it’s always happening, isn’t it? All the time through the web. Yeah. And the need, oh, sorry.&lt;/p&gt;
&lt;p&gt;You carry on. No, I was gonna say about, I. Just bound in with that is that it’s, really the same point. It is just about following the standards and, stuff and getting back to that because there is we’ll talk about this I think later, but the really, the web’s been a series of hacks where we’ve all done our own things.&lt;/p&gt;
&lt;p&gt;That’s why we’ve needed more JavaScript because the CSS hasn’t given us what we need. And, it does feel like we’re reaching a point now where. Wow, this is great. Almost everything that you would need to at least do layouts at the moment are much more stuff is there and it’s fully documented and it’s a standard of which we all agree by, which has so many people who can veto it that at any point, and it’s the way the browsers are going, that it’s time to embrace those open standards, start to get to the idea that there is this fully documented, even the meetings are documented that we can look to, and I think that’s good for us if we are doing it professionally, which isn’t, this podcast isn’t intended.&lt;/p&gt;
&lt;p&gt;Definitely for people who are freelancers. It could be anybody, but I think, if you are doing it for that, it can give you credibility if you have documentation that you look to. yeah. It’s&lt;/p&gt;
&lt;p&gt;[00:26:40] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; interesting because you may. You may view the evolution of the web, as a splintering, but I guess it, it, has to splinter in order for it to move forward.&lt;/p&gt;
&lt;p&gt;flash came along and honestly, it was the best thing ever when it happened. I know that people hated it and, there were obvious problems with, for example, on mobile phones. It was a complete disaster, but it&lt;/p&gt;
&lt;p&gt;[00:27:04] &lt;strong&gt;David Waumsley:&lt;/strong&gt; showed.&lt;/p&gt;
&lt;p&gt;[00:27:05] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; What could be done. And so it made us all aware, we want things to be able to move around.&lt;/p&gt;
&lt;p&gt;We want things to be able to, I dunno, show a video. We, that’s a really desirable thing to have on the internet. And, we’ve got it. Flash does it, but it’s not a standards thing. It’s, run entirely by this one company. But it showed, okay, there’s a desire for this, there’s an appetite for this, let’s put it in the spec.&lt;/p&gt;
&lt;p&gt;And then, more recently, JavaScript frameworks to, to do animations and things like that. And a whole lot more as well. It shows this is what a modern internet requires. Here’s the things which everybody loves. We, can see, every website is using JavaScript to do this, that, and the other thing.&lt;/p&gt;
&lt;p&gt;It must be what we need. And the point about the W three C and the CSS spec is they can’t, they have to be glacial. They have to move at a very slow and careful pace because once it’s in the spec once a particular thing has gone into the spec. You can’t, maybe you can, but you can’t easily remove it.&lt;/p&gt;
&lt;p&gt;So it has to glo go at a very glacial speed. and so that’s just a another point. although we look at a lot of these splintering things and tot and worry about the splintering of the internet, I think they are the, way that the evolution of the internet has happened and probably will happen in the future.&lt;/p&gt;
&lt;p&gt;[00:28:31] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, I think it’s always gonna be that sort of tension on there. Although it’s interesting at the moment, and I think that’s why it’s there. It’s is because there is that, if you like, the way that the W three C is organized and who it has in and the interest that they have, is that enough to provide us everything that we need from there?&lt;/p&gt;
&lt;p&gt;And that’s the interesting challenge to it. But up to now, we’ve always needed people who have, I mean it’s the same with tables. We started with those tables and that, and of course, it’s a complete violation. Against what the html, this was designed for scientific documents to be passing around.&lt;/p&gt;
&lt;p&gt;Terrible. Using tables for that. And then flash terrible in some ways for what the web is supposed to be. Some of the JavaScripts is an over complication, but not necessarily against it. ’cause the final output is the same. So it’s interesting to see how that’s pulling that way. And I think, also, if you’ve got that under your belt, you’re safe.&lt;/p&gt;
&lt;p&gt;There is the element of open source, open standards. If you learn all of that stuff, you at least that’s your basis and stuff. And then you, we, most of us need to use some sort of tool to organize, which is open source and but to have your entire dependency on your open standards on open source is.&lt;/p&gt;
&lt;p&gt;Something where I think there’s a sort of need to go back and look at what you can do yourself, without necessarily always relying on a tool. Yeah. So yeah, I think there’s that element and, oh, the general, what, there’s so many different points that we’ve got down here that we could talk about.&lt;/p&gt;
&lt;p&gt;I’ve put actually a bullet point web for everyone, but I’ve pretty much covered that. Really. I think that’s just, I think they’re coming together more of people You can see a real excitement about. there’s never been over the last five years, I think for the idea of going back to HTML and css, we thought those days were behind us, didn’t we, Nathan? We thought we just.&lt;/p&gt;
&lt;p&gt;[00:30:21] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah, and it, is interesting because I haven’t tried to deliberately collide with this topic. I haven’t gone out searching for information about this, but I have noticed that my social. Channels, they are beginning to fill up with this. And the more that I look at it, the more I see.&lt;/p&gt;
&lt;p&gt;maybe that’s a function of the algorithms at play, but nevertheless, I’m definitely seeing that there’s an appetite for this and why not? why wouldn’t there be? It just makes sense to if the browser can do it. Then use what the browser has. It makes absolute sense and I think that, I could be wrong, but maybe in the next year, two years, three years, I think a lot of the things that we’re gonna be covering in the next few weeks will become foundational to what everybody does.&lt;/p&gt;
&lt;p&gt;[00:31:07] &lt;strong&gt;David Waumsley:&lt;/strong&gt; I’ve also, I’ve just remembered why I wrote. That’s that note. the web for everyone. What I’m talking about is what there has been recently, over recent years, which we’ve not thought about so much, is things about accessibility, performance, green issues, global data costs, reducing dark patterns, security issues, data issues.&lt;/p&gt;
&lt;p&gt;All of these things have become much more prominent now. It was just enough to sign and get something out there, but we, have to look into things like accessibility might. Come into European law in the same way that we’re seeing things with, data sharing before that. So I think, that’s a lot of about, these are all the sort of things that are going on as well, and we can explore those, I think a lot better when we’re looking at how the foundations of the web platform, H-M-L-C-S-S, JavaScript and SVGs is made.&lt;/p&gt;
&lt;p&gt;So that’s another reason for the show. Yeah, and&lt;/p&gt;
&lt;p&gt;[00:31:58] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; you went through that list. You tripped through that list very, quickly. But if you actually. think about each one of those one at a time. There is a, there really is some importance attached to those. So if we just take the green web, just that one in particular, we could probably do episode after episode on that.&lt;/p&gt;
&lt;p&gt;this, the whole environmental debate is not going away. It’s getting more and more important, but we seem to be, using our devices more and more rather than less and less and we know what that’s doing. So having solutions or. Having implementations of technology, which allow us to view things on the website with the minimal amount of engineering in the backend to get whatever it is that you are wanting to see in front of your eyeballs.&lt;/p&gt;
&lt;p&gt;That’s really important. And so if you can cut by a third or a half or. Three-fifths or whatever it may be, the amount of CPU that’s being used, just that environmental bit alone is really important. And obviously you listed a whole bunch of others there, so we can drill into those, but it’s gonna become more and more important.&lt;/p&gt;
&lt;p&gt;Yeah. That’s encapsulated&lt;/p&gt;
&lt;p&gt;[00:33:01] &lt;strong&gt;David Waumsley:&lt;/strong&gt; in this. Yeah. So on our site, we haven’t put this first episode up obviously yet, but we’re going to use the browser’s own player initially, Elise, because, and I think that’s that move with green issues. if the browser can do more for us, then we have to do less work and it’s a lot sensible, more sensible because it’s already on the computer anyway.&lt;/p&gt;
&lt;p&gt;So rather than us having to pump out a whole load of code and extra resources to provide that to the viewer. It’s already there in their browser. Yeah. It’s interesting.&lt;/p&gt;
&lt;p&gt;[00:33:31] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; So the possibilities, the options for us to play just the player of the audio on the website, that, we could have probably picked a hundred different JavaScript based solutions, but we settled for the one which requires nothing.&lt;/p&gt;
&lt;p&gt;It’s just, and what does it do? It does everything that you want it to do. Yeah. It’s not flashy and whizzbang, but it does it. But curiously, interestingly, just that one thing, it displays differently in different browsers, which are, you showed me that in Firefox, it, has a completely different look and feel.&lt;/p&gt;
&lt;p&gt;And there’s various things that are available in Chrome that aren’t available in Firefox, for example, play, a speed. You can’t speed it up to one and a half times and all that. So there’s gonna be loads in all this. Oh yeah. But yeah, we’re, going minimal. We’re definitely going minimal using what the browser can do.&lt;/p&gt;
&lt;p&gt;Yeah.&lt;/p&gt;
&lt;p&gt;[00:34:14] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, and I think, just for a while I would’ve thought if you wanted to call yourself a developer, I’ve always felt like this. And now I feel a little bit more, happy about the idea of learning what I’m learning now. Because I think if you thought of developers, I never would dare to call myself that.&lt;/p&gt;
&lt;p&gt;I know you, you are the same with safe work. Because front end there hasn’t been that because this CSS and has all been these kind of hacks and tricks and you’re just messing around with what should be actually a very simple language. It’s a declarative language, which is, one of the best things about the web, if you are using HTML and CSS, if you mess it up, the browser will still cope with it.&lt;/p&gt;
&lt;p&gt;It’ll just ignore the rubbish that you’ve put in there, which something like JavaScript, all these other. Programmer languages would need to do. But I think it’s now because there’s a sort of system developing that there’s a chance now for us as frontend developers to use what is basically a simple setup, if you like, that’s forgiving and, but still do it in a very creditable way.&lt;/p&gt;
&lt;p&gt;So I think there’s a credibility for being a frontend developer in a way that. Ally, there is a very complex system in CSS that didn’t really exist before. It’s a little bit hacky and the proper developers would just do anything to stick tailwind in instead and not have to deal with all that nonsense.&lt;/p&gt;
&lt;p&gt;And I think that’s changing. yeah. Yeah, so,&lt;/p&gt;
&lt;p&gt;[00:35:35] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; there’s a route to employability really here as well, isn’t there? if you can, work out what, the browser can do for you, you can obviously. Tout that as something that you can do and you can express your green credentials and so on.&lt;/p&gt;
&lt;p&gt;But, but yeah. Interesting. How much. Has changed in the recent past and how much I’ve got to learn. but yeah, we’ll see as time goes on. Okay. What’s next?&lt;/p&gt;
&lt;p&gt;[00:35:59] &lt;strong&gt;David Waumsley:&lt;/strong&gt; no, I think that’s probably just, we have got a few other little points, but I think maybe we’ve covered it. But you just said something which just prompted me, something I’m sure we’ll get into later.&lt;/p&gt;
&lt;p&gt;which is the power that a front end developer now has with this intrinsic design. I was mentioning this to you before and it relates to again, Jed Simmons. Talk about the fact that. The tradition of web design has always been that someone has the idea, you do a low-fi version of it, then a high-fi version of it, and then you hand it over to the front end developer to code it up or whoever that is.&lt;/p&gt;
&lt;p&gt;Whereas now, because there is so much to think about with this performance accessibility, how these will display on different platforms, you’re not got just three devices you’re looking at. Suddenly there’s a power with, the people who are doing the front end. So just learning a bit of HTML and CSS you, you can become quite a powerful person in the whole design process, I think.&lt;/p&gt;
&lt;p&gt;[00:36:53] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah, it’s definitely a route to employability, but as I said, for me at the minute, it’s not because I just simply don’t know it. So if, as you’re listening to this, any of this is, rung a bell and you think, Yeah, maybe there’s some, maybe there’s some learning that’s gonna happen in this podcast.&lt;/p&gt;
&lt;p&gt;Yeah. Go and visit the site. I don’t know as yet how we’re gonna do things like subscribing. You can obviously do that, in your podcast player of choice. Again, give us time to, to get a feed going and all of that. We’ve gotta work all of that out. But the website will be called no Script Show.&lt;/p&gt;
&lt;p&gt;[00:37:29] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Yeah, it’ll have a, it’ll, have a rubbish logo.&lt;/p&gt;
&lt;p&gt;’cause we might even talk about that later. Throw it open. ’cause we just wanna cover everything, don’t we? We might do when we’re actually building a site. And the thought process, if we can with this. do you think we’ve probably talked for long enough on this first&lt;/p&gt;
&lt;p&gt;[00:37:43] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; episode? I think so. I think we’ve explained really what the premise of the whole show is.&lt;/p&gt;
&lt;p&gt;So hopefully, dear listener, you have understood what we’re trying to do. Stay with us. and hopefully we’ll achieve it in the days, weeks, and months to come,&lt;/p&gt;
&lt;p&gt;[00:37:57] &lt;strong&gt;David Waumsley:&lt;/strong&gt; yeah. Yeah. Can I’ve actually got a, bit of a, shall I just say what I think is next up? Yeah. I’ve sent you the, yeah, I think, if we are all agreeing and people are sticking with us, that there is a bit of a paradigm shift on there, the fundamentals, as we’ve said about web design.&lt;/p&gt;
&lt;p&gt;Completely changed. So conversations you and I have had on the other podcast for seven years can be revisited with a new light again. But I think maybe for next time, the best places to start is with the CSS and what the changes there actually mean for us. And Most, a lot of people are just not author authoring, CSS themselves.&lt;/p&gt;
&lt;p&gt;you and I included first yeah, Melvin in again, we use third party platforms, but I think now it’s been massively refactored into something more comprehensive and logical. It’s probably start with, someone who’s better explaining that. So what we’ll try and do is have a look at, Rachel Andrews, who’s.&lt;/p&gt;
&lt;p&gt;Somebody who pretty much, almost is a one woman mission, I think to get CSS good to us. she’s a real expert in this. so we’ll look at some of the stuff that she says about that. And even if you are not thinking of getting into CSS or coding it yourself, I still think it’s quite useful because it might allow you to evaluate something like a framework that you want to use.&lt;/p&gt;
&lt;p&gt;Which one’s gonna be best for you? That kind of foundational knowledge. ’cause Stephanie, things have changed. So I think that’s what we’ll cover next. We’ll start with the dreaded CSS.&lt;/p&gt;
&lt;p&gt;[00:39:24] &lt;strong&gt;Nathan Wrigley:&lt;/strong&gt; Yeah. And just as a little addendum to that, if, you tune into that episode, I, it’s more or less guaranteed if you haven’t been keeping up to date with it, that you’re, there’s gonna be some little nugget that you didn’t even know, David’s been drip feeding me for months.&lt;/p&gt;
&lt;p&gt;Now. All of these little bits and pieces that he’s been discovering and. Honestly they’re buried. You have to go find them. And so it’s it’s fascinating and hopefully we’ll surface some of those. Yeah. So I guess that’s a wrap on the first. It’s no script show. I dunno if we’re even gonna call it that. I think it might be called the no script web show or a variant thereof.&lt;/p&gt;
&lt;p&gt;We’ll see. But the URL wants more. No, no script show. That’s it. Episode number one is done. Yeah. Thank you. We’ll be back at some point.&lt;/p&gt;
&lt;p&gt;[00:40:07] &lt;strong&gt;David Waumsley:&lt;/strong&gt; Thanks David. Yep. Bye-Bye.&lt;/p&gt;
&lt;/details&gt;</content>
  </entry>
</feed>